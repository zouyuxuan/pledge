type helloERC20::pledge::pledge::_owner::ContractState = Struct<ut@helloERC20::pledge::pledge::_owner::ContractState>;
type helloERC20::pledge::pledge::total_supply::ContractState = Struct<ut@helloERC20::pledge::pledge::total_supply::ContractState>;
type helloERC20::pledge::pledge::total_pledge::ContractState = Struct<ut@helloERC20::pledge::pledge::total_pledge::ContractState>;
type helloERC20::pledge::pledge::burn_total::ContractState = Struct<ut@helloERC20::pledge::pledge::burn_total::ContractState>;
type helloERC20::pledge::pledge::pledge_rate::ContractState = Struct<ut@helloERC20::pledge::pledge::pledge_rate::ContractState>;
type helloERC20::pledge::pledge::white_list::ContractState = Struct<ut@helloERC20::pledge::pledge::white_list::ContractState>;
type helloERC20::pledge::pledge::token_account::ContractState = Struct<ut@helloERC20::pledge::pledge::token_account::ContractState>;
type helloERC20::pledge::pledge::pledge_account::ContractState = Struct<ut@helloERC20::pledge::pledge::pledge_account::ContractState>;
type helloERC20::pledge::pledge::pledge_account_info::ContractState = Struct<ut@helloERC20::pledge::pledge::pledge_account_info::ContractState>;
type helloERC20::pledge::pledge::ContractState = Struct<ut@helloERC20::pledge::pledge::ContractState, helloERC20::pledge::pledge::_owner::ContractState, helloERC20::pledge::pledge::total_supply::ContractState, helloERC20::pledge::pledge::total_pledge::ContractState, helloERC20::pledge::pledge::burn_total::ContractState, helloERC20::pledge::pledge::pledge_rate::ContractState, helloERC20::pledge::pledge::white_list::ContractState, helloERC20::pledge::pledge::token_account::ContractState, helloERC20::pledge::pledge::pledge_account::ContractState, helloERC20::pledge::pledge::pledge_account_info::ContractState>;
type GasBuiltin = GasBuiltin;
type System = System;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type Unit = Struct<ut@Tuple>;
type Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::total_supply::ContractState, Unit>;
type core::panics::Panic = Struct<ut@core::panics::Panic>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type Tuple<core::panics::Panic, Array<felt252>> = Struct<ut@Tuple, core::panics::Panic, Array<felt252>>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type ContractAddress = ContractAddress;
type Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::_owner::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type u8 = u8;
type Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type RangeCheck = RangeCheck;
type Pedersen = Pedersen;
type Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::token_account::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, Tuple<helloERC20::pledge::pledge::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Snapshot<Array<felt252>> = Snapshot<Array<felt252>>;
type core::array::Span::<core::felt252> = Struct<ut@core::array::Span::<core::felt252>, Snapshot<Array<felt252>>>;
type u32 = u32;
type Tuple<core::array::Span::<core::felt252>> = Struct<ut@Tuple, core::array::Span::<core::felt252>>;
type core::panics::PanicResult::<(core::array::Span::<core::felt252>,)> = Enum<ut@core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, Tuple<core::array::Span::<core::felt252>>, Tuple<core::panics::Panic, Array<felt252>>>;
type BuiltinCosts = BuiltinCosts;
type Tuple<core::integer::u256> = Struct<ut@Tuple, core::integer::u256>;
type core::panics::PanicResult::<(core::integer::u256,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u256,)>, Tuple<core::integer::u256>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::option::Option::<core::starknet::contract_address::ContractAddress> = Enum<ut@core::option::Option::<core::starknet::contract_address::ContractAddress>, ContractAddress, Unit>;
type core::option::Option::<core::integer::u256> = Enum<ut@core::option::Option::<core::integer::u256>, core::integer::u256, Unit>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Tuple<helloERC20::pledge::pledge::ContractState, core::bool> = Struct<ut@Tuple, helloERC20::pledge::pledge::ContractState, core::bool>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, Tuple<helloERC20::pledge::pledge::ContractState, core::bool>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256> = Struct<ut@Tuple, helloERC20::pledge::pledge::ContractState, core::integer::u256>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::option::Option::<core::integer::u8> = Enum<ut@core::option::Option::<core::integer::u8>, u8, Unit>;
type u64 = u64;
type core::option::Option::<core::integer::u64> = Enum<ut@core::option::Option::<core::integer::u64>, u64, Unit>;
type helloERC20::pledge::PledgeInfo = Struct<ut@helloERC20::pledge::PledgeInfo, u64, core::integer::u256, u64, core::bool, core::integer::u256, core::integer::u256>;
type Tuple<helloERC20::pledge::PledgeInfo> = Struct<ut@Tuple, helloERC20::pledge::PledgeInfo>;
type core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, Tuple<helloERC20::pledge::PledgeInfo>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::ContractState, felt252> = Struct<ut@Tuple, helloERC20::pledge::pledge::ContractState, felt252>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, Tuple<helloERC20::pledge::pledge::ContractState, felt252>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::option::Option::<core::felt252> = Enum<ut@core::option::Option::<core::felt252>, felt252, Unit>;
type StorageBaseAddress = StorageBaseAddress;
type core::result::Result::<(), core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<(), core::array::Array::<core::felt252>>, Unit, Array<felt252>>;
type Tuple<Unit> = Struct<ut@Tuple, Unit>;
type core::panics::PanicResult::<((),)> = Enum<ut@core::panics::PanicResult::<((),)>, Tuple<Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type StorageAddress = StorageAddress;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;
type Tuple<ContractAddress> = Struct<ut@Tuple, ContractAddress>;
type core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)> = Enum<ut@core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, Tuple<ContractAddress>, Tuple<core::panics::Panic, Array<felt252>>>;
type NonZero<felt252> = NonZero<felt252>;
type Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::white_list::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Box<felt252> = Box<felt252>;
type core::option::Option::<core::box::Box::<@core::felt252>> = Enum<ut@core::option::Option::<core::box::Box::<@core::felt252>>, Box<felt252>, Unit>;
type Tuple<u64> = Struct<ut@Tuple, u64>;
type core::panics::PanicResult::<(core::integer::u64,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u64,)>, Tuple<u64>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::total_pledge::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<felt252> = Struct<ut@Tuple, felt252>;
type core::panics::PanicResult::<(core::felt252,)> = Enum<ut@core::panics::PanicResult::<(core::felt252,)>, Tuple<felt252>, Tuple<core::panics::Panic, Array<felt252>>>;
type helloERC20::pledge::pledge::withdraw = Struct<ut@helloERC20::pledge::pledge::withdraw, ContractAddress, core::integer::u256>;
type Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>> = Struct<ut@Tuple, helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::burn_total::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit> = Struct<ut@Tuple, helloERC20::pledge::pledge::pledge_account::ContractState, Unit>;
type core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())> = Enum<ut@core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>, Tuple<core::panics::Panic, Array<felt252>>>;
type helloERC20::pledge::pledge::TransferStarking = Struct<ut@helloERC20::pledge::pledge::TransferStarking, ContractAddress, felt252>;
type core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, core::integer::u256, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, ContractAddress, Array<felt252>>;
type Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::starknet::info::BlockInfo = Struct<ut@core::starknet::info::BlockInfo, u64, u64, ContractAddress>;
type Box<core::starknet::info::BlockInfo> = Box<core::starknet::info::BlockInfo>;
type core::starknet::info::TxInfo = Struct<ut@core::starknet::info::TxInfo, felt252, ContractAddress, u128, core::array::Span::<core::felt252>, felt252, felt252, felt252>;
type Box<core::starknet::info::TxInfo> = Box<core::starknet::info::TxInfo>;
type core::starknet::info::ExecutionInfo = Struct<ut@core::starknet::info::ExecutionInfo, Box<core::starknet::info::BlockInfo>, Box<core::starknet::info::TxInfo>, ContractAddress, ContractAddress, felt252>;
type Box<core::starknet::info::ExecutionInfo> = Box<core::starknet::info::ExecutionInfo>;
type Tuple<Box<core::starknet::info::ExecutionInfo>> = Struct<ut@Tuple, Box<core::starknet::info::ExecutionInfo>>;
type core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)> = Enum<ut@core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, Tuple<Box<core::starknet::info::ExecutionInfo>>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<Box<core::starknet::info::BlockInfo>> = Struct<ut@Tuple, Box<core::starknet::info::BlockInfo>>;
type core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)> = Enum<ut@core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, Tuple<Box<core::starknet::info::BlockInfo>>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<(), core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::result::Result::<core::felt252, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, felt252, Array<felt252>>;
type core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, helloERC20::pledge::PledgeInfo, Array<felt252>>;
type Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u64, core::integer::u64> = Enum<ut@core::result::Result::<core::integer::u64, core::integer::u64>, u64, u64>;
type helloERC20::pledge::pledge::Event = Enum<ut@helloERC20::pledge::pledge::Event, helloERC20::pledge::pledge::TransferStarking, helloERC20::pledge::pledge::withdraw>;
type Tuple<u8> = Struct<ut@Tuple, u8>;
type core::panics::PanicResult::<(core::integer::u8,)> = Enum<ut@core::panics::PanicResult::<(core::integer::u8,)>, Tuple<u8>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, u128, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type Tuple<u128, u128> = Struct<ut@Tuple, u128, u128>;
type core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, Box<core::starknet::info::ExecutionInfo>, Array<felt252>>;
type Tuple<core::integer::u256, core::bool> = Struct<ut@Tuple, core::integer::u256, core::bool>;
type core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, u64, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>> = Enum<ut@core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, u8, Array<felt252>>;
type Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = Struct<ut@Tuple, core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
type core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)> = Enum<ut@core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type NonZero<core::integer::u256> = NonZero<core::integer::u256>;
type core::option::Option::<core::zeroable::NonZero::<core::integer::u256>> = Enum<ut@core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, NonZero<core::integer::u256>, Unit>;
type Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = Struct<ut@Tuple, core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
type core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)> = Enum<ut@core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>, Tuple<core::panics::Panic, Array<felt252>>>;
type U128MulGuarantee = U128MulGuarantee;
type Tuple<core::integer::u256, core::integer::u256> = Struct<ut@Tuple, core::integer::u256, core::integer::u256>;
type Tuple<u128, core::bool> = Struct<ut@Tuple, u128, core::bool>;
type core::result::Result::<core::integer::u8, core::integer::u8> = Enum<ut@core::result::Result::<core::integer::u8, core::integer::u8>, u8, u8>;
type Tuple<NonZero<core::integer::u256>> = Struct<ut@Tuple, NonZero<core::integer::u256>>;
type core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)> = Enum<ut@core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, Tuple<NonZero<core::integer::u256>>, Tuple<core::panics::Panic, Array<felt252>>>;

libfunc struct_deconstruct<helloERC20::pledge::pledge::ContractState> = struct_deconstruct<helloERC20::pledge::pledge::ContractState>;
libfunc store_temp<GasBuiltin> = store_temp<GasBuiltin>;
libfunc store_temp<System> = store_temp<System>;
libfunc store_temp<helloERC20::pledge::pledge::total_supply::ContractState> = store_temp<helloERC20::pledge::pledge::total_supply::ContractState>;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>>;
libfunc drop<Unit> = drop<Unit>;
libfunc store_temp<helloERC20::pledge::pledge::_owner::ContractState> = store_temp<helloERC20::pledge::pledge::_owner::ContractState>;
libfunc dup<ContractAddress> = dup<ContractAddress>;
libfunc store_temp<ContractAddress> = store_temp<ContractAddress>;
libfunc function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>>;
libfunc store_temp<helloERC20::pledge::pledge::pledge_rate::ContractState> = store_temp<helloERC20::pledge::pledge::pledge_rate::ContractState>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<helloERC20::pledge::pledge::token_account::ContractState> = store_temp<helloERC20::pledge::pledge::token_account::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>;
libfunc struct_construct<helloERC20::pledge::pledge::ContractState> = struct_construct<helloERC20::pledge::pledge::ContractState>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>;
libfunc drop<helloERC20::pledge::pledge::pledge_account_info::ContractState> = drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>;
libfunc drop<helloERC20::pledge::pledge::pledge_account::ContractState> = drop<helloERC20::pledge::pledge::pledge_account::ContractState>;
libfunc drop<helloERC20::pledge::pledge::_owner::ContractState> = drop<helloERC20::pledge::pledge::_owner::ContractState>;
libfunc drop<helloERC20::pledge::pledge::white_list::ContractState> = drop<helloERC20::pledge::pledge::white_list::ContractState>;
libfunc drop<helloERC20::pledge::pledge::pledge_rate::ContractState> = drop<helloERC20::pledge::pledge::pledge_rate::ContractState>;
libfunc drop<helloERC20::pledge::pledge::burn_total::ContractState> = drop<helloERC20::pledge::pledge::burn_total::ContractState>;
libfunc drop<helloERC20::pledge::pledge::total_pledge::ContractState> = drop<helloERC20::pledge::pledge::total_pledge::ContractState>;
libfunc drop<helloERC20::pledge::pledge::total_supply::ContractState> = drop<helloERC20::pledge::pledge::total_supply::ContractState>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc drop<ContractAddress> = drop<ContractAddress>;
libfunc drop<helloERC20::pledge::pledge::token_account::ContractState> = drop<helloERC20::pledge::pledge::token_account::ContractState>;
libfunc drop<u8> = drop<u8>;
libfunc struct_construct<helloERC20::pledge::pledge::_owner::ContractState> = struct_construct<helloERC20::pledge::pledge::_owner::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::total_supply::ContractState> = struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState> = struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::burn_total::ContractState> = struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState> = struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::white_list::ContractState> = struct_construct<helloERC20::pledge::pledge::white_list::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::token_account::ContractState> = struct_construct<helloERC20::pledge::pledge::token_account::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState> = struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>;
libfunc struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState> = struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>;
libfunc store_temp<helloERC20::pledge::pledge::ContractState> = store_temp<helloERC20::pledge::pledge::ContractState>;
libfunc revoke_ap_tracking = revoke_ap_tracking;
libfunc withdraw_gas = withdraw_gas;
libfunc struct_deconstruct<core::array::Span::<core::felt252>> = struct_deconstruct<core::array::Span::<core::felt252>>;
libfunc array_len<felt252> = array_len<felt252>;
libfunc snapshot_take<u32> = snapshot_take<u32>;
libfunc drop<u32> = drop<u32>;
libfunc u32_const<0> = u32_const<0>;
libfunc rename<u32> = rename<u32>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc u32_eq = u32_eq;
libfunc function_call<user@core::starknet::use_system_implicit> = function_call<user@core::starknet::use_system_implicit>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc felt252_const<7733229381460288120802334208475838166080759535023995805565484692595> = felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<core::panics::Panic> = struct_construct<core::panics::Panic>;
libfunc struct_construct<Tuple<core::panics::Panic, Array<felt252>>> = struct_construct<Tuple<core::panics::Panic, Array<felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>> = store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>;
libfunc get_builtin_costs = get_builtin_costs;
libfunc store_temp<BuiltinCosts> = store_temp<BuiltinCosts>;
libfunc withdraw_gas_all = withdraw_gas_all;
libfunc snapshot_take<helloERC20::pledge::pledge::ContractState> = snapshot_take<helloERC20::pledge::pledge::ContractState>;
libfunc drop<helloERC20::pledge::pledge::ContractState> = drop<helloERC20::pledge::pledge::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_supply> = function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_supply>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u256,)>> = enum_match<core::panics::PanicResult::<(core::integer::u256,)>>;
libfunc struct_deconstruct<Tuple<core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256>>;
libfunc snapshot_take<core::integer::u256> = snapshot_take<core::integer::u256>;
libfunc store_temp<Array<felt252>> = store_temp<Array<felt252>>;
libfunc function_call<user@core::integer::u256Serde::serialize> = function_call<user@core::integer::u256Serde::serialize>;
libfunc snapshot_take<Array<felt252>> = snapshot_take<Array<felt252>>;
libfunc drop<Array<felt252>> = drop<Array<felt252>>;
libfunc struct_construct<core::array::Span::<core::felt252>> = struct_construct<core::array::Span::<core::felt252>>;
libfunc struct_construct<Tuple<core::array::Span::<core::felt252>>> = struct_construct<Tuple<core::array::Span::<core::felt252>>>;
libfunc enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0> = enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>;
libfunc felt252_const<375233589013918064796019> = felt252_const<375233589013918064796019>;
libfunc drop<core::array::Span::<core::felt252>> = drop<core::array::Span::<core::felt252>>;
libfunc store_temp<core::array::Span::<core::felt252>> = store_temp<core::array::Span::<core::felt252>>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>;
libfunc enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>> = enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc function_call<user@core::integer::u256Serde::deserialize> = function_call<user@core::integer::u256Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u256>> = enum_match<core::option::Option::<core::integer::u256>>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::add_white_list> = function_call<user@helloERC20::pledge::pledge::token_pledge::add_white_list>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>;
libfunc snapshot_take<core::bool> = snapshot_take<core::bool>;
libfunc drop<core::bool> = drop<core::bool>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc function_call<user@core::BoolSerde::serialize> = function_call<user@core::BoolSerde::serialize>;
libfunc felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243> = felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::claim> = function_call<user@helloERC20::pledge::pledge::token_pledge::claim>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>;
libfunc function_call<user@core::integer::U8Serde::deserialize> = function_call<user@core::integer::U8Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u8>> = enum_match<core::option::Option::<core::integer::u8>>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::set_rate> = function_call<user@helloERC20::pledge::pledge::token_pledge::set_rate>;
libfunc function_call<user@core::integer::U64Serde::deserialize> = function_call<user@core::integer::U64Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u64>> = enum_match<core::option::Option::<core::integer::u64>>;
libfunc drop<u64> = drop<u64>;
libfunc store_temp<u64> = store_temp<u64>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::pledge_token> = function_call<user@helloERC20::pledge::pledge::token_pledge::pledge_token>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::get_token_by_address> = function_call<user@helloERC20::pledge::pledge::token_pledge::get_token_by_address>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::get_pledge_account_by_address> = function_call<user@helloERC20::pledge::pledge::token_pledge::get_pledge_account_by_address>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>> = struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>;
libfunc snapshot_take<helloERC20::pledge::PledgeInfo> = snapshot_take<helloERC20::pledge::PledgeInfo>;
libfunc drop<helloERC20::pledge::PledgeInfo> = drop<helloERC20::pledge::PledgeInfo>;
libfunc store_temp<helloERC20::pledge::PledgeInfo> = store_temp<helloERC20::pledge::PledgeInfo>;
libfunc function_call<user@helloERC20::pledge::PledgeInfoSerde::serialize> = function_call<user@helloERC20::pledge::PledgeInfoSerde::serialize>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew> = function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew_profit> = function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew_profit>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_pledge> = function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_pledge>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::sell_starking> = function_call<user@helloERC20::pledge::pledge::token_pledge::sell_starking>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>>;
libfunc snapshot_take<felt252> = snapshot_take<felt252>;
libfunc drop<felt252> = drop<felt252>;
libfunc function_call<user@core::Felt252Serde::serialize> = function_call<user@core::Felt252Serde::serialize>;
libfunc function_call<user@core::Felt252Serde::deserialize> = function_call<user@core::Felt252Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::felt252>> = enum_match<core::option::Option::<core::felt252>>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::check_onsell_starking> = function_call<user@helloERC20::pledge::pledge::token_pledge::check_onsell_starking>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::buy_starking> = function_call<user@helloERC20::pledge::pledge::token_pledge::buy_starking>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::transfer_starking> = function_call<user@helloERC20::pledge::pledge::token_pledge::transfer_starking>;
libfunc function_call<user@helloERC20::pledge::pledge::token_pledge::get_burn> = function_call<user@helloERC20::pledge::pledge::token_pledge::get_burn>;
libfunc function_call<user@helloERC20::pledge::pledge::constructor> = function_call<user@helloERC20::pledge::pledge::constructor>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>;
libfunc drop<Tuple<helloERC20::pledge::pledge::ContractState, Unit>> = drop<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>;
libfunc snapshot_take<helloERC20::pledge::pledge::total_supply::ContractState> = snapshot_take<helloERC20::pledge::pledge::total_supply::ContractState>;
libfunc storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646> = storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>;
libfunc store_temp<StorageBaseAddress> = store_temp<StorageBaseAddress>;
libfunc function_call<user@core::integer::Storeu256::write> = function_call<user@core::integer::Storeu256::write>;
libfunc rename<core::result::Result::<(), core::array::Array::<core::felt252>>> = rename<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>;
libfunc enum_match<core::panics::PanicResult::<((),)>> = enum_match<core::panics::PanicResult::<((),)>>;
libfunc struct_deconstruct<Tuple<Unit>> = struct_deconstruct<Tuple<Unit>>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 1>;
libfunc snapshot_take<helloERC20::pledge::pledge::_owner::ContractState> = snapshot_take<helloERC20::pledge::pledge::_owner::ContractState>;
libfunc storage_base_address_const<784875164039100399579447185504448607377760708865195644450792957979080027814> = storage_base_address_const<784875164039100399579447185504448607377760708865195644450792957979080027814>;
libfunc contract_address_to_felt252 = contract_address_to_felt252;
libfunc storage_address_from_base = storage_address_from_base;
libfunc store_temp<StorageAddress> = store_temp<StorageAddress>;
libfunc storage_write_syscall = storage_write_syscall;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 1>;
libfunc snapshot_take<helloERC20::pledge::pledge::pledge_rate::ContractState> = snapshot_take<helloERC20::pledge::pledge::pledge_rate::ContractState>;
libfunc storage_base_address_const<1164458144253964663622203478451439654351894770488648785536109950361477525610> = storage_base_address_const<1164458144253964663622203478451439654351894770488648785536109950361477525610>;
libfunc u8_to_felt252 = u8_to_felt252;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 1>;
libfunc snapshot_take<helloERC20::pledge::pledge::token_account::ContractState> = snapshot_take<helloERC20::pledge::pledge::token_account::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::address> = function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::address>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 1>;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::read>;
libfunc struct_construct<Tuple<core::integer::u256>> = struct_construct<Tuple<core::integer::u256>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u256,)>> = store_temp<core::panics::PanicResult::<(core::integer::u256,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc drop<u128> = drop<u128>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@core::integer::U128Serde::serialize> = function_call<user@core::integer::U128Serde::serialize>;
libfunc rename<Array<felt252>> = rename<Array<felt252>>;
libfunc rename<Unit> = rename<Unit>;
libfunc contract_address_try_from_felt252 = contract_address_try_from_felt252;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>;
libfunc store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>> = store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1> = enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>;
libfunc function_call<user@core::integer::U128Serde::deserialize> = function_call<user@core::integer::U128Serde::deserialize>;
libfunc enum_match<core::option::Option::<core::integer::u128>> = enum_match<core::option::Option::<core::integer::u128>>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 0> = enum_init<core::option::Option::<core::integer::u256>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u256>> = store_temp<core::option::Option::<core::integer::u256>>;
libfunc enum_init<core::option::Option::<core::integer::u256>, 1> = enum_init<core::option::Option::<core::integer::u256>, 1>;
libfunc function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read>;
libfunc enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc struct_deconstruct<Tuple<ContractAddress>> = struct_deconstruct<Tuple<ContractAddress>>;
libfunc snapshot_take<ContractAddress> = snapshot_take<ContractAddress>;
libfunc function_call<user@core::starknet::info::get_caller_address> = function_call<user@core::starknet::info::get_caller_address>;
libfunc rename<ContractAddress> = rename<ContractAddress>;
libfunc rename<felt252> = rename<felt252>;
libfunc felt252_sub = felt252_sub;
libfunc felt252_is_zero = felt252_is_zero;
libfunc function_call<user@core::integer::U256Add::add> = function_call<user@core::integer::U256Add::add>;
libfunc store_temp<helloERC20::pledge::pledge::white_list::ContractState> = store_temp<helloERC20::pledge::pledge::white_list::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>> = struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>;
libfunc drop<NonZero<felt252>> = drop<NonZero<felt252>>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc felt252_const<0> = felt252_const<0>;
libfunc felt252_const<1> = felt252_const<1>;
libfunc snapshot_take<helloERC20::pledge::pledge::white_list::ContractState> = snapshot_take<helloERC20::pledge::pledge::white_list::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::read>;
libfunc u128_const<0> = u128_const<0>;
libfunc function_call<user@core::integer::U256PartialOrd::lt> = function_call<user@core::integer::U256PartialOrd::lt>;
libfunc felt252_const<161401467795617803061580884180588437012817527057966> = felt252_const<161401467795617803061580884180588437012817527057966>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>> = struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 0>;
libfunc array_snapshot_pop_front<felt252> = array_snapshot_pop_front<felt252>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>;
libfunc store_temp<Snapshot<Array<felt252>>> = store_temp<Snapshot<Array<felt252>>>;
libfunc store_temp<core::option::Option::<core::box::Box::<@core::felt252>>> = store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1> = enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>;
libfunc enum_match<core::option::Option::<core::box::Box::<@core::felt252>>> = enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>;
libfunc unbox<felt252> = unbox<felt252>;
libfunc function_call<user@core::integer::Felt252TryIntoU8::try_into> = function_call<user@core::integer::Felt252TryIntoU8::try_into>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 0> = enum_init<core::option::Option::<core::integer::u8>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u8>> = store_temp<core::option::Option::<core::integer::u8>>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 1> = enum_init<core::option::Option::<core::integer::u8>, 1>;
libfunc function_call<user@core::integer::Felt252TryIntoU64::try_into> = function_call<user@core::integer::Felt252TryIntoU64::try_into>;
libfunc enum_init<core::option::Option::<core::integer::u64>, 0> = enum_init<core::option::Option::<core::integer::u64>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u64>> = store_temp<core::option::Option::<core::integer::u64>>;
libfunc enum_init<core::option::Option::<core::integer::u64>, 1> = enum_init<core::option::Option::<core::integer::u64>, 1>;
libfunc function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read>;
libfunc felt252_const<2507126091094776162901448509332734859662878052> = felt252_const<2507126091094776162901448509332734859662878052>;
libfunc bool_not_impl = bool_not_impl;
libfunc felt252_const<599474618788436722076633882042527332> = felt252_const<599474618788436722076633882042527332>;
libfunc function_call<user@core::integer::U256Sub::sub> = function_call<user@core::integer::U256Sub::sub>;
libfunc function_call<user@core::starknet::info::get_block_timestamp> = function_call<user@core::starknet::info::get_block_timestamp>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u64,)>> = enum_match<core::panics::PanicResult::<(core::integer::u64,)>>;
libfunc struct_deconstruct<Tuple<u64>> = struct_deconstruct<Tuple<u64>>;
libfunc dup<u64> = dup<u64>;
libfunc struct_construct<helloERC20::pledge::PledgeInfo> = struct_construct<helloERC20::pledge::PledgeInfo>;
libfunc u64_to_felt252 = u64_to_felt252;
libfunc pedersen = pedersen;
libfunc store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState> = store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>;
libfunc store_temp<helloERC20::pledge::pledge::total_pledge::ContractState> = store_temp<helloERC20::pledge::pledge::total_pledge::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>>;
libfunc dup<helloERC20::pledge::pledge::ContractState> = dup<helloERC20::pledge::pledge::ContractState>;
libfunc store_temp<helloERC20::pledge::pledge::pledge_account::ContractState> = store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>;
libfunc enum_match<core::panics::PanicResult::<(core::felt252,)>> = enum_match<core::panics::PanicResult::<(core::felt252,)>>;
libfunc struct_deconstruct<Tuple<felt252>> = struct_deconstruct<Tuple<felt252>>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>;
libfunc struct_construct<Tuple<helloERC20::pledge::PledgeInfo>> = struct_construct<Tuple<helloERC20::pledge::PledgeInfo>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>;
libfunc dup<helloERC20::pledge::PledgeInfo> = dup<helloERC20::pledge::PledgeInfo>;
libfunc struct_deconstruct<helloERC20::pledge::PledgeInfo> = struct_deconstruct<helloERC20::pledge::PledgeInfo>;
libfunc function_call<user@core::integer::U64Serde::serialize> = function_call<user@core::integer::U64Serde::serialize>;
libfunc snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState> = snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>;
libfunc snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState> = snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>;
libfunc dup<felt252> = dup<felt252>;
libfunc felt252_const<3030929464553973717738602898378949902413558348268820420872475510925676> = felt252_const<3030929464553973717738602898378949902413558348268820420872475510925676>;
libfunc felt252_const<620022201948753318931345807625907812> = felt252_const<620022201948753318931345807625907812>;
libfunc function_call<user@core::integer::U64Sub::sub> = function_call<user@core::integer::U64Sub::sub>;
libfunc u64_overflowing_sub = u64_overflowing_sub;
libfunc felt252_const<46248313362945155633582409058267955471608630680379476045588751716> = felt252_const<46248313362945155633582409058267955471608630680379476045588751716>;
libfunc snapshot_take<helloERC20::pledge::pledge::total_pledge::ContractState> = snapshot_take<helloERC20::pledge::pledge::total_pledge::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::read>;
libfunc struct_construct<helloERC20::pledge::pledge::withdraw> = struct_construct<helloERC20::pledge::pledge::withdraw>;
libfunc store_temp<helloERC20::pledge::pledge::withdraw> = store_temp<helloERC20::pledge::pledge::withdraw>;
libfunc function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::withdraw, helloERC20::pledge::pledge::EventwithdrawIntoEvent>> = function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::withdraw, helloERC20::pledge::pledge::EventwithdrawIntoEvent>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>;
libfunc function_call<user@helloERC20::pledge::pledge::ProfitImpl::_calculate_profit> = function_call<user@helloERC20::pledge::pledge::ProfitImpl::_calculate_profit>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>>;
libfunc snapshot_take<u128> = snapshot_take<u128>;
libfunc function_call<user@core::traits::PartialEqSnap::<core::integer::u128, core::integer::U128PartialEq>::eq> = function_call<user@core::traits::PartialEqSnap::<core::integer::u128, core::integer::U128PartialEq>::eq>;
libfunc felt252_const<521510239195232071017760> = felt252_const<521510239195232071017760>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>> = struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 0>;
libfunc enum_init<core::option::Option::<core::felt252>, 0> = enum_init<core::option::Option::<core::felt252>, 0>;
libfunc store_temp<core::option::Option::<core::felt252>> = store_temp<core::option::Option::<core::felt252>>;
libfunc enum_init<core::option::Option::<core::felt252>, 1> = enum_init<core::option::Option::<core::felt252>, 1>;
libfunc u128_const<2> = u128_const<2>;
libfunc store_temp<helloERC20::pledge::pledge::burn_total::ContractState> = store_temp<helloERC20::pledge::pledge::burn_total::ContractState>;
libfunc function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write> = function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write>;
libfunc enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>> = enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>;
libfunc struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>> = struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>;
libfunc struct_construct<helloERC20::pledge::pledge::TransferStarking> = struct_construct<helloERC20::pledge::pledge::TransferStarking>;
libfunc store_temp<helloERC20::pledge::pledge::TransferStarking> = store_temp<helloERC20::pledge::pledge::TransferStarking>;
libfunc function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::TransferStarking, helloERC20::pledge::pledge::EventTransferStarkingIntoEvent>> = function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::TransferStarking, helloERC20::pledge::pledge::EventTransferStarkingIntoEvent>>;
libfunc felt252_const<43563523829963144693745699762661015430943763413296416> = felt252_const<43563523829963144693745699762661015430943763413296416>;
libfunc felt252_const<37182682143656407704203887602877008484985127083402528> = felt252_const<37182682143656407704203887602877008484985127083402528>;
libfunc function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::read>;
libfunc u128_to_felt252 = u128_to_felt252;
libfunc dup<StorageBaseAddress> = dup<StorageBaseAddress>;
libfunc dup<u32> = dup<u32>;
libfunc u8_const<1> = u8_const<1>;
libfunc storage_address_from_base_and_offset = storage_address_from_base_and_offset;
libfunc drop<StorageBaseAddress> = drop<StorageBaseAddress>;
libfunc enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>;
libfunc struct_construct<Tuple<Unit>> = struct_construct<Tuple<Unit>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 0> = enum_init<core::panics::PanicResult::<((),)>, 0>;
libfunc store_temp<core::panics::PanicResult::<((),)>> = store_temp<core::panics::PanicResult::<((),)>>;
libfunc enum_init<core::panics::PanicResult::<((),)>, 1> = enum_init<core::panics::PanicResult::<((),)>, 1>;
libfunc felt252_const<1208869941568674053579384240244796821615065715083720448728279605013018788452> = felt252_const<1208869941568674053579384240244796821615065715083720448728279605013018788452>;
libfunc function_call<user@core::hash::LegacyHashContractAddress::hash> = function_call<user@core::hash::LegacyHashContractAddress::hash>;
libfunc storage_base_address_from_felt252 = storage_base_address_from_felt252;
libfunc function_call<user@core::integer::Storeu256::read> = function_call<user@core::integer::Storeu256::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>;
libfunc rename<u128> = rename<u128>;
libfunc function_call<user@core::integer::u128_try_from_felt252> = function_call<user@core::integer::u128_try_from_felt252>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc store_temp<core::option::Option::<core::integer::u128>> = store_temp<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc function_call<user@core::starknet::storage_access::StoreContractAddress::read> = function_call<user@core::starknet::storage_access::StoreContractAddress::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::starknet::contract_address::ContractAddress>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::starknet::contract_address::ContractAddress>::unwrap_syscall>;
libfunc struct_construct<Tuple<ContractAddress>> = struct_construct<Tuple<ContractAddress>>;
libfunc enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0> = enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>> = store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1> = enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>;
libfunc function_call<user@core::starknet::info::get_execution_info> = function_call<user@core::starknet::info::get_execution_info>;
libfunc enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc unbox<core::starknet::info::ExecutionInfo> = unbox<core::starknet::info::ExecutionInfo>;
libfunc struct_deconstruct<core::starknet::info::ExecutionInfo> = struct_deconstruct<core::starknet::info::ExecutionInfo>;
libfunc drop<Box<core::starknet::info::BlockInfo>> = drop<Box<core::starknet::info::BlockInfo>>;
libfunc drop<Box<core::starknet::info::TxInfo>> = drop<Box<core::starknet::info::TxInfo>>;
libfunc function_call<user@core::integer::u256_checked_add> = function_call<user@core::integer::u256_checked_add>;
libfunc felt252_const<39879774624079483812136948410799859986295> = felt252_const<39879774624079483812136948410799859986295>;
libfunc function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::address> = function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::address>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 1>;
libfunc dup<u128> = dup<u128>;
libfunc u128_overflowing_sub = u128_overflowing_sub;
libfunc u128_eq = u128_eq;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc u8_try_from_felt252 = u8_try_from_felt252;
libfunc rename<core::option::Option::<core::integer::u8>> = rename<core::option::Option::<core::integer::u8>>;
libfunc u64_try_from_felt252 = u64_try_from_felt252;
libfunc rename<core::option::Option::<core::integer::u64>> = rename<core::option::Option::<core::integer::u64>>;
libfunc function_call<user@core::integer::u256_checked_sub> = function_call<user@core::integer::u256_checked_sub>;
libfunc felt252_const<39879774624085075084607933104993585622903> = felt252_const<39879774624085075084607933104993585622903>;
libfunc function_call<user@core::starknet::info::get_block_info> = function_call<user@core::starknet::info::get_block_info>;
libfunc enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>> = enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>>;
libfunc struct_deconstruct<Tuple<Box<core::starknet::info::BlockInfo>>> = struct_deconstruct<Tuple<Box<core::starknet::info::BlockInfo>>>;
libfunc unbox<core::starknet::info::BlockInfo> = unbox<core::starknet::info::BlockInfo>;
libfunc struct_deconstruct<core::starknet::info::BlockInfo> = struct_deconstruct<core::starknet::info::BlockInfo>;
libfunc struct_construct<Tuple<u64>> = struct_construct<Tuple<u64>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u64,)>> = store_temp<core::panics::PanicResult::<(core::integer::u64,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 1>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::address> = function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::address>;
libfunc function_call<user@helloERC20::pledge::StorePledgeInfo::write> = function_call<user@helloERC20::pledge::StorePledgeInfo::write>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 1>;
libfunc storage_base_address_const<1433302525446439797702011312477458480455837347679684781656504359856313966763> = storage_base_address_const<1433302525446439797702011312477458480455837347679684781656504359856313966763>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 1>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::address> = function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::address>;
libfunc storage_read_syscall = storage_read_syscall;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>;
libfunc struct_construct<Tuple<felt252>> = struct_construct<Tuple<felt252>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 0> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::felt252,)>> = store_temp<core::panics::PanicResult::<(core::felt252,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::felt252,)>, 1> = enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>;
libfunc function_call<user@helloERC20::pledge::StorePledgeInfo::read> = function_call<user@helloERC20::pledge::StorePledgeInfo::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<helloERC20::pledge::PledgeInfo>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<helloERC20::pledge::PledgeInfo>::unwrap_syscall>;
libfunc rename<u64> = rename<u64>;
libfunc enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 0> = enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u64, core::integer::u64>> = store_temp<core::result::Result::<core::integer::u64, core::integer::u64>>;
libfunc enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 1> = enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 1>;
libfunc felt252_const<155801121784903550401946791117314617207> = felt252_const<155801121784903550401946791117314617207>;
libfunc rename<core::result::Result::<core::integer::u64, core::integer::u64>> = rename<core::result::Result::<core::integer::u64, core::integer::u64>>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u64, core::integer::u64>::expect::<core::integer::u64Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u64, core::integer::u64>::expect::<core::integer::u64Drop>>;
libfunc function_call<user@helloERC20::pledge::pledge::EventwithdrawIntoEvent::into> = function_call<user@helloERC20::pledge::pledge::EventwithdrawIntoEvent::into>;
libfunc snapshot_take<helloERC20::pledge::pledge::Event> = snapshot_take<helloERC20::pledge::pledge::Event>;
libfunc drop<helloERC20::pledge::pledge::Event> = drop<helloERC20::pledge::pledge::Event>;
libfunc store_temp<helloERC20::pledge::pledge::Event> = store_temp<helloERC20::pledge::pledge::Event>;
libfunc function_call<user@helloERC20::pledge::pledge::EventIsEvent::append_keys_and_data> = function_call<user@helloERC20::pledge::pledge::EventIsEvent::append_keys_and_data>;
libfunc emit_event_syscall = emit_event_syscall;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>;
libfunc function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::read> = function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::read>;
libfunc enum_match<core::panics::PanicResult::<(core::integer::u8,)>> = enum_match<core::panics::PanicResult::<(core::integer::u8,)>>;
libfunc struct_deconstruct<Tuple<u8>> = struct_deconstruct<Tuple<u8>>;
libfunc function_call<user@core::integer::U8IntoU256::into> = function_call<user@core::integer::U8IntoU256::into>;
libfunc function_call<user@core::integer::U256Mul::mul> = function_call<user@core::integer::U256Mul::mul>;
libfunc function_call<user@core::integer::U64IntoU256::into> = function_call<user@core::integer::U64IntoU256::into>;
libfunc u128_const<100> = u128_const<100>;
libfunc function_call<user@core::integer::U256Div::div> = function_call<user@core::integer::U256Div::div>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>> = struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 0>;
libfunc snapshot_take<helloERC20::pledge::pledge::burn_total::ContractState> = snapshot_take<helloERC20::pledge::pledge::burn_total::ContractState>;
libfunc storage_base_address_const<1187528534665472701443279386340266278774128137705391415532368511102981540802> = storage_base_address_const<1187528534665472701443279386340266278774128137705391415532368511102981540802>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 1>;
libfunc struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>> = struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 0> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 0>;
libfunc store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>> = store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>;
libfunc enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 1> = enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 1>;
libfunc function_call<user@helloERC20::pledge::pledge::EventTransferStarkingIntoEvent::into> = function_call<user@helloERC20::pledge::pledge::EventTransferStarkingIntoEvent::into>;
libfunc function_call<user@core::starknet::storage_access::StoreU128::read> = function_call<user@core::starknet::storage_access::StoreU128::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<476442828812030857794232422692155113556837216824> = felt252_const<476442828812030857794232422692155113556837216824>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>;
libfunc u128s_from_felt252 = u128s_from_felt252;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc drop<Tuple<u128, u128>> = drop<Tuple<u128, u128>>;
libfunc rename<core::option::Option::<core::integer::u128>> = rename<core::option::Option::<core::integer::u128>>;
libfunc function_call<user@core::starknet::contract_address::Felt252TryIntoContractAddress::try_into> = function_call<user@core::starknet::contract_address::Felt252TryIntoContractAddress::try_into>;
libfunc enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<1749165063169615148890104124711417950509560691> = felt252_const<1749165063169615148890104124711417950509560691>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>;
libfunc get_execution_info_syscall = get_execution_info_syscall;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>;
libfunc store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>;
libfunc struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>> = struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>> = store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>;
libfunc function_call<user@core::integer::u256_overflowing_add> = function_call<user@core::integer::u256_overflowing_add>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::bool>> = struct_deconstruct<Tuple<core::integer::u256, core::bool>>;
libfunc felt252_const<729732171056852642065987245110631983301118641176708614513949583127176339039> = felt252_const<729732171056852642065987245110631983301118641176708614513949583127176339039>;
libfunc function_call<user@core::integer::u256_overflow_sub> = function_call<user@core::integer::u256_overflow_sub>;
libfunc struct_construct<Tuple<Box<core::starknet::info::BlockInfo>>> = struct_construct<Tuple<Box<core::starknet::info::BlockInfo>>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 0> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>> = store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 1> = enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 1>;
libfunc felt252_const<1231892093637293665562276867474173313656097788873767120510576915177986872878> = felt252_const<1231892093637293665562276867474173313656097788873767120510576915177986872878>;
libfunc dup<u8> = dup<u8>;
libfunc function_call<user@core::integer::U8Add::add> = function_call<user@core::integer::U8Add::add>;
libfunc struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>;
libfunc felt252_const<903036675723925906389733342790309314037350705021858542876183213389614199236> = felt252_const<903036675723925906389733342790309314037350705021858542876183213389614199236>;
libfunc enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::storage_access::StoreU64::read> = function_call<user@core::starknet::storage_access::StoreU64::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>>;
libfunc enum_match<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::integer::Storeu256::read_at_offset> = function_call<user@core::integer::Storeu256::read_at_offset>;
libfunc enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>;
libfunc enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>;
libfunc felt252_const<7269940625183577871052929410204041567614516> = felt252_const<7269940625183577871052929410204041567614516>;
libfunc enum_match<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>;
libfunc enum_match<core::result::Result::<core::integer::u64, core::integer::u64>> = enum_match<core::result::Result::<core::integer::u64, core::integer::u64>>;
libfunc enum_init<helloERC20::pledge::pledge::Event, 1> = enum_init<helloERC20::pledge::pledge::Event, 1>;
libfunc enum_match<helloERC20::pledge::pledge::Event> = enum_match<helloERC20::pledge::pledge::Event>;
libfunc felt252_const<820838459996532873013020506026897946544279595835754721858452259184725920705> = felt252_const<820838459996532873013020506026897946544279595835754721858452259184725920705>;
libfunc function_call<user@helloERC20::pledge::pledge::TransferStarkingIsEvent::append_keys_and_data> = function_call<user@helloERC20::pledge::pledge::TransferStarkingIsEvent::append_keys_and_data>;
libfunc felt252_const<602617684354587743731238934093348436560137034424203693318834094005509508215> = felt252_const<602617684354587743731238934093348436560137034424203693318834094005509508215>;
libfunc function_call<user@helloERC20::pledge::pledge::withdrawIsEvent::append_keys_and_data> = function_call<user@helloERC20::pledge::pledge::withdrawIsEvent::append_keys_and_data>;
libfunc function_call<user@core::starknet::storage_access::StoreU8::read> = function_call<user@core::starknet::storage_access::StoreU8::read>;
libfunc enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall> = function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>;
libfunc struct_construct<Tuple<u8>> = struct_construct<Tuple<u8>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0> = enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::integer::u8,)>> = store_temp<core::panics::PanicResult::<(core::integer::u8,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1> = enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>;
libfunc upcast<u8, u128> = upcast<u8, u128>;
libfunc function_call<user@core::integer::u256_checked_mul> = function_call<user@core::integer::u256_checked_mul>;
libfunc felt252_const<39879774624083218221772669863277689073527> = felt252_const<39879774624083218221772669863277689073527>;
libfunc upcast<u64, u128> = upcast<u64, u128>;
libfunc function_call<user@core::integer::U256TryIntoNonZero::try_into> = function_call<user@core::integer::U256TryIntoNonZero::try_into>;
libfunc enum_match<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>> = enum_match<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>>;
libfunc struct_deconstruct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>> = struct_deconstruct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>>;
libfunc enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc u256_safe_divmod = u256_safe_divmod;
libfunc store_temp<U128MulGuarantee> = store_temp<U128MulGuarantee>;
libfunc function_call<user@core::integer::U128MulGuaranteeDestruct::destruct> = function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>;
libfunc struct_construct<Tuple<core::integer::u256, core::integer::u256>> = struct_construct<Tuple<core::integer::u256, core::integer::u256>>;
libfunc struct_deconstruct<Tuple<core::integer::u256, core::integer::u256>> = struct_deconstruct<Tuple<core::integer::u256, core::integer::u256>>;
libfunc felt252_const<5420154128225384396790819266608> = felt252_const<5420154128225384396790819266608>;
libfunc enum_init<helloERC20::pledge::pledge::Event, 0> = enum_init<helloERC20::pledge::pledge::Event, 0>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>;
libfunc rename<core::option::Option::<core::starknet::contract_address::ContractAddress>> = rename<core::option::Option::<core::starknet::contract_address::ContractAddress>>;
libfunc enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>;
libfunc u128_overflowing_add = u128_overflowing_add;
libfunc struct_construct<Tuple<u128, core::bool>> = struct_construct<Tuple<u128, core::bool>>;
libfunc store_temp<Tuple<u128, core::bool>> = store_temp<Tuple<u128, core::bool>>;
libfunc struct_deconstruct<Tuple<u128, core::bool>> = struct_deconstruct<Tuple<u128, core::bool>>;
libfunc struct_construct<Tuple<core::integer::u256, core::bool>> = struct_construct<Tuple<core::integer::u256, core::bool>>;
libfunc store_temp<Tuple<core::integer::u256, core::bool>> = store_temp<Tuple<core::integer::u256, core::bool>>;
libfunc u128_const<1> = u128_const<1>;
libfunc rename<Tuple<core::integer::u256, core::bool>> = rename<Tuple<core::integer::u256, core::bool>>;
libfunc u8_overflowing_add = u8_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::integer::u8>> = store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>;
libfunc felt252_const<608642104203229548495787928534675319> = felt252_const<608642104203229548495787928534675319>;
libfunc rename<core::result::Result::<core::integer::u8, core::integer::u8>> = rename<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>;
libfunc enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 1>;
libfunc dup<helloERC20::pledge::pledge::TransferStarking> = dup<helloERC20::pledge::pledge::TransferStarking>;
libfunc struct_deconstruct<helloERC20::pledge::pledge::TransferStarking> = struct_deconstruct<helloERC20::pledge::pledge::TransferStarking>;
libfunc function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize> = function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>;
libfunc dup<helloERC20::pledge::pledge::withdraw> = dup<helloERC20::pledge::pledge::withdraw>;
libfunc struct_deconstruct<helloERC20::pledge::pledge::withdraw> = struct_deconstruct<helloERC20::pledge::pledge::withdraw>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>;
libfunc struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>> = struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>> = store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>;
libfunc felt252_const<110930490496575599150170734222081291576> = felt252_const<110930490496575599150170734222081291576>;
libfunc enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>;
libfunc enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1> = enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>;
libfunc enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>> = enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>;
libfunc function_call<user@core::integer::u256_overflow_mul> = function_call<user@core::integer::u256_overflow_mul>;
libfunc function_call<user@core::integer::u256_as_non_zero> = function_call<user@core::integer::u256_as_non_zero>;
libfunc enum_match<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = enum_match<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc struct_deconstruct<Tuple<NonZero<core::integer::u256>>> = struct_deconstruct<Tuple<NonZero<core::integer::u256>>>;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>;
libfunc struct_construct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>> = struct_construct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>>;
libfunc enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 0> = enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>> = store_temp<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>>;
libfunc enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 1> = enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 1>;
libfunc u128_mul_guarantee_verify = u128_mul_guarantee_verify;
libfunc enum_match<core::result::Result::<core::integer::u8, core::integer::u8>> = enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc u128_guarantee_mul = u128_guarantee_mul;
libfunc struct_deconstruct<Tuple<u128, u128>> = struct_deconstruct<Tuple<u128, u128>>;
libfunc function_call<user@core::integer::u256_try_as_non_zero> = function_call<user@core::integer::u256_try_as_non_zero>;
libfunc struct_construct<Tuple<NonZero<core::integer::u256>>> = struct_construct<Tuple<NonZero<core::integer::u256>>>;
libfunc enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0> = enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>;
libfunc store_temp<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>> = store_temp<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>;
libfunc felt252_const<2161886914012515606576> = felt252_const<2161886914012515606576>;
libfunc enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1> = enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>;
libfunc u256_is_zero = u256_is_zero;
libfunc enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1> = enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>;
libfunc store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;
libfunc rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>> = rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>;

struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([8], [9], [10], [11], [12], [13], [14], [15], [16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<helloERC20::pledge::pledge::total_supply::ContractState>([9]) -> ([22]);
dup<core::integer::u256>([6]) -> ([6], [23]);
store_temp<core::integer::u256>([23]) -> ([23]);
function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::write>([20], [21], [22], [23]) -> ([17], [18], [19]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>([19]) { fallthrough([24]) 105([25]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>>([24]) -> ([26], [27]);
drop<Unit>([27]) -> ();
store_temp<GasBuiltin>([17]) -> ([31]);
store_temp<System>([18]) -> ([32]);
store_temp<helloERC20::pledge::pledge::_owner::ContractState>([8]) -> ([33]);
dup<ContractAddress>([5]) -> ([5], [34]);
store_temp<ContractAddress>([34]) -> ([34]);
function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::write>([31], [32], [33], [34]) -> ([28], [29], [30]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>>([30]) { fallthrough([35]) 86([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>>([35]) -> ([37], [38]);
drop<Unit>([38]) -> ();
store_temp<GasBuiltin>([28]) -> ([42]);
store_temp<System>([29]) -> ([43]);
store_temp<helloERC20::pledge::pledge::pledge_rate::ContractState>([12]) -> ([44]);
store_temp<u8>([7]) -> ([45]);
function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::write>([42], [43], [44], [45]) -> ([39], [40], [41]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>([41]) { fallthrough([46]) 68([47]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>>([46]) -> ([48], [49]);
drop<Unit>([49]) -> ();
store_temp<RangeCheck>([0]) -> ([55]);
store_temp<GasBuiltin>([39]) -> ([56]);
store_temp<Pedersen>([2]) -> ([57]);
store_temp<System>([40]) -> ([58]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([14]) -> ([59]);
store_temp<ContractAddress>([5]) -> ([60]);
store_temp<core::integer::u256>([6]) -> ([61]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([55], [56], [57], [58], [59], [60], [61]) -> ([50], [51], [52], [53], [54]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([54]) { fallthrough([62]) 52([63]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([62]) -> ([64], [65]);
drop<Unit>([65]) -> ();
struct_construct<helloERC20::pledge::pledge::ContractState>([37], [26], [10], [11], [48], [13], [64], [15], [16]) -> ([66]);
struct_construct<Unit>() -> ([67]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([66], [67]) -> ([68]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 0>([68]) -> ([69]);
store_temp<RangeCheck>([50]) -> ([70]);
store_temp<GasBuiltin>([51]) -> ([71]);
store_temp<Pedersen>([52]) -> ([72]);
store_temp<System>([53]) -> ([73]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([69]) -> ([74]);
return([70], [71], [72], [73], [74]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([37]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([48]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([26]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([63]) -> ([75]);
store_temp<RangeCheck>([50]) -> ([76]);
store_temp<GasBuiltin>([51]) -> ([77]);
store_temp<Pedersen>([52]) -> ([78]);
store_temp<System>([53]) -> ([79]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([75]) -> ([80]);
return([76], [77], [78], [79], [80]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([26]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([37]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([47]) -> ([81]);
store_temp<RangeCheck>([0]) -> ([82]);
store_temp<GasBuiltin>([39]) -> ([83]);
store_temp<Pedersen>([2]) -> ([84]);
store_temp<System>([40]) -> ([85]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([81]) -> ([86]);
return([82], [83], [84], [85], [86]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([26]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([14]) -> ();
drop<u8>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([12]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([36]) -> ([87]);
store_temp<RangeCheck>([0]) -> ([88]);
store_temp<GasBuiltin>([28]) -> ([89]);
store_temp<Pedersen>([2]) -> ([90]);
store_temp<System>([29]) -> ([91]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([87]) -> ([92]);
return([88], [89], [90], [91], [92]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([14]) -> ();
drop<u8>([7]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([25]) -> ([93]);
store_temp<RangeCheck>([0]) -> ([94]);
store_temp<GasBuiltin>([17]) -> ([95]);
store_temp<Pedersen>([2]) -> ([96]);
store_temp<System>([18]) -> ([97]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([93]) -> ([98]);
return([94], [95], [96], [97], [98]);
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([0]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([1]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([2]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([3]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([4]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([5]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([6]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([7]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([8]);
struct_construct<helloERC20::pledge::pledge::ContractState>([0], [1], [2], [3], [4], [5], [6], [7], [8]) -> ([9]);
store_temp<helloERC20::pledge::pledge::ContractState>([9]) -> ([10]);
return([10]);
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 229([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
snapshot_take<u32>([9]) -> ([10], [11]);
drop<u32>([10]) -> ();
u32_const<0>() -> ([12]);
snapshot_take<u32>([12]) -> ([13], [14]);
drop<u32>([13]) -> ();
rename<u32>([11]) -> ([15]);
rename<u32>([14]) -> ([16]);
store_temp<u32>([15]) -> ([15]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([15], [16]) { fallthrough() 167() };
branch_align() -> ();
store_temp<System>([2]) -> ([19]);
function_call<user@core::starknet::use_system_implicit>([19]) -> ([17], [18]);
drop<Unit>([18]) -> ();
array_new<felt252>() -> ([20]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([21]);
store_temp<felt252>([21]) -> ([21]);
array_append<felt252>([20], [21]) -> ([22]);
struct_construct<core::panics::Panic>() -> ([23]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([23], [22]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([24]) -> ([25]);
store_temp<RangeCheck>([4]) -> ([26]);
store_temp<GasBuiltin>([5]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
get_builtin_costs() -> ([30]);
store_temp<BuiltinCosts>([30]) -> ([30]);
withdraw_gas_all([4], [5], [30]) { fallthrough([31], [32]) 216([33], [34]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([35]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([36]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([37]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([38]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([39]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([40]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([41]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::ContractState>([35], [36], [37], [38], [39], [40], [41], [42], [43]) -> ([44]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([44]) -> ([45], [46]);
drop<helloERC20::pledge::pledge::ContractState>([45]) -> ();
store_temp<RangeCheck>([31]) -> ([51]);
store_temp<GasBuiltin>([32]) -> ([52]);
store_temp<System>([2]) -> ([53]);
store_temp<helloERC20::pledge::pledge::ContractState>([46]) -> ([54]);
function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_supply>([51], [52], [53], [54]) -> ([47], [48], [49], [50]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([50]) { fallthrough([55]) 209([56]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([55]) -> ([57]);
array_new<felt252>() -> ([58]);
snapshot_take<core::integer::u256>([57]) -> ([59], [60]);
drop<core::integer::u256>([59]) -> ();
store_temp<core::integer::u256>([60]) -> ([63]);
store_temp<Array<felt252>>([58]) -> ([64]);
function_call<user@core::integer::u256Serde::serialize>([63], [64]) -> ([61], [62]);
drop<Unit>([62]) -> ();
snapshot_take<Array<felt252>>([61]) -> ([65], [66]);
drop<Array<felt252>>([65]) -> ();
struct_construct<core::array::Span::<core::felt252>>([66]) -> ([67]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([67]) -> ([68]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([68]) -> ([69]);
store_temp<RangeCheck>([47]) -> ([70]);
store_temp<GasBuiltin>([48]) -> ([71]);
store_temp<System>([49]) -> ([72]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([69]) -> ([73]);
return([70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([56]) -> ([74]);
store_temp<RangeCheck>([47]) -> ([75]);
store_temp<GasBuiltin>([48]) -> ([76]);
store_temp<System>([49]) -> ([77]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([78]);
return([75], [76], [77], [78]);
branch_align() -> ();
array_new<felt252>() -> ([79]);
felt252_const<375233589013918064796019>() -> ([80]);
store_temp<felt252>([80]) -> ([80]);
array_append<felt252>([79], [80]) -> ([81]);
struct_construct<core::panics::Panic>() -> ([82]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([82], [81]) -> ([83]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([83]) -> ([84]);
store_temp<RangeCheck>([33]) -> ([85]);
store_temp<GasBuiltin>([34]) -> ([86]);
store_temp<System>([2]) -> ([87]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([84]) -> ([88]);
return([85], [86], [87], [88]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([89]);
felt252_const<375233589013918064796019>() -> ([90]);
store_temp<felt252>([90]) -> ([90]);
array_append<felt252>([89], [90]) -> ([91]);
struct_construct<core::panics::Panic>() -> ([92]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([92], [91]) -> ([93]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([93]) -> ([94]);
store_temp<RangeCheck>([6]) -> ([95]);
store_temp<GasBuiltin>([7]) -> ([96]);
store_temp<System>([2]) -> ([97]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([98]);
return([95], [96], [97], [98]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 388([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 372([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 355([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
snapshot_take<u32>([24]) -> ([25], [26]);
drop<u32>([25]) -> ();
u32_const<0>() -> ([27]);
snapshot_take<u32>([27]) -> ([28], [29]);
drop<u32>([28]) -> ();
rename<u32>([26]) -> ([30]);
rename<u32>([29]) -> ([31]);
store_temp<u32>([30]) -> ([30]);
u32_eq([30], [31]) { fallthrough() 286() };
branch_align() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([34]);
function_call<user@core::starknet::use_system_implicit>([34]) -> ([32], [33]);
drop<Unit>([33]) -> ();
array_new<felt252>() -> ([35]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([36]);
store_temp<felt252>([36]) -> ([36]);
array_append<felt252>([35], [36]) -> ([37]);
struct_construct<core::panics::Panic>() -> ([38]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([38], [37]) -> ([39]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([39]) -> ([40]);
store_temp<Pedersen>([0]) -> ([41]);
store_temp<RangeCheck>([16]) -> ([42]);
store_temp<GasBuiltin>([6]) -> ([43]);
store_temp<System>([32]) -> ([44]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
get_builtin_costs() -> ([46]);
store_temp<BuiltinCosts>([46]) -> ([46]);
withdraw_gas_all([16], [6], [46]) { fallthrough([47], [48]) 339([49], [50]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([53]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([54]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([55]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([56]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([57]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([58]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([59]);
struct_construct<helloERC20::pledge::pledge::ContractState>([51], [52], [53], [54], [55], [56], [57], [58], [59]) -> ([60]);
store_temp<RangeCheck>([47]) -> ([66]);
store_temp<GasBuiltin>([48]) -> ([67]);
store_temp<Pedersen>([0]) -> ([68]);
store_temp<System>([3]) -> ([69]);
store_temp<helloERC20::pledge::pledge::ContractState>([60]) -> ([70]);
store_temp<ContractAddress>([14]) -> ([71]);
store_temp<core::integer::u256>([21]) -> ([72]);
function_call<user@helloERC20::pledge::pledge::token_pledge::add_white_list>([66], [67], [68], [69], [70], [71], [72]) -> ([61], [62], [63], [64], [65]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([65]) { fallthrough([73]) 331([74]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([73]) -> ([75], [76]);
drop<helloERC20::pledge::pledge::ContractState>([75]) -> ();
array_new<felt252>() -> ([77]);
snapshot_take<core::bool>([76]) -> ([78], [79]);
drop<core::bool>([78]) -> ();
store_temp<core::bool>([79]) -> ([82]);
store_temp<Array<felt252>>([77]) -> ([83]);
function_call<user@core::BoolSerde::serialize>([82], [83]) -> ([80], [81]);
drop<Unit>([81]) -> ();
snapshot_take<Array<felt252>>([80]) -> ([84], [85]);
drop<Array<felt252>>([84]) -> ();
struct_construct<core::array::Span::<core::felt252>>([85]) -> ([86]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([86]) -> ([87]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([87]) -> ([88]);
store_temp<Pedersen>([63]) -> ([89]);
store_temp<RangeCheck>([61]) -> ([90]);
store_temp<GasBuiltin>([62]) -> ([91]);
store_temp<System>([64]) -> ([92]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([88]) -> ([93]);
return([89], [90], [91], [92], [93]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([94]);
store_temp<Pedersen>([63]) -> ([95]);
store_temp<RangeCheck>([61]) -> ([96]);
store_temp<GasBuiltin>([62]) -> ([97]);
store_temp<System>([64]) -> ([98]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([99]);
return([95], [96], [97], [98], [99]);
branch_align() -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([100]);
felt252_const<375233589013918064796019>() -> ([101]);
store_temp<felt252>([101]) -> ([101]);
array_append<felt252>([100], [101]) -> ([102]);
struct_construct<core::panics::Panic>() -> ([103]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([103], [102]) -> ([104]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([104]) -> ([105]);
store_temp<Pedersen>([0]) -> ([106]);
store_temp<RangeCheck>([49]) -> ([107]);
store_temp<GasBuiltin>([50]) -> ([108]);
store_temp<System>([3]) -> ([109]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
branch_align() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([111]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([112]);
store_temp<felt252>([112]) -> ([112]);
array_append<felt252>([111], [112]) -> ([113]);
struct_construct<core::panics::Panic>() -> ([114]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([114], [113]) -> ([115]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([115]) -> ([116]);
store_temp<Pedersen>([0]) -> ([117]);
store_temp<RangeCheck>([16]) -> ([118]);
store_temp<GasBuiltin>([6]) -> ([119]);
store_temp<System>([3]) -> ([120]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([116]) -> ([121]);
return([117], [118], [119], [120], [121]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([122]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([123]);
store_temp<felt252>([123]) -> ([123]);
array_append<felt252>([122], [123]) -> ([124]);
struct_construct<core::panics::Panic>() -> ([125]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([125], [124]) -> ([126]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([126]) -> ([127]);
store_temp<Pedersen>([0]) -> ([128]);
store_temp<RangeCheck>([9]) -> ([129]);
store_temp<GasBuiltin>([6]) -> ([130]);
store_temp<System>([3]) -> ([131]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([127]) -> ([132]);
return([128], [129], [130], [131], [132]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([133]);
felt252_const<375233589013918064796019>() -> ([134]);
store_temp<felt252>([134]) -> ([134]);
array_append<felt252>([133], [134]) -> ([135]);
struct_construct<core::panics::Panic>() -> ([136]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([136], [135]) -> ([137]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([137]) -> ([138]);
store_temp<Pedersen>([0]) -> ([139]);
store_temp<RangeCheck>([7]) -> ([140]);
store_temp<GasBuiltin>([8]) -> ([141]);
store_temp<System>([3]) -> ([142]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 500([7], [8]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([4]) -> ([9]);
array_len<felt252>([9]) -> ([10]);
snapshot_take<u32>([10]) -> ([11], [12]);
drop<u32>([11]) -> ();
u32_const<0>() -> ([13]);
snapshot_take<u32>([13]) -> ([14], [15]);
drop<u32>([14]) -> ();
rename<u32>([12]) -> ([16]);
rename<u32>([15]) -> ([17]);
store_temp<u32>([16]) -> ([16]);
store_temp<RangeCheck>([5]) -> ([5]);
u32_eq([16], [17]) { fallthrough() 435() };
branch_align() -> ();
store_temp<System>([3]) -> ([20]);
function_call<user@core::starknet::use_system_implicit>([20]) -> ([18], [19]);
drop<Unit>([19]) -> ();
array_new<felt252>() -> ([21]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([22]);
store_temp<felt252>([22]) -> ([22]);
array_append<felt252>([21], [22]) -> ([23]);
struct_construct<core::panics::Panic>() -> ([24]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([24], [23]) -> ([25]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([25]) -> ([26]);
store_temp<Pedersen>([0]) -> ([27]);
store_temp<RangeCheck>([5]) -> ([28]);
store_temp<GasBuiltin>([6]) -> ([29]);
store_temp<System>([18]) -> ([30]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([26]) -> ([31]);
return([27], [28], [29], [30], [31]);
branch_align() -> ();
get_builtin_costs() -> ([32]);
store_temp<BuiltinCosts>([32]) -> ([32]);
withdraw_gas_all([5], [6], [32]) { fallthrough([33], [34]) 486([35], [36]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([37]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([38]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([39]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([40]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([41]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::ContractState>([37], [38], [39], [40], [41], [42], [43], [44], [45]) -> ([46]);
store_temp<RangeCheck>([33]) -> ([52]);
store_temp<GasBuiltin>([34]) -> ([53]);
store_temp<Pedersen>([0]) -> ([54]);
store_temp<System>([3]) -> ([55]);
store_temp<helloERC20::pledge::pledge::ContractState>([46]) -> ([56]);
function_call<user@helloERC20::pledge::pledge::token_pledge::claim>([52], [53], [54], [55], [56]) -> ([47], [48], [49], [50], [51]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([51]) { fallthrough([57]) 478([58]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>([57]) -> ([59], [60]);
drop<helloERC20::pledge::pledge::ContractState>([59]) -> ();
array_new<felt252>() -> ([61]);
snapshot_take<core::integer::u256>([60]) -> ([62], [63]);
drop<core::integer::u256>([62]) -> ();
store_temp<core::integer::u256>([63]) -> ([66]);
store_temp<Array<felt252>>([61]) -> ([67]);
function_call<user@core::integer::u256Serde::serialize>([66], [67]) -> ([64], [65]);
drop<Unit>([65]) -> ();
snapshot_take<Array<felt252>>([64]) -> ([68], [69]);
drop<Array<felt252>>([68]) -> ();
struct_construct<core::array::Span::<core::felt252>>([69]) -> ([70]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([70]) -> ([71]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([71]) -> ([72]);
store_temp<Pedersen>([49]) -> ([73]);
store_temp<RangeCheck>([47]) -> ([74]);
store_temp<GasBuiltin>([48]) -> ([75]);
store_temp<System>([50]) -> ([76]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([72]) -> ([77]);
return([73], [74], [75], [76], [77]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([58]) -> ([78]);
store_temp<Pedersen>([49]) -> ([79]);
store_temp<RangeCheck>([47]) -> ([80]);
store_temp<GasBuiltin>([48]) -> ([81]);
store_temp<System>([50]) -> ([82]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([78]) -> ([83]);
return([79], [80], [81], [82], [83]);
branch_align() -> ();
array_new<felt252>() -> ([84]);
felt252_const<375233589013918064796019>() -> ([85]);
store_temp<felt252>([85]) -> ([85]);
array_append<felt252>([84], [85]) -> ([86]);
struct_construct<core::panics::Panic>() -> ([87]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([87], [86]) -> ([88]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([88]) -> ([89]);
store_temp<Pedersen>([0]) -> ([90]);
store_temp<RangeCheck>([35]) -> ([91]);
store_temp<GasBuiltin>([36]) -> ([92]);
store_temp<System>([3]) -> ([93]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([89]) -> ([94]);
return([90], [91], [92], [93], [94]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([95]);
felt252_const<375233589013918064796019>() -> ([96]);
store_temp<felt252>([96]) -> ([96]);
array_append<felt252>([95], [96]) -> ([97]);
struct_construct<core::panics::Panic>() -> ([98]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([98], [97]) -> ([99]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([99]) -> ([100]);
store_temp<Pedersen>([0]) -> ([101]);
store_temp<RangeCheck>([7]) -> ([102]);
store_temp<GasBuiltin>([8]) -> ([103]);
store_temp<System>([3]) -> ([104]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([100]) -> ([105]);
return([101], [102], [103], [104], [105]);
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 629([6], [7]) };
branch_align() -> ();
store_temp<RangeCheck>([4]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([12]);
function_call<user@core::integer::U8Serde::deserialize>([11], [12]) -> ([8], [9], [10]);
enum_match<core::option::Option::<core::integer::u8>>([10]) { fallthrough([13]) 614([14]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([9]) -> ([15]);
array_len<felt252>([15]) -> ([16]);
snapshot_take<u32>([16]) -> ([17], [18]);
drop<u32>([17]) -> ();
u32_const<0>() -> ([19]);
snapshot_take<u32>([19]) -> ([20], [21]);
drop<u32>([20]) -> ();
rename<u32>([18]) -> ([22]);
rename<u32>([21]) -> ([23]);
store_temp<u32>([22]) -> ([22]);
u32_eq([22], [23]) { fallthrough() 551() };
branch_align() -> ();
drop<u8>([13]) -> ();
store_temp<System>([2]) -> ([26]);
function_call<user@core::starknet::use_system_implicit>([26]) -> ([24], [25]);
drop<Unit>([25]) -> ();
array_new<felt252>() -> ([27]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([28]);
store_temp<felt252>([28]) -> ([28]);
array_append<felt252>([27], [28]) -> ([29]);
struct_construct<core::panics::Panic>() -> ([30]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([30], [29]) -> ([31]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([31]) -> ([32]);
store_temp<RangeCheck>([8]) -> ([33]);
store_temp<GasBuiltin>([5]) -> ([34]);
store_temp<System>([24]) -> ([35]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([32]) -> ([36]);
return([33], [34], [35], [36]);
branch_align() -> ();
get_builtin_costs() -> ([37]);
store_temp<BuiltinCosts>([37]) -> ([37]);
withdraw_gas_all([8], [5], [37]) { fallthrough([38], [39]) 600([40], [41]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::ContractState>([42], [43], [44], [45], [46], [47], [48], [49], [50]) -> ([51]);
store_temp<GasBuiltin>([39]) -> ([55]);
store_temp<System>([2]) -> ([56]);
store_temp<helloERC20::pledge::pledge::ContractState>([51]) -> ([57]);
store_temp<u8>([13]) -> ([58]);
function_call<user@helloERC20::pledge::pledge::token_pledge::set_rate>([55], [56], [57], [58]) -> ([52], [53], [54]);
store_temp<RangeCheck>([38]) -> ([38]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([54]) { fallthrough([59]) 593([60]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([59]) -> ([61], [62]);
drop<helloERC20::pledge::pledge::ContractState>([61]) -> ();
array_new<felt252>() -> ([63]);
snapshot_take<core::bool>([62]) -> ([64], [65]);
drop<core::bool>([64]) -> ();
store_temp<core::bool>([65]) -> ([68]);
store_temp<Array<felt252>>([63]) -> ([69]);
function_call<user@core::BoolSerde::serialize>([68], [69]) -> ([66], [67]);
drop<Unit>([67]) -> ();
snapshot_take<Array<felt252>>([66]) -> ([70], [71]);
drop<Array<felt252>>([70]) -> ();
struct_construct<core::array::Span::<core::felt252>>([71]) -> ([72]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([72]) -> ([73]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([73]) -> ([74]);
store_temp<RangeCheck>([38]) -> ([75]);
store_temp<GasBuiltin>([52]) -> ([76]);
store_temp<System>([53]) -> ([77]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([78]);
return([75], [76], [77], [78]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([60]) -> ([79]);
store_temp<RangeCheck>([38]) -> ([80]);
store_temp<GasBuiltin>([52]) -> ([81]);
store_temp<System>([53]) -> ([82]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([83]);
return([80], [81], [82], [83]);
branch_align() -> ();
drop<u8>([13]) -> ();
array_new<felt252>() -> ([84]);
felt252_const<375233589013918064796019>() -> ([85]);
store_temp<felt252>([85]) -> ([85]);
array_append<felt252>([84], [85]) -> ([86]);
struct_construct<core::panics::Panic>() -> ([87]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([87], [86]) -> ([88]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([88]) -> ([89]);
store_temp<RangeCheck>([40]) -> ([90]);
store_temp<GasBuiltin>([41]) -> ([91]);
store_temp<System>([2]) -> ([92]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([89]) -> ([93]);
return([90], [91], [92], [93]);
branch_align() -> ();
drop<Unit>([14]) -> ();
drop<core::array::Span::<core::felt252>>([9]) -> ();
array_new<felt252>() -> ([94]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([95]);
store_temp<felt252>([95]) -> ([95]);
array_append<felt252>([94], [95]) -> ([96]);
struct_construct<core::panics::Panic>() -> ([97]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([97], [96]) -> ([98]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([98]) -> ([99]);
store_temp<RangeCheck>([8]) -> ([100]);
store_temp<GasBuiltin>([5]) -> ([101]);
store_temp<System>([2]) -> ([102]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([99]) -> ([103]);
return([100], [101], [102], [103]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([104]);
felt252_const<375233589013918064796019>() -> ([105]);
store_temp<felt252>([105]) -> ([105]);
array_append<felt252>([104], [105]) -> ([106]);
struct_construct<core::panics::Panic>() -> ([107]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([107], [106]) -> ([108]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([108]) -> ([109]);
store_temp<RangeCheck>([6]) -> ([110]);
store_temp<GasBuiltin>([7]) -> ([111]);
store_temp<System>([2]) -> ([112]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([109]) -> ([113]);
return([110], [111], [112], [113]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 788([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::integer::u256Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u256>>([11]) { fallthrough([14]) 772([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::U64Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u64>>([18]) { fallthrough([21]) 755([22]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([17]) -> ([23]);
array_len<felt252>([23]) -> ([24]);
snapshot_take<u32>([24]) -> ([25], [26]);
drop<u32>([25]) -> ();
u32_const<0>() -> ([27]);
snapshot_take<u32>([27]) -> ([28], [29]);
drop<u32>([28]) -> ();
rename<u32>([26]) -> ([30]);
rename<u32>([29]) -> ([31]);
store_temp<u32>([30]) -> ([30]);
u32_eq([30], [31]) { fallthrough() 686() };
branch_align() -> ();
drop<u64>([21]) -> ();
drop<core::integer::u256>([14]) -> ();
store_temp<System>([3]) -> ([34]);
function_call<user@core::starknet::use_system_implicit>([34]) -> ([32], [33]);
drop<Unit>([33]) -> ();
array_new<felt252>() -> ([35]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([36]);
store_temp<felt252>([36]) -> ([36]);
array_append<felt252>([35], [36]) -> ([37]);
struct_construct<core::panics::Panic>() -> ([38]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([38], [37]) -> ([39]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([39]) -> ([40]);
store_temp<Pedersen>([0]) -> ([41]);
store_temp<RangeCheck>([16]) -> ([42]);
store_temp<GasBuiltin>([6]) -> ([43]);
store_temp<System>([32]) -> ([44]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([40]) -> ([45]);
return([41], [42], [43], [44], [45]);
branch_align() -> ();
get_builtin_costs() -> ([46]);
store_temp<BuiltinCosts>([46]) -> ([46]);
withdraw_gas_all([16], [6], [46]) { fallthrough([47], [48]) 739([49], [50]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([53]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([54]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([55]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([56]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([57]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([58]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([59]);
struct_construct<helloERC20::pledge::pledge::ContractState>([51], [52], [53], [54], [55], [56], [57], [58], [59]) -> ([60]);
store_temp<RangeCheck>([47]) -> ([66]);
store_temp<GasBuiltin>([48]) -> ([67]);
store_temp<Pedersen>([0]) -> ([68]);
store_temp<System>([3]) -> ([69]);
store_temp<helloERC20::pledge::pledge::ContractState>([60]) -> ([70]);
store_temp<core::integer::u256>([14]) -> ([71]);
store_temp<u64>([21]) -> ([72]);
function_call<user@helloERC20::pledge::pledge::token_pledge::pledge_token>([66], [67], [68], [69], [70], [71], [72]) -> ([61], [62], [63], [64], [65]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([65]) { fallthrough([73]) 731([74]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([73]) -> ([75], [76]);
drop<helloERC20::pledge::pledge::ContractState>([75]) -> ();
array_new<felt252>() -> ([77]);
snapshot_take<core::bool>([76]) -> ([78], [79]);
drop<core::bool>([78]) -> ();
store_temp<core::bool>([79]) -> ([82]);
store_temp<Array<felt252>>([77]) -> ([83]);
function_call<user@core::BoolSerde::serialize>([82], [83]) -> ([80], [81]);
drop<Unit>([81]) -> ();
snapshot_take<Array<felt252>>([80]) -> ([84], [85]);
drop<Array<felt252>>([84]) -> ();
struct_construct<core::array::Span::<core::felt252>>([85]) -> ([86]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([86]) -> ([87]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([87]) -> ([88]);
store_temp<Pedersen>([63]) -> ([89]);
store_temp<RangeCheck>([61]) -> ([90]);
store_temp<GasBuiltin>([62]) -> ([91]);
store_temp<System>([64]) -> ([92]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([88]) -> ([93]);
return([89], [90], [91], [92], [93]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([74]) -> ([94]);
store_temp<Pedersen>([63]) -> ([95]);
store_temp<RangeCheck>([61]) -> ([96]);
store_temp<GasBuiltin>([62]) -> ([97]);
store_temp<System>([64]) -> ([98]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([99]);
return([95], [96], [97], [98], [99]);
branch_align() -> ();
drop<u64>([21]) -> ();
drop<core::integer::u256>([14]) -> ();
array_new<felt252>() -> ([100]);
felt252_const<375233589013918064796019>() -> ([101]);
store_temp<felt252>([101]) -> ([101]);
array_append<felt252>([100], [101]) -> ([102]);
struct_construct<core::panics::Panic>() -> ([103]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([103], [102]) -> ([104]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([104]) -> ([105]);
store_temp<Pedersen>([0]) -> ([106]);
store_temp<RangeCheck>([49]) -> ([107]);
store_temp<GasBuiltin>([50]) -> ([108]);
store_temp<System>([3]) -> ([109]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
branch_align() -> ();
drop<Unit>([22]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
drop<core::integer::u256>([14]) -> ();
array_new<felt252>() -> ([111]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([112]);
store_temp<felt252>([112]) -> ([112]);
array_append<felt252>([111], [112]) -> ([113]);
struct_construct<core::panics::Panic>() -> ([114]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([114], [113]) -> ([115]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([115]) -> ([116]);
store_temp<Pedersen>([0]) -> ([117]);
store_temp<RangeCheck>([16]) -> ([118]);
store_temp<GasBuiltin>([6]) -> ([119]);
store_temp<System>([3]) -> ([120]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([116]) -> ([121]);
return([117], [118], [119], [120], [121]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([122]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([123]);
store_temp<felt252>([123]) -> ([123]);
array_append<felt252>([122], [123]) -> ([124]);
struct_construct<core::panics::Panic>() -> ([125]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([125], [124]) -> ([126]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([126]) -> ([127]);
store_temp<Pedersen>([0]) -> ([128]);
store_temp<RangeCheck>([9]) -> ([129]);
store_temp<GasBuiltin>([6]) -> ([130]);
store_temp<System>([3]) -> ([131]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([127]) -> ([132]);
return([128], [129], [130], [131], [132]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([133]);
felt252_const<375233589013918064796019>() -> ([134]);
store_temp<felt252>([134]) -> ([134]);
array_append<felt252>([133], [134]) -> ([135]);
struct_construct<core::panics::Panic>() -> ([136]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([136], [135]) -> ([137]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([137]) -> ([138]);
store_temp<Pedersen>([0]) -> ([139]);
store_temp<RangeCheck>([7]) -> ([140]);
store_temp<GasBuiltin>([8]) -> ([141]);
store_temp<System>([3]) -> ([142]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 924([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 908([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 840() };
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 893([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([53]) -> ([54], [55]);
drop<helloERC20::pledge::pledge::ContractState>([54]) -> ();
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<Pedersen>([0]) -> ([63]);
store_temp<System>([3]) -> ([64]);
store_temp<helloERC20::pledge::pledge::ContractState>([55]) -> ([65]);
store_temp<ContractAddress>([14]) -> ([66]);
function_call<user@helloERC20::pledge::pledge::token_pledge::get_token_by_address>([61], [62], [63], [64], [65], [66]) -> ([56], [57], [58], [59], [60]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([60]) { fallthrough([67]) 885([68]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([67]) -> ([69]);
array_new<felt252>() -> ([70]);
snapshot_take<core::integer::u256>([69]) -> ([71], [72]);
drop<core::integer::u256>([71]) -> ();
store_temp<core::integer::u256>([72]) -> ([75]);
store_temp<Array<felt252>>([70]) -> ([76]);
function_call<user@core::integer::u256Serde::serialize>([75], [76]) -> ([73], [74]);
drop<Unit>([74]) -> ();
snapshot_take<Array<felt252>>([73]) -> ([77], [78]);
drop<Array<felt252>>([77]) -> ();
struct_construct<core::array::Span::<core::felt252>>([78]) -> ([79]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([79]) -> ([80]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([80]) -> ([81]);
store_temp<Pedersen>([58]) -> ([82]);
store_temp<RangeCheck>([56]) -> ([83]);
store_temp<GasBuiltin>([57]) -> ([84]);
store_temp<System>([59]) -> ([85]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([86]);
return([82], [83], [84], [85], [86]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([68]) -> ([87]);
store_temp<Pedersen>([58]) -> ([88]);
store_temp<RangeCheck>([56]) -> ([89]);
store_temp<GasBuiltin>([57]) -> ([90]);
store_temp<System>([59]) -> ([91]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([87]) -> ([92]);
return([88], [89], [90], [91], [92]);
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([93]);
felt252_const<375233589013918064796019>() -> ([94]);
store_temp<felt252>([94]) -> ([94]);
array_append<felt252>([93], [94]) -> ([95]);
struct_construct<core::panics::Panic>() -> ([96]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([96], [95]) -> ([97]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([97]) -> ([98]);
store_temp<Pedersen>([0]) -> ([99]);
store_temp<RangeCheck>([42]) -> ([100]);
store_temp<GasBuiltin>([43]) -> ([101]);
store_temp<System>([3]) -> ([102]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([98]) -> ([103]);
return([99], [100], [101], [102], [103]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([104]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([105]);
store_temp<felt252>([105]) -> ([105]);
array_append<felt252>([104], [105]) -> ([106]);
struct_construct<core::panics::Panic>() -> ([107]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([107], [106]) -> ([108]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([108]) -> ([109]);
store_temp<Pedersen>([0]) -> ([110]);
store_temp<RangeCheck>([9]) -> ([111]);
store_temp<GasBuiltin>([6]) -> ([112]);
store_temp<System>([3]) -> ([113]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([109]) -> ([114]);
return([110], [111], [112], [113], [114]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([115]);
felt252_const<375233589013918064796019>() -> ([116]);
store_temp<felt252>([116]) -> ([116]);
array_append<felt252>([115], [116]) -> ([117]);
struct_construct<core::panics::Panic>() -> ([118]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([118], [117]) -> ([119]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([119]) -> ([120]);
store_temp<Pedersen>([0]) -> ([121]);
store_temp<RangeCheck>([7]) -> ([122]);
store_temp<GasBuiltin>([8]) -> ([123]);
store_temp<System>([3]) -> ([124]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([120]) -> ([125]);
return([121], [122], [123], [124], [125]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1060([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1044([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 976() };
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 1029([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([53]) -> ([54], [55]);
drop<helloERC20::pledge::pledge::ContractState>([54]) -> ();
store_temp<RangeCheck>([40]) -> ([61]);
store_temp<GasBuiltin>([41]) -> ([62]);
store_temp<Pedersen>([0]) -> ([63]);
store_temp<System>([3]) -> ([64]);
store_temp<helloERC20::pledge::pledge::ContractState>([55]) -> ([65]);
store_temp<ContractAddress>([14]) -> ([66]);
function_call<user@helloERC20::pledge::pledge::token_pledge::get_pledge_account_by_address>([61], [62], [63], [64], [65], [66]) -> ([56], [57], [58], [59], [60]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([60]) { fallthrough([67]) 1021([68]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([67]) -> ([69]);
array_new<felt252>() -> ([70]);
snapshot_take<helloERC20::pledge::PledgeInfo>([69]) -> ([71], [72]);
drop<helloERC20::pledge::PledgeInfo>([71]) -> ();
store_temp<helloERC20::pledge::PledgeInfo>([72]) -> ([75]);
store_temp<Array<felt252>>([70]) -> ([76]);
function_call<user@helloERC20::pledge::PledgeInfoSerde::serialize>([75], [76]) -> ([73], [74]);
drop<Unit>([74]) -> ();
snapshot_take<Array<felt252>>([73]) -> ([77], [78]);
drop<Array<felt252>>([77]) -> ();
struct_construct<core::array::Span::<core::felt252>>([78]) -> ([79]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([79]) -> ([80]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([80]) -> ([81]);
store_temp<Pedersen>([58]) -> ([82]);
store_temp<RangeCheck>([56]) -> ([83]);
store_temp<GasBuiltin>([57]) -> ([84]);
store_temp<System>([59]) -> ([85]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([81]) -> ([86]);
return([82], [83], [84], [85], [86]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([68]) -> ([87]);
store_temp<Pedersen>([58]) -> ([88]);
store_temp<RangeCheck>([56]) -> ([89]);
store_temp<GasBuiltin>([57]) -> ([90]);
store_temp<System>([59]) -> ([91]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([87]) -> ([92]);
return([88], [89], [90], [91], [92]);
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([93]);
felt252_const<375233589013918064796019>() -> ([94]);
store_temp<felt252>([94]) -> ([94]);
array_append<felt252>([93], [94]) -> ([95]);
struct_construct<core::panics::Panic>() -> ([96]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([96], [95]) -> ([97]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([97]) -> ([98]);
store_temp<Pedersen>([0]) -> ([99]);
store_temp<RangeCheck>([42]) -> ([100]);
store_temp<GasBuiltin>([43]) -> ([101]);
store_temp<System>([3]) -> ([102]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([98]) -> ([103]);
return([99], [100], [101], [102], [103]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([104]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([105]);
store_temp<felt252>([105]) -> ([105]);
array_append<felt252>([104], [105]) -> ([106]);
struct_construct<core::panics::Panic>() -> ([107]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([107], [106]) -> ([108]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([108]) -> ([109]);
store_temp<Pedersen>([0]) -> ([110]);
store_temp<RangeCheck>([9]) -> ([111]);
store_temp<GasBuiltin>([6]) -> ([112]);
store_temp<System>([3]) -> ([113]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([109]) -> ([114]);
return([110], [111], [112], [113], [114]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([115]);
felt252_const<375233589013918064796019>() -> ([116]);
store_temp<felt252>([116]) -> ([116]);
array_append<felt252>([115], [116]) -> ([117]);
struct_construct<core::panics::Panic>() -> ([118]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([118], [117]) -> ([119]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([119]) -> ([120]);
store_temp<Pedersen>([0]) -> ([121]);
store_temp<RangeCheck>([7]) -> ([122]);
store_temp<GasBuiltin>([8]) -> ([123]);
store_temp<System>([3]) -> ([124]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([120]) -> ([125]);
return([121], [122], [123], [124], [125]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1195([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::integer::u256Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u256>>([11]) { fallthrough([14]) 1179([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 1112() };
branch_align() -> ();
drop<core::integer::u256>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 1164([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
store_temp<RangeCheck>([40]) -> ([59]);
store_temp<GasBuiltin>([41]) -> ([60]);
store_temp<Pedersen>([0]) -> ([61]);
store_temp<System>([3]) -> ([62]);
store_temp<helloERC20::pledge::pledge::ContractState>([53]) -> ([63]);
store_temp<core::integer::u256>([14]) -> ([64]);
function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew>([59], [60], [61], [62], [63], [64]) -> ([54], [55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([58]) { fallthrough([65]) 1156([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([65]) -> ([67], [68]);
drop<helloERC20::pledge::pledge::ContractState>([67]) -> ();
array_new<felt252>() -> ([69]);
snapshot_take<core::bool>([68]) -> ([70], [71]);
drop<core::bool>([70]) -> ();
store_temp<core::bool>([71]) -> ([74]);
store_temp<Array<felt252>>([69]) -> ([75]);
function_call<user@core::BoolSerde::serialize>([74], [75]) -> ([72], [73]);
drop<Unit>([73]) -> ();
snapshot_take<Array<felt252>>([72]) -> ([76], [77]);
drop<Array<felt252>>([76]) -> ();
struct_construct<core::array::Span::<core::felt252>>([77]) -> ([78]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([78]) -> ([79]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([79]) -> ([80]);
store_temp<Pedersen>([56]) -> ([81]);
store_temp<RangeCheck>([54]) -> ([82]);
store_temp<GasBuiltin>([55]) -> ([83]);
store_temp<System>([57]) -> ([84]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([86]);
store_temp<Pedersen>([56]) -> ([87]);
store_temp<RangeCheck>([54]) -> ([88]);
store_temp<GasBuiltin>([55]) -> ([89]);
store_temp<System>([57]) -> ([90]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<core::integer::u256>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<375233589013918064796019>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
struct_construct<core::panics::Panic>() -> ([95]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([95], [94]) -> ([96]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([96]) -> ([97]);
store_temp<Pedersen>([0]) -> ([98]);
store_temp<RangeCheck>([42]) -> ([99]);
store_temp<GasBuiltin>([43]) -> ([100]);
store_temp<System>([3]) -> ([101]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([97]) -> ([102]);
return([98], [99], [100], [101], [102]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
struct_construct<core::panics::Panic>() -> ([106]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([106], [105]) -> ([107]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([107]) -> ([108]);
store_temp<Pedersen>([0]) -> ([109]);
store_temp<RangeCheck>([9]) -> ([110]);
store_temp<GasBuiltin>([6]) -> ([111]);
store_temp<System>([3]) -> ([112]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([114]);
felt252_const<375233589013918064796019>() -> ([115]);
store_temp<felt252>([115]) -> ([115]);
array_append<felt252>([114], [115]) -> ([116]);
struct_construct<core::panics::Panic>() -> ([117]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([117], [116]) -> ([118]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([118]) -> ([119]);
store_temp<Pedersen>([0]) -> ([120]);
store_temp<RangeCheck>([7]) -> ([121]);
store_temp<GasBuiltin>([8]) -> ([122]);
store_temp<System>([3]) -> ([123]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1330([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1314([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 1247() };
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 1299([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
store_temp<RangeCheck>([40]) -> ([59]);
store_temp<GasBuiltin>([41]) -> ([60]);
store_temp<Pedersen>([0]) -> ([61]);
store_temp<System>([3]) -> ([62]);
store_temp<helloERC20::pledge::pledge::ContractState>([53]) -> ([63]);
store_temp<ContractAddress>([14]) -> ([64]);
function_call<user@helloERC20::pledge::pledge::token_pledge::withdrew_profit>([59], [60], [61], [62], [63], [64]) -> ([54], [55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([58]) { fallthrough([65]) 1291([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>([65]) -> ([67], [68]);
drop<helloERC20::pledge::pledge::ContractState>([67]) -> ();
array_new<felt252>() -> ([69]);
snapshot_take<core::integer::u256>([68]) -> ([70], [71]);
drop<core::integer::u256>([70]) -> ();
store_temp<core::integer::u256>([71]) -> ([74]);
store_temp<Array<felt252>>([69]) -> ([75]);
function_call<user@core::integer::u256Serde::serialize>([74], [75]) -> ([72], [73]);
drop<Unit>([73]) -> ();
snapshot_take<Array<felt252>>([72]) -> ([76], [77]);
drop<Array<felt252>>([76]) -> ();
struct_construct<core::array::Span::<core::felt252>>([77]) -> ([78]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([78]) -> ([79]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([79]) -> ([80]);
store_temp<Pedersen>([56]) -> ([81]);
store_temp<RangeCheck>([54]) -> ([82]);
store_temp<GasBuiltin>([55]) -> ([83]);
store_temp<System>([57]) -> ([84]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([86]);
store_temp<Pedersen>([56]) -> ([87]);
store_temp<RangeCheck>([54]) -> ([88]);
store_temp<GasBuiltin>([55]) -> ([89]);
store_temp<System>([57]) -> ([90]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<375233589013918064796019>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
struct_construct<core::panics::Panic>() -> ([95]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([95], [94]) -> ([96]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([96]) -> ([97]);
store_temp<Pedersen>([0]) -> ([98]);
store_temp<RangeCheck>([42]) -> ([99]);
store_temp<GasBuiltin>([43]) -> ([100]);
store_temp<System>([3]) -> ([101]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([97]) -> ([102]);
return([98], [99], [100], [101], [102]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
struct_construct<core::panics::Panic>() -> ([106]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([106], [105]) -> ([107]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([107]) -> ([108]);
store_temp<Pedersen>([0]) -> ([109]);
store_temp<RangeCheck>([9]) -> ([110]);
store_temp<GasBuiltin>([6]) -> ([111]);
store_temp<System>([3]) -> ([112]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([114]);
felt252_const<375233589013918064796019>() -> ([115]);
store_temp<felt252>([115]) -> ([115]);
array_append<felt252>([114], [115]) -> ([116]);
struct_construct<core::panics::Panic>() -> ([117]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([117], [116]) -> ([118]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([118]) -> ([119]);
store_temp<Pedersen>([0]) -> ([120]);
store_temp<RangeCheck>([7]) -> ([121]);
store_temp<GasBuiltin>([8]) -> ([122]);
store_temp<System>([3]) -> ([123]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 1438([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
snapshot_take<u32>([9]) -> ([10], [11]);
drop<u32>([10]) -> ();
u32_const<0>() -> ([12]);
snapshot_take<u32>([12]) -> ([13], [14]);
drop<u32>([13]) -> ();
rename<u32>([11]) -> ([15]);
rename<u32>([14]) -> ([16]);
store_temp<u32>([15]) -> ([15]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([15], [16]) { fallthrough() 1376() };
branch_align() -> ();
store_temp<System>([2]) -> ([19]);
function_call<user@core::starknet::use_system_implicit>([19]) -> ([17], [18]);
drop<Unit>([18]) -> ();
array_new<felt252>() -> ([20]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([21]);
store_temp<felt252>([21]) -> ([21]);
array_append<felt252>([20], [21]) -> ([22]);
struct_construct<core::panics::Panic>() -> ([23]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([23], [22]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([24]) -> ([25]);
store_temp<RangeCheck>([4]) -> ([26]);
store_temp<GasBuiltin>([5]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
get_builtin_costs() -> ([30]);
store_temp<BuiltinCosts>([30]) -> ([30]);
withdraw_gas_all([4], [5], [30]) { fallthrough([31], [32]) 1425([33], [34]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([35]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([36]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([37]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([38]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([39]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([40]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([41]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::ContractState>([35], [36], [37], [38], [39], [40], [41], [42], [43]) -> ([44]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([44]) -> ([45], [46]);
drop<helloERC20::pledge::pledge::ContractState>([45]) -> ();
store_temp<RangeCheck>([31]) -> ([51]);
store_temp<GasBuiltin>([32]) -> ([52]);
store_temp<System>([2]) -> ([53]);
store_temp<helloERC20::pledge::pledge::ContractState>([46]) -> ([54]);
function_call<user@helloERC20::pledge::pledge::token_pledge::get_total_pledge>([51], [52], [53], [54]) -> ([47], [48], [49], [50]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([50]) { fallthrough([55]) 1418([56]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([55]) -> ([57]);
array_new<felt252>() -> ([58]);
snapshot_take<core::integer::u256>([57]) -> ([59], [60]);
drop<core::integer::u256>([59]) -> ();
store_temp<core::integer::u256>([60]) -> ([63]);
store_temp<Array<felt252>>([58]) -> ([64]);
function_call<user@core::integer::u256Serde::serialize>([63], [64]) -> ([61], [62]);
drop<Unit>([62]) -> ();
snapshot_take<Array<felt252>>([61]) -> ([65], [66]);
drop<Array<felt252>>([65]) -> ();
struct_construct<core::array::Span::<core::felt252>>([66]) -> ([67]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([67]) -> ([68]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([68]) -> ([69]);
store_temp<RangeCheck>([47]) -> ([70]);
store_temp<GasBuiltin>([48]) -> ([71]);
store_temp<System>([49]) -> ([72]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([69]) -> ([73]);
return([70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([56]) -> ([74]);
store_temp<RangeCheck>([47]) -> ([75]);
store_temp<GasBuiltin>([48]) -> ([76]);
store_temp<System>([49]) -> ([77]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([78]);
return([75], [76], [77], [78]);
branch_align() -> ();
array_new<felt252>() -> ([79]);
felt252_const<375233589013918064796019>() -> ([80]);
store_temp<felt252>([80]) -> ([80]);
array_append<felt252>([79], [80]) -> ([81]);
struct_construct<core::panics::Panic>() -> ([82]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([82], [81]) -> ([83]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([83]) -> ([84]);
store_temp<RangeCheck>([33]) -> ([85]);
store_temp<GasBuiltin>([34]) -> ([86]);
store_temp<System>([2]) -> ([87]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([84]) -> ([88]);
return([85], [86], [87], [88]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([89]);
felt252_const<375233589013918064796019>() -> ([90]);
store_temp<felt252>([90]) -> ([90]);
array_append<felt252>([89], [90]) -> ([91]);
struct_construct<core::panics::Panic>() -> ([92]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([92], [91]) -> ([93]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([93]) -> ([94]);
store_temp<RangeCheck>([6]) -> ([95]);
store_temp<GasBuiltin>([7]) -> ([96]);
store_temp<System>([2]) -> ([97]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([98]);
return([95], [96], [97], [98]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1572([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::integer::u256Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u256>>([11]) { fallthrough([14]) 1556([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 1489() };
branch_align() -> ();
drop<core::integer::u256>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 1541([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
store_temp<RangeCheck>([40]) -> ([59]);
store_temp<GasBuiltin>([41]) -> ([60]);
store_temp<Pedersen>([0]) -> ([61]);
store_temp<System>([3]) -> ([62]);
store_temp<helloERC20::pledge::pledge::ContractState>([53]) -> ([63]);
store_temp<core::integer::u256>([14]) -> ([64]);
function_call<user@helloERC20::pledge::pledge::token_pledge::sell_starking>([59], [60], [61], [62], [63], [64]) -> ([54], [55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([58]) { fallthrough([65]) 1533([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>>([65]) -> ([67], [68]);
drop<helloERC20::pledge::pledge::ContractState>([67]) -> ();
array_new<felt252>() -> ([69]);
snapshot_take<felt252>([68]) -> ([70], [71]);
drop<felt252>([70]) -> ();
store_temp<felt252>([71]) -> ([74]);
store_temp<Array<felt252>>([69]) -> ([75]);
function_call<user@core::Felt252Serde::serialize>([74], [75]) -> ([72], [73]);
drop<Unit>([73]) -> ();
snapshot_take<Array<felt252>>([72]) -> ([76], [77]);
drop<Array<felt252>>([76]) -> ();
struct_construct<core::array::Span::<core::felt252>>([77]) -> ([78]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([78]) -> ([79]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([79]) -> ([80]);
store_temp<Pedersen>([56]) -> ([81]);
store_temp<RangeCheck>([54]) -> ([82]);
store_temp<GasBuiltin>([55]) -> ([83]);
store_temp<System>([57]) -> ([84]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([86]);
store_temp<Pedersen>([56]) -> ([87]);
store_temp<RangeCheck>([54]) -> ([88]);
store_temp<GasBuiltin>([55]) -> ([89]);
store_temp<System>([57]) -> ([90]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<core::integer::u256>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<375233589013918064796019>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
struct_construct<core::panics::Panic>() -> ([95]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([95], [94]) -> ([96]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([96]) -> ([97]);
store_temp<Pedersen>([0]) -> ([98]);
store_temp<RangeCheck>([42]) -> ([99]);
store_temp<GasBuiltin>([43]) -> ([100]);
store_temp<System>([3]) -> ([101]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([97]) -> ([102]);
return([98], [99], [100], [101], [102]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
struct_construct<core::panics::Panic>() -> ([106]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([106], [105]) -> ([107]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([107]) -> ([108]);
store_temp<Pedersen>([0]) -> ([109]);
store_temp<RangeCheck>([9]) -> ([110]);
store_temp<GasBuiltin>([6]) -> ([111]);
store_temp<System>([3]) -> ([112]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([114]);
felt252_const<375233589013918064796019>() -> ([115]);
store_temp<felt252>([115]) -> ([115]);
array_append<felt252>([114], [115]) -> ([116]);
struct_construct<core::panics::Panic>() -> ([117]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([117], [116]) -> ([118]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([118]) -> ([119]);
store_temp<Pedersen>([0]) -> ([120]);
store_temp<RangeCheck>([7]) -> ([121]);
store_temp<GasBuiltin>([8]) -> ([122]);
store_temp<System>([3]) -> ([123]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1708([7], [8]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([4]) -> ([11]);
function_call<user@core::Felt252Serde::deserialize>([11]) -> ([9], [10]);
store_temp<RangeCheck>([5]) -> ([5]);
enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([12]) 1692([13]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([9]) -> ([14]);
array_len<felt252>([14]) -> ([15]);
snapshot_take<u32>([15]) -> ([16], [17]);
drop<u32>([16]) -> ();
u32_const<0>() -> ([18]);
snapshot_take<u32>([18]) -> ([19], [20]);
drop<u32>([19]) -> ();
rename<u32>([17]) -> ([21]);
rename<u32>([20]) -> ([22]);
store_temp<u32>([21]) -> ([21]);
u32_eq([21], [22]) { fallthrough() 1624() };
branch_align() -> ();
drop<felt252>([12]) -> ();
store_temp<System>([3]) -> ([25]);
function_call<user@core::starknet::use_system_implicit>([25]) -> ([23], [24]);
drop<Unit>([24]) -> ();
array_new<felt252>() -> ([26]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([27]);
store_temp<felt252>([27]) -> ([27]);
array_append<felt252>([26], [27]) -> ([28]);
struct_construct<core::panics::Panic>() -> ([29]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([29], [28]) -> ([30]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([30]) -> ([31]);
store_temp<Pedersen>([0]) -> ([32]);
store_temp<RangeCheck>([5]) -> ([33]);
store_temp<GasBuiltin>([6]) -> ([34]);
store_temp<System>([23]) -> ([35]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
get_builtin_costs() -> ([37]);
store_temp<BuiltinCosts>([37]) -> ([37]);
withdraw_gas_all([5], [6], [37]) { fallthrough([38], [39]) 1677([40], [41]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::ContractState>([42], [43], [44], [45], [46], [47], [48], [49], [50]) -> ([51]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([51]) -> ([52], [53]);
drop<helloERC20::pledge::pledge::ContractState>([52]) -> ();
store_temp<RangeCheck>([38]) -> ([59]);
store_temp<GasBuiltin>([39]) -> ([60]);
store_temp<Pedersen>([0]) -> ([61]);
store_temp<System>([3]) -> ([62]);
store_temp<helloERC20::pledge::pledge::ContractState>([53]) -> ([63]);
store_temp<felt252>([12]) -> ([64]);
function_call<user@helloERC20::pledge::pledge::token_pledge::check_onsell_starking>([59], [60], [61], [62], [63], [64]) -> ([54], [55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([58]) { fallthrough([65]) 1669([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([65]) -> ([67]);
array_new<felt252>() -> ([68]);
snapshot_take<helloERC20::pledge::PledgeInfo>([67]) -> ([69], [70]);
drop<helloERC20::pledge::PledgeInfo>([69]) -> ();
store_temp<helloERC20::pledge::PledgeInfo>([70]) -> ([73]);
store_temp<Array<felt252>>([68]) -> ([74]);
function_call<user@helloERC20::pledge::PledgeInfoSerde::serialize>([73], [74]) -> ([71], [72]);
drop<Unit>([72]) -> ();
snapshot_take<Array<felt252>>([71]) -> ([75], [76]);
drop<Array<felt252>>([75]) -> ();
struct_construct<core::array::Span::<core::felt252>>([76]) -> ([77]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([77]) -> ([78]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([78]) -> ([79]);
store_temp<Pedersen>([56]) -> ([80]);
store_temp<RangeCheck>([54]) -> ([81]);
store_temp<GasBuiltin>([55]) -> ([82]);
store_temp<System>([57]) -> ([83]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([79]) -> ([84]);
return([80], [81], [82], [83], [84]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([85]);
store_temp<Pedersen>([56]) -> ([86]);
store_temp<RangeCheck>([54]) -> ([87]);
store_temp<GasBuiltin>([55]) -> ([88]);
store_temp<System>([57]) -> ([89]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([85]) -> ([90]);
return([86], [87], [88], [89], [90]);
branch_align() -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([91]);
felt252_const<375233589013918064796019>() -> ([92]);
store_temp<felt252>([92]) -> ([92]);
array_append<felt252>([91], [92]) -> ([93]);
struct_construct<core::panics::Panic>() -> ([94]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([94], [93]) -> ([95]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([95]) -> ([96]);
store_temp<Pedersen>([0]) -> ([97]);
store_temp<RangeCheck>([40]) -> ([98]);
store_temp<GasBuiltin>([41]) -> ([99]);
store_temp<System>([3]) -> ([100]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
drop<Unit>([13]) -> ();
drop<core::array::Span::<core::felt252>>([9]) -> ();
array_new<felt252>() -> ([102]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([103]);
store_temp<felt252>([103]) -> ([103]);
array_append<felt252>([102], [103]) -> ([104]);
struct_construct<core::panics::Panic>() -> ([105]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([105], [104]) -> ([106]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([106]) -> ([107]);
store_temp<Pedersen>([0]) -> ([108]);
store_temp<RangeCheck>([5]) -> ([109]);
store_temp<GasBuiltin>([6]) -> ([110]);
store_temp<System>([3]) -> ([111]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([107]) -> ([112]);
return([108], [109], [110], [111], [112]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([113]);
felt252_const<375233589013918064796019>() -> ([114]);
store_temp<felt252>([114]) -> ([114]);
array_append<felt252>([113], [114]) -> ([115]);
struct_construct<core::panics::Panic>() -> ([116]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([116], [115]) -> ([117]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([117]) -> ([118]);
store_temp<Pedersen>([0]) -> ([119]);
store_temp<RangeCheck>([7]) -> ([120]);
store_temp<GasBuiltin>([8]) -> ([121]);
store_temp<System>([3]) -> ([122]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([118]) -> ([123]);
return([119], [120], [121], [122], [123]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 1868([7], [8]) };
branch_align() -> ();
store_temp<core::array::Span::<core::felt252>>([4]) -> ([11]);
function_call<user@core::Felt252Serde::deserialize>([11]) -> ([9], [10]);
store_temp<RangeCheck>([5]) -> ([5]);
enum_match<core::option::Option::<core::felt252>>([10]) { fallthrough([12]) 1852([13]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([17]);
store_temp<core::array::Span::<core::felt252>>([9]) -> ([18]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([17], [18]) -> ([14], [15], [16]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([16]) { fallthrough([19]) 1835([20]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([15]) -> ([21]);
array_len<felt252>([21]) -> ([22]);
snapshot_take<u32>([22]) -> ([23], [24]);
drop<u32>([23]) -> ();
u32_const<0>() -> ([25]);
snapshot_take<u32>([25]) -> ([26], [27]);
drop<u32>([26]) -> ();
rename<u32>([24]) -> ([28]);
rename<u32>([27]) -> ([29]);
store_temp<u32>([28]) -> ([28]);
u32_eq([28], [29]) { fallthrough() 1766() };
branch_align() -> ();
drop<ContractAddress>([19]) -> ();
drop<felt252>([12]) -> ();
store_temp<System>([3]) -> ([32]);
function_call<user@core::starknet::use_system_implicit>([32]) -> ([30], [31]);
drop<Unit>([31]) -> ();
array_new<felt252>() -> ([33]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([34]);
store_temp<felt252>([34]) -> ([34]);
array_append<felt252>([33], [34]) -> ([35]);
struct_construct<core::panics::Panic>() -> ([36]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([36], [35]) -> ([37]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([37]) -> ([38]);
store_temp<Pedersen>([0]) -> ([39]);
store_temp<RangeCheck>([14]) -> ([40]);
store_temp<GasBuiltin>([6]) -> ([41]);
store_temp<System>([30]) -> ([42]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
get_builtin_costs() -> ([44]);
store_temp<BuiltinCosts>([44]) -> ([44]);
withdraw_gas_all([14], [6], [44]) { fallthrough([45], [46]) 1819([47], [48]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([53]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([54]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([55]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([56]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([57]);
struct_construct<helloERC20::pledge::pledge::ContractState>([49], [50], [51], [52], [53], [54], [55], [56], [57]) -> ([58]);
store_temp<RangeCheck>([45]) -> ([64]);
store_temp<GasBuiltin>([46]) -> ([65]);
store_temp<Pedersen>([0]) -> ([66]);
store_temp<System>([3]) -> ([67]);
store_temp<helloERC20::pledge::pledge::ContractState>([58]) -> ([68]);
store_temp<felt252>([12]) -> ([69]);
store_temp<ContractAddress>([19]) -> ([70]);
function_call<user@helloERC20::pledge::pledge::token_pledge::buy_starking>([64], [65], [66], [67], [68], [69], [70]) -> ([59], [60], [61], [62], [63]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([63]) { fallthrough([71]) 1811([72]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([71]) -> ([73], [74]);
drop<helloERC20::pledge::pledge::ContractState>([73]) -> ();
array_new<felt252>() -> ([75]);
snapshot_take<core::bool>([74]) -> ([76], [77]);
drop<core::bool>([76]) -> ();
store_temp<core::bool>([77]) -> ([80]);
store_temp<Array<felt252>>([75]) -> ([81]);
function_call<user@core::BoolSerde::serialize>([80], [81]) -> ([78], [79]);
drop<Unit>([79]) -> ();
snapshot_take<Array<felt252>>([78]) -> ([82], [83]);
drop<Array<felt252>>([82]) -> ();
struct_construct<core::array::Span::<core::felt252>>([83]) -> ([84]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([84]) -> ([85]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([85]) -> ([86]);
store_temp<Pedersen>([61]) -> ([87]);
store_temp<RangeCheck>([59]) -> ([88]);
store_temp<GasBuiltin>([60]) -> ([89]);
store_temp<System>([62]) -> ([90]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([72]) -> ([92]);
store_temp<Pedersen>([61]) -> ([93]);
store_temp<RangeCheck>([59]) -> ([94]);
store_temp<GasBuiltin>([60]) -> ([95]);
store_temp<System>([62]) -> ([96]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
branch_align() -> ();
drop<ContractAddress>([19]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([98]);
felt252_const<375233589013918064796019>() -> ([99]);
store_temp<felt252>([99]) -> ([99]);
array_append<felt252>([98], [99]) -> ([100]);
struct_construct<core::panics::Panic>() -> ([101]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([101], [100]) -> ([102]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([102]) -> ([103]);
store_temp<Pedersen>([0]) -> ([104]);
store_temp<RangeCheck>([47]) -> ([105]);
store_temp<GasBuiltin>([48]) -> ([106]);
store_temp<System>([3]) -> ([107]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([103]) -> ([108]);
return([104], [105], [106], [107], [108]);
branch_align() -> ();
drop<Unit>([20]) -> ();
drop<core::array::Span::<core::felt252>>([15]) -> ();
drop<felt252>([12]) -> ();
array_new<felt252>() -> ([109]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([110]);
store_temp<felt252>([110]) -> ([110]);
array_append<felt252>([109], [110]) -> ([111]);
struct_construct<core::panics::Panic>() -> ([112]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([112], [111]) -> ([113]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([113]) -> ([114]);
store_temp<Pedersen>([0]) -> ([115]);
store_temp<RangeCheck>([14]) -> ([116]);
store_temp<GasBuiltin>([6]) -> ([117]);
store_temp<System>([3]) -> ([118]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([114]) -> ([119]);
return([115], [116], [117], [118], [119]);
branch_align() -> ();
drop<Unit>([13]) -> ();
drop<core::array::Span::<core::felt252>>([9]) -> ();
array_new<felt252>() -> ([120]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([121]);
store_temp<felt252>([121]) -> ([121]);
array_append<felt252>([120], [121]) -> ([122]);
struct_construct<core::panics::Panic>() -> ([123]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([123], [122]) -> ([124]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([124]) -> ([125]);
store_temp<Pedersen>([0]) -> ([126]);
store_temp<RangeCheck>([5]) -> ([127]);
store_temp<GasBuiltin>([6]) -> ([128]);
store_temp<System>([3]) -> ([129]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([125]) -> ([130]);
return([126], [127], [128], [129], [130]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([131]);
felt252_const<375233589013918064796019>() -> ([132]);
store_temp<felt252>([132]) -> ([132]);
array_append<felt252>([131], [132]) -> ([133]);
struct_construct<core::panics::Panic>() -> ([134]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([134], [133]) -> ([135]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([135]) -> ([136]);
store_temp<Pedersen>([0]) -> ([137]);
store_temp<RangeCheck>([7]) -> ([138]);
store_temp<GasBuiltin>([8]) -> ([139]);
store_temp<System>([3]) -> ([140]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([136]) -> ([141]);
return([137], [138], [139], [140], [141]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 2003([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 1987([15]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([10]) -> ([16]);
array_len<felt252>([16]) -> ([17]);
snapshot_take<u32>([17]) -> ([18], [19]);
drop<u32>([18]) -> ();
u32_const<0>() -> ([20]);
snapshot_take<u32>([20]) -> ([21], [22]);
drop<u32>([21]) -> ();
rename<u32>([19]) -> ([23]);
rename<u32>([22]) -> ([24]);
store_temp<u32>([23]) -> ([23]);
u32_eq([23], [24]) { fallthrough() 1920() };
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([27]);
function_call<user@core::starknet::use_system_implicit>([27]) -> ([25], [26]);
drop<Unit>([26]) -> ();
array_new<felt252>() -> ([28]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([29]);
store_temp<felt252>([29]) -> ([29]);
array_append<felt252>([28], [29]) -> ([30]);
struct_construct<core::panics::Panic>() -> ([31]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([31], [30]) -> ([32]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([32]) -> ([33]);
store_temp<Pedersen>([0]) -> ([34]);
store_temp<RangeCheck>([9]) -> ([35]);
store_temp<GasBuiltin>([6]) -> ([36]);
store_temp<System>([25]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([33]) -> ([38]);
return([34], [35], [36], [37], [38]);
branch_align() -> ();
get_builtin_costs() -> ([39]);
store_temp<BuiltinCosts>([39]) -> ([39]);
withdraw_gas_all([9], [6], [39]) { fallthrough([40], [41]) 1972([42], [43]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([44]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([45]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([46]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([47]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([48]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([49]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([50]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([51]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([52]);
struct_construct<helloERC20::pledge::pledge::ContractState>([44], [45], [46], [47], [48], [49], [50], [51], [52]) -> ([53]);
store_temp<RangeCheck>([40]) -> ([59]);
store_temp<GasBuiltin>([41]) -> ([60]);
store_temp<Pedersen>([0]) -> ([61]);
store_temp<System>([3]) -> ([62]);
store_temp<helloERC20::pledge::pledge::ContractState>([53]) -> ([63]);
store_temp<ContractAddress>([14]) -> ([64]);
function_call<user@helloERC20::pledge::pledge::token_pledge::transfer_starking>([59], [60], [61], [62], [63], [64]) -> ([54], [55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([58]) { fallthrough([65]) 1964([66]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([65]) -> ([67], [68]);
drop<helloERC20::pledge::pledge::ContractState>([67]) -> ();
array_new<felt252>() -> ([69]);
snapshot_take<core::bool>([68]) -> ([70], [71]);
drop<core::bool>([70]) -> ();
store_temp<core::bool>([71]) -> ([74]);
store_temp<Array<felt252>>([69]) -> ([75]);
function_call<user@core::BoolSerde::serialize>([74], [75]) -> ([72], [73]);
drop<Unit>([73]) -> ();
snapshot_take<Array<felt252>>([72]) -> ([76], [77]);
drop<Array<felt252>>([76]) -> ();
struct_construct<core::array::Span::<core::felt252>>([77]) -> ([78]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([78]) -> ([79]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([79]) -> ([80]);
store_temp<Pedersen>([56]) -> ([81]);
store_temp<RangeCheck>([54]) -> ([82]);
store_temp<GasBuiltin>([55]) -> ([83]);
store_temp<System>([57]) -> ([84]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([66]) -> ([86]);
store_temp<Pedersen>([56]) -> ([87]);
store_temp<RangeCheck>([54]) -> ([88]);
store_temp<GasBuiltin>([55]) -> ([89]);
store_temp<System>([57]) -> ([90]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([86]) -> ([91]);
return([87], [88], [89], [90], [91]);
branch_align() -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([92]);
felt252_const<375233589013918064796019>() -> ([93]);
store_temp<felt252>([93]) -> ([93]);
array_append<felt252>([92], [93]) -> ([94]);
struct_construct<core::panics::Panic>() -> ([95]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([95], [94]) -> ([96]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([96]) -> ([97]);
store_temp<Pedersen>([0]) -> ([98]);
store_temp<RangeCheck>([42]) -> ([99]);
store_temp<GasBuiltin>([43]) -> ([100]);
store_temp<System>([3]) -> ([101]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([97]) -> ([102]);
return([98], [99], [100], [101], [102]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([103]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([104]);
store_temp<felt252>([104]) -> ([104]);
array_append<felt252>([103], [104]) -> ([105]);
struct_construct<core::panics::Panic>() -> ([106]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([106], [105]) -> ([107]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([107]) -> ([108]);
store_temp<Pedersen>([0]) -> ([109]);
store_temp<RangeCheck>([9]) -> ([110]);
store_temp<GasBuiltin>([6]) -> ([111]);
store_temp<System>([3]) -> ([112]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([114]);
felt252_const<375233589013918064796019>() -> ([115]);
store_temp<felt252>([115]) -> ([115]);
array_append<felt252>([114], [115]) -> ([116]);
struct_construct<core::panics::Panic>() -> ([117]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([117], [116]) -> ([118]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([118]) -> ([119]);
store_temp<Pedersen>([0]) -> ([120]);
store_temp<RangeCheck>([7]) -> ([121]);
store_temp<GasBuiltin>([8]) -> ([122]);
store_temp<System>([3]) -> ([123]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([119]) -> ([124]);
return([120], [121], [122], [123], [124]);
revoke_ap_tracking() -> ();
withdraw_gas([0], [1]) { fallthrough([4], [5]) 2111([6], [7]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([3]) -> ([8]);
array_len<felt252>([8]) -> ([9]);
snapshot_take<u32>([9]) -> ([10], [11]);
drop<u32>([10]) -> ();
u32_const<0>() -> ([12]);
snapshot_take<u32>([12]) -> ([13], [14]);
drop<u32>([13]) -> ();
rename<u32>([11]) -> ([15]);
rename<u32>([14]) -> ([16]);
store_temp<u32>([15]) -> ([15]);
store_temp<RangeCheck>([4]) -> ([4]);
u32_eq([15], [16]) { fallthrough() 2049() };
branch_align() -> ();
store_temp<System>([2]) -> ([19]);
function_call<user@core::starknet::use_system_implicit>([19]) -> ([17], [18]);
drop<Unit>([18]) -> ();
array_new<felt252>() -> ([20]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([21]);
store_temp<felt252>([21]) -> ([21]);
array_append<felt252>([20], [21]) -> ([22]);
struct_construct<core::panics::Panic>() -> ([23]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([23], [22]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([24]) -> ([25]);
store_temp<RangeCheck>([4]) -> ([26]);
store_temp<GasBuiltin>([5]) -> ([27]);
store_temp<System>([17]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
get_builtin_costs() -> ([30]);
store_temp<BuiltinCosts>([30]) -> ([30]);
withdraw_gas_all([4], [5], [30]) { fallthrough([31], [32]) 2098([33], [34]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([35]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([36]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([37]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([38]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([39]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([40]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([41]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([42]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([43]);
struct_construct<helloERC20::pledge::pledge::ContractState>([35], [36], [37], [38], [39], [40], [41], [42], [43]) -> ([44]);
snapshot_take<helloERC20::pledge::pledge::ContractState>([44]) -> ([45], [46]);
drop<helloERC20::pledge::pledge::ContractState>([45]) -> ();
store_temp<RangeCheck>([31]) -> ([51]);
store_temp<GasBuiltin>([32]) -> ([52]);
store_temp<System>([2]) -> ([53]);
store_temp<helloERC20::pledge::pledge::ContractState>([46]) -> ([54]);
function_call<user@helloERC20::pledge::pledge::token_pledge::get_burn>([51], [52], [53], [54]) -> ([47], [48], [49], [50]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([50]) { fallthrough([55]) 2091([56]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([55]) -> ([57]);
array_new<felt252>() -> ([58]);
snapshot_take<core::integer::u256>([57]) -> ([59], [60]);
drop<core::integer::u256>([59]) -> ();
store_temp<core::integer::u256>([60]) -> ([63]);
store_temp<Array<felt252>>([58]) -> ([64]);
function_call<user@core::integer::u256Serde::serialize>([63], [64]) -> ([61], [62]);
drop<Unit>([62]) -> ();
snapshot_take<Array<felt252>>([61]) -> ([65], [66]);
drop<Array<felt252>>([65]) -> ();
struct_construct<core::array::Span::<core::felt252>>([66]) -> ([67]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([67]) -> ([68]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([68]) -> ([69]);
store_temp<RangeCheck>([47]) -> ([70]);
store_temp<GasBuiltin>([48]) -> ([71]);
store_temp<System>([49]) -> ([72]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([69]) -> ([73]);
return([70], [71], [72], [73]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([56]) -> ([74]);
store_temp<RangeCheck>([47]) -> ([75]);
store_temp<GasBuiltin>([48]) -> ([76]);
store_temp<System>([49]) -> ([77]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([74]) -> ([78]);
return([75], [76], [77], [78]);
branch_align() -> ();
array_new<felt252>() -> ([79]);
felt252_const<375233589013918064796019>() -> ([80]);
store_temp<felt252>([80]) -> ([80]);
array_append<felt252>([79], [80]) -> ([81]);
struct_construct<core::panics::Panic>() -> ([82]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([82], [81]) -> ([83]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([83]) -> ([84]);
store_temp<RangeCheck>([33]) -> ([85]);
store_temp<GasBuiltin>([34]) -> ([86]);
store_temp<System>([2]) -> ([87]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([84]) -> ([88]);
return([85], [86], [87], [88]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([3]) -> ();
array_new<felt252>() -> ([89]);
felt252_const<375233589013918064796019>() -> ([90]);
store_temp<felt252>([90]) -> ([90]);
array_append<felt252>([89], [90]) -> ([91]);
struct_construct<core::panics::Panic>() -> ([92]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([92], [91]) -> ([93]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([93]) -> ([94]);
store_temp<RangeCheck>([6]) -> ([95]);
store_temp<GasBuiltin>([7]) -> ([96]);
store_temp<System>([2]) -> ([97]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([98]);
return([95], [96], [97], [98]);
revoke_ap_tracking() -> ();
withdraw_gas([1], [2]) { fallthrough([5], [6]) 2289([7], [8]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([4]) -> ([13]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([11]) { fallthrough([14]) 2273([15]) };
branch_align() -> ();
store_temp<RangeCheck>([9]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
function_call<user@core::integer::u256Serde::deserialize>([19], [20]) -> ([16], [17], [18]);
enum_match<core::option::Option::<core::integer::u256>>([18]) { fallthrough([21]) 2256([22]) };
branch_align() -> ();
store_temp<RangeCheck>([16]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([17]) -> ([27]);
function_call<user@core::integer::U8Serde::deserialize>([26], [27]) -> ([23], [24], [25]);
enum_match<core::option::Option::<core::integer::u8>>([25]) { fallthrough([28]) 2238([29]) };
branch_align() -> ();
struct_deconstruct<core::array::Span::<core::felt252>>([24]) -> ([30]);
array_len<felt252>([30]) -> ([31]);
snapshot_take<u32>([31]) -> ([32], [33]);
drop<u32>([32]) -> ();
u32_const<0>() -> ([34]);
snapshot_take<u32>([34]) -> ([35], [36]);
drop<u32>([35]) -> ();
rename<u32>([33]) -> ([37]);
rename<u32>([36]) -> ([38]);
store_temp<u32>([37]) -> ([37]);
u32_eq([37], [38]) { fallthrough() 2174() };
branch_align() -> ();
drop<u8>([28]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
store_temp<System>([3]) -> ([41]);
function_call<user@core::starknet::use_system_implicit>([41]) -> ([39], [40]);
drop<Unit>([40]) -> ();
array_new<felt252>() -> ([42]);
felt252_const<7733229381460288120802334208475838166080759535023995805565484692595>() -> ([43]);
store_temp<felt252>([43]) -> ([43]);
array_append<felt252>([42], [43]) -> ([44]);
struct_construct<core::panics::Panic>() -> ([45]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([45], [44]) -> ([46]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([46]) -> ([47]);
store_temp<Pedersen>([0]) -> ([48]);
store_temp<RangeCheck>([23]) -> ([49]);
store_temp<GasBuiltin>([6]) -> ([50]);
store_temp<System>([39]) -> ([51]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([47]) -> ([52]);
return([48], [49], [50], [51], [52]);
branch_align() -> ();
get_builtin_costs() -> ([53]);
store_temp<BuiltinCosts>([53]) -> ([53]);
withdraw_gas_all([23], [6], [53]) { fallthrough([54], [55]) 2221([56], [57]) };
branch_align() -> ();
struct_construct<helloERC20::pledge::pledge::_owner::ContractState>() -> ([58]);
struct_construct<helloERC20::pledge::pledge::total_supply::ContractState>() -> ([59]);
struct_construct<helloERC20::pledge::pledge::total_pledge::ContractState>() -> ([60]);
struct_construct<helloERC20::pledge::pledge::burn_total::ContractState>() -> ([61]);
struct_construct<helloERC20::pledge::pledge::pledge_rate::ContractState>() -> ([62]);
struct_construct<helloERC20::pledge::pledge::white_list::ContractState>() -> ([63]);
struct_construct<helloERC20::pledge::pledge::token_account::ContractState>() -> ([64]);
struct_construct<helloERC20::pledge::pledge::pledge_account::ContractState>() -> ([65]);
struct_construct<helloERC20::pledge::pledge::pledge_account_info::ContractState>() -> ([66]);
struct_construct<helloERC20::pledge::pledge::ContractState>([58], [59], [60], [61], [62], [63], [64], [65], [66]) -> ([67]);
store_temp<RangeCheck>([54]) -> ([73]);
store_temp<GasBuiltin>([55]) -> ([74]);
store_temp<Pedersen>([0]) -> ([75]);
store_temp<System>([3]) -> ([76]);
store_temp<helloERC20::pledge::pledge::ContractState>([67]) -> ([77]);
store_temp<ContractAddress>([14]) -> ([78]);
store_temp<core::integer::u256>([21]) -> ([79]);
store_temp<u8>([28]) -> ([80]);
function_call<user@helloERC20::pledge::pledge::constructor>([73], [74], [75], [76], [77], [78], [79], [80]) -> ([68], [69], [70], [71], [72]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([72]) { fallthrough([81]) 2213([82]) };
branch_align() -> ();
drop<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([81]) -> ();
array_new<felt252>() -> ([83]);
snapshot_take<Array<felt252>>([83]) -> ([84], [85]);
drop<Array<felt252>>([84]) -> ();
struct_construct<core::array::Span::<core::felt252>>([85]) -> ([86]);
struct_construct<Tuple<core::array::Span::<core::felt252>>>([86]) -> ([87]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 0>([87]) -> ([88]);
store_temp<Pedersen>([70]) -> ([89]);
store_temp<RangeCheck>([68]) -> ([90]);
store_temp<GasBuiltin>([69]) -> ([91]);
store_temp<System>([71]) -> ([92]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([88]) -> ([93]);
return([89], [90], [91], [92], [93]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([82]) -> ([94]);
store_temp<Pedersen>([70]) -> ([95]);
store_temp<RangeCheck>([68]) -> ([96]);
store_temp<GasBuiltin>([69]) -> ([97]);
store_temp<System>([71]) -> ([98]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([94]) -> ([99]);
return([95], [96], [97], [98], [99]);
branch_align() -> ();
drop<u8>([28]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([100]);
felt252_const<375233589013918064796019>() -> ([101]);
store_temp<felt252>([101]) -> ([101]);
array_append<felt252>([100], [101]) -> ([102]);
struct_construct<core::panics::Panic>() -> ([103]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([103], [102]) -> ([104]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([104]) -> ([105]);
store_temp<Pedersen>([0]) -> ([106]);
store_temp<RangeCheck>([56]) -> ([107]);
store_temp<GasBuiltin>([57]) -> ([108]);
store_temp<System>([3]) -> ([109]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
branch_align() -> ();
drop<Unit>([29]) -> ();
drop<core::array::Span::<core::felt252>>([24]) -> ();
drop<core::integer::u256>([21]) -> ();
drop<ContractAddress>([14]) -> ();
array_new<felt252>() -> ([111]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([112]);
store_temp<felt252>([112]) -> ([112]);
array_append<felt252>([111], [112]) -> ([113]);
struct_construct<core::panics::Panic>() -> ([114]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([114], [113]) -> ([115]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([115]) -> ([116]);
store_temp<Pedersen>([0]) -> ([117]);
store_temp<RangeCheck>([23]) -> ([118]);
store_temp<GasBuiltin>([6]) -> ([119]);
store_temp<System>([3]) -> ([120]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([116]) -> ([121]);
return([117], [118], [119], [120], [121]);
branch_align() -> ();
drop<Unit>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<core::array::Span::<core::felt252>>([17]) -> ();
array_new<felt252>() -> ([122]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([123]);
store_temp<felt252>([123]) -> ([123]);
array_append<felt252>([122], [123]) -> ([124]);
struct_construct<core::panics::Panic>() -> ([125]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([125], [124]) -> ([126]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([126]) -> ([127]);
store_temp<Pedersen>([0]) -> ([128]);
store_temp<RangeCheck>([16]) -> ([129]);
store_temp<GasBuiltin>([6]) -> ([130]);
store_temp<System>([3]) -> ([131]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([127]) -> ([132]);
return([128], [129], [130], [131], [132]);
branch_align() -> ();
drop<Unit>([15]) -> ();
drop<core::array::Span::<core::felt252>>([10]) -> ();
array_new<felt252>() -> ([133]);
felt252_const<1979706721653833758925397712865600297316042839304765459608024204080243>() -> ([134]);
store_temp<felt252>([134]) -> ([134]);
array_append<felt252>([133], [134]) -> ([135]);
struct_construct<core::panics::Panic>() -> ([136]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([136], [135]) -> ([137]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([137]) -> ([138]);
store_temp<Pedersen>([0]) -> ([139]);
store_temp<RangeCheck>([9]) -> ([140]);
store_temp<GasBuiltin>([6]) -> ([141]);
store_temp<System>([3]) -> ([142]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([138]) -> ([143]);
return([139], [140], [141], [142], [143]);
branch_align() -> ();
drop<core::array::Span::<core::felt252>>([4]) -> ();
array_new<felt252>() -> ([144]);
felt252_const<375233589013918064796019>() -> ([145]);
store_temp<felt252>([145]) -> ([145]);
array_append<felt252>([144], [145]) -> ([146]);
struct_construct<core::panics::Panic>() -> ([147]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([147], [146]) -> ([148]);
enum_init<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>, 1>([148]) -> ([149]);
store_temp<Pedersen>([0]) -> ([150]);
store_temp<RangeCheck>([7]) -> ([151]);
store_temp<GasBuiltin>([8]) -> ([152]);
store_temp<System>([3]) -> ([153]);
store_temp<core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>>([149]) -> ([154]);
return([150], [151], [152], [153], [154]);
snapshot_take<helloERC20::pledge::pledge::total_supply::ContractState>([2]) -> ([4], [5]);
drop<helloERC20::pledge::pledge::total_supply::ContractState>([5]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([6]);
u32_const<0>() -> ([7]);
store_temp<GasBuiltin>([0]) -> ([11]);
store_temp<System>([1]) -> ([12]);
store_temp<u32>([7]) -> ([13]);
store_temp<StorageBaseAddress>([6]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::integer::Storeu256::write>([11], [12], [13], [14], [15]) -> ([8], [9], [10]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::panics::PanicResult::<((),)>>([16]) { fallthrough([18]) 2325([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([18]) -> ([20]);
struct_construct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>>([4], [20]) -> ([21]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([8]) -> ([27]);
store_temp<System>([9]) -> ([28]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>([26]) -> ([29]);
return([27], [28], [29]);
snapshot_take<helloERC20::pledge::pledge::_owner::ContractState>([2]) -> ([4], [5]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([5]) -> ();
storage_base_address_const<784875164039100399579447185504448607377760708865195644450792957979080027814>() -> ([6]);
contract_address_to_felt252([3]) -> ([7]);
storage_address_from_base([6]) -> ([8]);
u32_const<0>() -> ([9]);
store_temp<u32>([9]) -> ([9]);
store_temp<StorageAddress>([8]) -> ([8]);
storage_write_syscall([0], [1], [9], [8], [7]) { fallthrough([10], [11]) 2348([12], [13], [14]) };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([15]) -> ([16]);
store_temp<GasBuiltin>([10]) -> ([17]);
store_temp<System>([11]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) -> ([19]);
jump() { 2353() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([14]) -> ([20]);
store_temp<GasBuiltin>([12]) -> ([17]);
store_temp<System>([13]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([20]) -> ([19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([22]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([22]) -> ([21]);
enum_match<core::panics::PanicResult::<((),)>>([21]) { fallthrough([23]) 2364([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([23]) -> ([25]);
struct_construct<Tuple<helloERC20::pledge::pledge::_owner::ContractState, Unit>>([4], [25]) -> ([26]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 0>([26]) -> ([27]);
store_temp<GasBuiltin>([17]) -> ([28]);
store_temp<System>([18]) -> ([29]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>, 1>([24]) -> ([31]);
store_temp<GasBuiltin>([17]) -> ([32]);
store_temp<System>([18]) -> ([33]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>>([31]) -> ([34]);
return([32], [33], [34]);
snapshot_take<helloERC20::pledge::pledge::pledge_rate::ContractState>([2]) -> ([4], [5]);
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([5]) -> ();
storage_base_address_const<1164458144253964663622203478451439654351894770488648785536109950361477525610>() -> ([6]);
u8_to_felt252([3]) -> ([7]);
storage_address_from_base([6]) -> ([8]);
u32_const<0>() -> ([9]);
store_temp<u32>([9]) -> ([9]);
store_temp<StorageAddress>([8]) -> ([8]);
storage_write_syscall([0], [1], [9], [8], [7]) { fallthrough([10], [11]) 2387([12], [13], [14]) };
branch_align() -> ();
struct_construct<Unit>() -> ([15]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([15]) -> ([16]);
store_temp<GasBuiltin>([10]) -> ([17]);
store_temp<System>([11]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([16]) -> ([19]);
jump() { 2392() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([14]) -> ([20]);
store_temp<GasBuiltin>([12]) -> ([17]);
store_temp<System>([13]) -> ([18]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([20]) -> ([19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([22]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([22]) -> ([21]);
enum_match<core::panics::PanicResult::<((),)>>([21]) { fallthrough([23]) 2403([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([23]) -> ([25]);
struct_construct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>>([4], [25]) -> ([26]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 0>([26]) -> ([27]);
store_temp<GasBuiltin>([17]) -> ([28]);
store_temp<System>([18]) -> ([29]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>([27]) -> ([30]);
return([28], [29], [30]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>, 1>([24]) -> ([31]);
store_temp<GasBuiltin>([17]) -> ([32]);
store_temp<System>([18]) -> ([33]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>([31]) -> ([34]);
return([32], [33], [34]);
snapshot_take<helloERC20::pledge::pledge::token_account::ContractState>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([8]) -> ([14]);
store_temp<ContractAddress>([5]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::integer::Storeu256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::panics::PanicResult::<((),)>>([25]) { fallthrough([27]) 2436([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([7], [29]) -> ([30]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
struct_construct<Unit>() -> ([1]);
store_temp<System>([0]) -> ([2]);
store_temp<Unit>([1]) -> ([3]);
return([2], [3]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([3]) -> ([4], [5], [6], [7], [8], [9], [10], [11], [12]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([4]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([12]) -> ();
store_temp<RangeCheck>([0]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<System>([2]) -> ([19]);
store_temp<helloERC20::pledge::pledge::total_supply::ContractState>([5]) -> ([20]);
function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::read>([17], [18], [19], [20]) -> ([13], [14], [15], [16]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([16]) { fallthrough([21]) 2473([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([21]) -> ([23]);
struct_construct<Tuple<core::integer::u256>>([23]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([24]) -> ([25]);
store_temp<RangeCheck>([13]) -> ([26]);
store_temp<GasBuiltin>([14]) -> ([27]);
store_temp<System>([15]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([22]) -> ([30]);
store_temp<RangeCheck>([13]) -> ([31]);
store_temp<GasBuiltin>([14]) -> ([32]);
store_temp<System>([15]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
dup<core::integer::u256>([0]) -> ([0], [2]);
struct_deconstruct<core::integer::u256>([2]) -> ([3], [4]);
drop<u128>([4]) -> ();
store_temp<u128>([3]) -> ([7]);
store_temp<Array<felt252>>([1]) -> ([8]);
function_call<user@core::integer::U128Serde::serialize>([7], [8]) -> ([5], [6]);
drop<Unit>([6]) -> ();
struct_deconstruct<core::integer::u256>([0]) -> ([9], [10]);
drop<u128>([9]) -> ();
store_temp<u128>([10]) -> ([13]);
store_temp<Array<felt252>>([5]) -> ([14]);
function_call<user@core::integer::U128Serde::serialize>([13], [14]) -> ([11], [12]);
rename<Array<felt252>>([11]) -> ([15]);
rename<Unit>([12]) -> ([16]);
return([15], [16]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([4]);
function_call<user@core::Felt252Serde::deserialize>([4]) -> ([2], [3]);
enum_match<core::option::Option::<core::felt252>>([3]) { fallthrough([5]) 2513([6]) };
branch_align() -> ();
contract_address_try_from_felt252([0], [5]) { fallthrough([7], [8]) 2506([9]) };
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([8]) -> ([10]);
store_temp<RangeCheck>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([12]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([10]) -> ([13]);
return([11], [12], [13]);
branch_align() -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([14]) -> ([15]);
store_temp<RangeCheck>([9]) -> ([16]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([17]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([15]) -> ([18]);
return([16], [17], [18]);
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([6]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<core::array::Span::<core::felt252>>([2]) -> ([21]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([19]) -> ([22]);
return([20], [21], [22]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::array::Span::<core::felt252>>([1]) -> ([6]);
function_call<user@core::integer::U128Serde::deserialize>([5], [6]) -> ([2], [3], [4]);
enum_match<core::option::Option::<core::integer::u128>>([4]) { fallthrough([7]) 2542([8]) };
branch_align() -> ();
store_temp<RangeCheck>([2]) -> ([12]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([13]);
function_call<user@core::integer::U128Serde::deserialize>([12], [13]) -> ([9], [10], [11]);
enum_match<core::option::Option::<core::integer::u128>>([11]) { fallthrough([14]) 2535([15]) };
branch_align() -> ();
struct_construct<core::integer::u256>([7], [14]) -> ([16]);
enum_init<core::option::Option::<core::integer::u256>, 0>([16]) -> ([17]);
store_temp<RangeCheck>([9]) -> ([18]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([19]);
store_temp<core::option::Option::<core::integer::u256>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
drop<u128>([7]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([15]) -> ([21]);
store_temp<RangeCheck>([9]) -> ([22]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([23]);
store_temp<core::option::Option::<core::integer::u256>>([21]) -> ([24]);
return([22], [23], [24]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u256>, 1>([8]) -> ([25]);
store_temp<RangeCheck>([2]) -> ([26]);
store_temp<core::array::Span::<core::felt252>>([3]) -> ([27]);
store_temp<core::option::Option::<core::integer::u256>>([25]) -> ([28]);
return([26], [27], [28]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([7], [8], [9], [10], [11], [12], [13], [14], [15]);
snapshot_take<helloERC20::pledge::pledge::_owner::ContractState>([7]) -> ([16], [17]);
store_temp<RangeCheck>([0]) -> ([22]);
store_temp<GasBuiltin>([1]) -> ([23]);
store_temp<System>([3]) -> ([24]);
store_temp<helloERC20::pledge::pledge::_owner::ContractState>([17]) -> ([25]);
function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read>([22], [23], [24], [25]) -> ([18], [19], [20], [21]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([21]) { fallthrough([26]) 2738([27]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([26]) -> ([28]);
snapshot_take<ContractAddress>([28]) -> ([29], [30]);
drop<ContractAddress>([29]) -> ();
store_temp<GasBuiltin>([19]) -> ([34]);
store_temp<System>([20]) -> ([35]);
function_call<user@core::starknet::info::get_caller_address>([34], [35]) -> ([31], [32], [33]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([33]) { fallthrough([36]) 2718([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([36]) -> ([38]);
snapshot_take<ContractAddress>([38]) -> ([39], [40]);
drop<ContractAddress>([39]) -> ();
rename<ContractAddress>([30]) -> ([41]);
contract_address_to_felt252([41]) -> ([42]);
snapshot_take<felt252>([42]) -> ([43], [44]);
drop<felt252>([43]) -> ();
rename<ContractAddress>([40]) -> ([45]);
contract_address_to_felt252([45]) -> ([46]);
snapshot_take<felt252>([46]) -> ([47], [48]);
drop<felt252>([47]) -> ();
rename<felt252>([44]) -> ([49]);
rename<felt252>([48]) -> ([50]);
felt252_sub([49], [50]) -> ([51]);
store_temp<felt252>([51]) -> ([51]);
felt252_is_zero([51]) { fallthrough() 2703([52]) };
branch_align() -> ();
snapshot_take<helloERC20::pledge::pledge::total_supply::ContractState>([8]) -> ([53], [54]);
store_temp<RangeCheck>([18]) -> ([59]);
store_temp<GasBuiltin>([31]) -> ([60]);
store_temp<System>([32]) -> ([61]);
store_temp<helloERC20::pledge::pledge::total_supply::ContractState>([54]) -> ([62]);
function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::read>([59], [60], [61], [62]) -> ([55], [56], [57], [58]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([58]) { fallthrough([63]) 2684([64]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([63]) -> ([65]);
store_temp<RangeCheck>([55]) -> ([68]);
store_temp<core::integer::u256>([65]) -> ([69]);
dup<core::integer::u256>([6]) -> ([6], [70]);
store_temp<core::integer::u256>([70]) -> ([70]);
function_call<user@core::integer::U256Add::add>([68], [69], [70]) -> ([66], [67]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([67]) { fallthrough([71]) 2665([72]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([71]) -> ([73]);
store_temp<GasBuiltin>([56]) -> ([77]);
store_temp<System>([57]) -> ([78]);
store_temp<helloERC20::pledge::pledge::total_supply::ContractState>([53]) -> ([79]);
store_temp<core::integer::u256>([73]) -> ([80]);
function_call<user@helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::write>([77], [78], [79], [80]) -> ([74], [75], [76]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>>([76]) { fallthrough([81]) 2647([82]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_supply::ContractState, Unit>>([81]) -> ([83], [84]);
drop<Unit>([84]) -> ();
store_temp<RangeCheck>([66]) -> ([90]);
store_temp<GasBuiltin>([74]) -> ([91]);
store_temp<Pedersen>([2]) -> ([92]);
store_temp<System>([75]) -> ([93]);
store_temp<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ([94]);
store_temp<ContractAddress>([5]) -> ([95]);
store_temp<core::integer::u256>([6]) -> ([96]);
function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::write>([90], [91], [92], [93], [94], [95], [96]) -> ([85], [86], [87], [88], [89]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>([89]) { fallthrough([97]) 2631([98]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>>([97]) -> ([99], [100]);
drop<Unit>([100]) -> ();
struct_construct<Unit>() -> ([101]);
enum_init<core::bool, 1>([101]) -> ([102]);
struct_construct<helloERC20::pledge::pledge::ContractState>([16], [83], [9], [10], [11], [99], [13], [14], [15]) -> ([103]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([103], [102]) -> ([104]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([104]) -> ([105]);
store_temp<RangeCheck>([85]) -> ([106]);
store_temp<GasBuiltin>([86]) -> ([107]);
store_temp<Pedersen>([87]) -> ([108]);
store_temp<System>([88]) -> ([109]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([105]) -> ([110]);
return([106], [107], [108], [109], [110]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([83]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([98]) -> ([111]);
store_temp<RangeCheck>([85]) -> ([112]);
store_temp<GasBuiltin>([86]) -> ([113]);
store_temp<Pedersen>([87]) -> ([114]);
store_temp<System>([88]) -> ([115]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([111]) -> ([116]);
return([112], [113], [114], [115], [116]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([82]) -> ([117]);
store_temp<RangeCheck>([66]) -> ([118]);
store_temp<GasBuiltin>([74]) -> ([119]);
store_temp<Pedersen>([2]) -> ([120]);
store_temp<System>([75]) -> ([121]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([117]) -> ([122]);
return([118], [119], [120], [121], [122]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([53]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([72]) -> ([123]);
store_temp<RangeCheck>([66]) -> ([124]);
store_temp<GasBuiltin>([56]) -> ([125]);
store_temp<Pedersen>([2]) -> ([126]);
store_temp<System>([57]) -> ([127]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([123]) -> ([128]);
return([124], [125], [126], [127], [128]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([53]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([64]) -> ([129]);
store_temp<RangeCheck>([55]) -> ([130]);
store_temp<GasBuiltin>([56]) -> ([131]);
store_temp<Pedersen>([2]) -> ([132]);
store_temp<System>([57]) -> ([133]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([129]) -> ([134]);
return([130], [131], [132], [133], [134]);
branch_align() -> ();
drop<NonZero<felt252>>([52]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
struct_construct<Unit>() -> ([135]);
enum_init<core::bool, 0>([135]) -> ([136]);
struct_construct<helloERC20::pledge::pledge::ContractState>([16], [8], [9], [10], [11], [12], [13], [14], [15]) -> ([137]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([137], [136]) -> ([138]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([138]) -> ([139]);
store_temp<RangeCheck>([18]) -> ([140]);
store_temp<GasBuiltin>([31]) -> ([141]);
store_temp<Pedersen>([2]) -> ([142]);
store_temp<System>([32]) -> ([143]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([139]) -> ([144]);
return([140], [141], [142], [143], [144]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([8]) -> ();
drop<ContractAddress>([30]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([37]) -> ([145]);
store_temp<RangeCheck>([18]) -> ([146]);
store_temp<GasBuiltin>([31]) -> ([147]);
store_temp<Pedersen>([2]) -> ([148]);
store_temp<System>([32]) -> ([149]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([145]) -> ([150]);
return([146], [147], [148], [149], [150]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<core::integer::u256>([6]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([27]) -> ([151]);
store_temp<RangeCheck>([18]) -> ([152]);
store_temp<GasBuiltin>([19]) -> ([153]);
store_temp<Pedersen>([2]) -> ([154]);
store_temp<System>([20]) -> ([155]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([151]) -> ([156]);
return([152], [153], [154], [155], [156]);
rename<core::bool>([0]) -> ([2]);
enum_match<core::bool>([2]) { fallthrough([3]) 2764([4]) };
branch_align() -> ();
drop<Unit>([3]) -> ();
felt252_const<0>() -> ([5]);
store_temp<felt252>([5]) -> ([6]);
jump() { 2768() };
branch_align() -> ();
drop<Unit>([4]) -> ();
felt252_const<1>() -> ([7]);
store_temp<felt252>([7]) -> ([6]);
snapshot_take<felt252>([6]) -> ([8], [9]);
drop<felt252>([8]) -> ();
rename<felt252>([9]) -> ([12]);
store_temp<Array<felt252>>([1]) -> ([13]);
function_call<user@core::Felt252Serde::serialize>([12], [13]) -> ([10], [11]);
drop<Unit>([11]) -> ();
struct_construct<Unit>() -> ([14]);
store_temp<Array<felt252>>([10]) -> ([15]);
store_temp<Unit>([14]) -> ([16]);
return([15], [16]);
store_temp<GasBuiltin>([1]) -> ([8]);
store_temp<System>([3]) -> ([9]);
function_call<user@core::starknet::info::get_caller_address>([8], [9]) -> ([5], [6], [7]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([7]) { fallthrough([10]) 2925([11]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([10]) -> ([12]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([13], [14], [15], [16], [17], [18], [19], [20], [21]);
snapshot_take<helloERC20::pledge::pledge::white_list::ContractState>([18]) -> ([22], [23]);
store_temp<RangeCheck>([0]) -> ([29]);
store_temp<GasBuiltin>([5]) -> ([30]);
store_temp<Pedersen>([2]) -> ([31]);
store_temp<System>([6]) -> ([32]);
store_temp<helloERC20::pledge::pledge::white_list::ContractState>([23]) -> ([33]);
dup<ContractAddress>([12]) -> ([12], [34]);
store_temp<ContractAddress>([34]) -> ([34]);
function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::read>([29], [30], [31], [32], [33], [34]) -> ([24], [25], [26], [27], [28]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([28]) { fallthrough([35]) 2907([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([35]) -> ([37]);
u128_const<0>() -> ([38]);
u128_const<0>() -> ([39]);
struct_construct<core::integer::u256>([38], [39]) -> ([40]);
store_temp<RangeCheck>([24]) -> ([43]);
store_temp<core::integer::u256>([40]) -> ([44]);
dup<core::integer::u256>([37]) -> ([37], [45]);
store_temp<core::integer::u256>([45]) -> ([45]);
function_call<user@core::integer::U256PartialOrd::lt>([43], [44], [45]) -> ([41], [42]);
enum_match<core::bool>([42]) { fallthrough([46]) 2832([47]) };
branch_align() -> ();
drop<Unit>([46]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([14]) -> ();
drop<core::integer::u256>([37]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([21]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([13]) -> ();
drop<ContractAddress>([12]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([19]) -> ();
array_new<felt252>() -> ([48]);
felt252_const<161401467795617803061580884180588437012817527057966>() -> ([49]);
store_temp<felt252>([49]) -> ([49]);
array_append<felt252>([48], [49]) -> ([50]);
struct_construct<core::panics::Panic>() -> ([51]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([51], [50]) -> ([52]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([52]) -> ([53]);
store_temp<RangeCheck>([41]) -> ([54]);
store_temp<GasBuiltin>([25]) -> ([55]);
store_temp<Pedersen>([26]) -> ([56]);
store_temp<System>([27]) -> ([57]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([53]) -> ([58]);
return([54], [55], [56], [57], [58]);
branch_align() -> ();
drop<Unit>([47]) -> ();
store_temp<RangeCheck>([41]) -> ([64]);
store_temp<GasBuiltin>([25]) -> ([65]);
store_temp<Pedersen>([26]) -> ([66]);
store_temp<System>([27]) -> ([67]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([19]) -> ([68]);
dup<ContractAddress>([12]) -> ([12], [69]);
store_temp<ContractAddress>([69]) -> ([69]);
dup<core::integer::u256>([37]) -> ([37], [70]);
store_temp<core::integer::u256>([70]) -> ([70]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([64], [65], [66], [67], [68], [69], [70]) -> ([59], [60], [61], [62], [63]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([63]) { fallthrough([71]) 2889([72]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([71]) -> ([73], [74]);
drop<Unit>([74]) -> ();
u128_const<0>() -> ([75]);
u128_const<0>() -> ([76]);
struct_construct<core::integer::u256>([75], [76]) -> ([77]);
store_temp<RangeCheck>([59]) -> ([83]);
store_temp<GasBuiltin>([60]) -> ([84]);
store_temp<Pedersen>([61]) -> ([85]);
store_temp<System>([62]) -> ([86]);
store_temp<helloERC20::pledge::pledge::white_list::ContractState>([22]) -> ([87]);
store_temp<ContractAddress>([12]) -> ([88]);
store_temp<core::integer::u256>([77]) -> ([89]);
function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::write>([83], [84], [85], [86], [87], [88], [89]) -> ([78], [79], [80], [81], [82]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>([82]) { fallthrough([90]) 2872([91]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>>([90]) -> ([92], [93]);
drop<Unit>([93]) -> ();
struct_construct<helloERC20::pledge::pledge::ContractState>([13], [14], [15], [16], [17], [92], [73], [20], [21]) -> ([94]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>([94], [37]) -> ([95]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 0>([95]) -> ([96]);
store_temp<RangeCheck>([78]) -> ([97]);
store_temp<GasBuiltin>([79]) -> ([98]);
store_temp<Pedersen>([80]) -> ([99]);
store_temp<System>([81]) -> ([100]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([96]) -> ([101]);
return([97], [98], [99], [100], [101]);
branch_align() -> ();
drop<core::integer::u256>([37]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([21]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([73]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([91]) -> ([102]);
store_temp<RangeCheck>([78]) -> ([103]);
store_temp<GasBuiltin>([79]) -> ([104]);
store_temp<Pedersen>([80]) -> ([105]);
store_temp<System>([81]) -> ([106]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([102]) -> ([107]);
return([103], [104], [105], [106], [107]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([14]) -> ();
drop<core::integer::u256>([37]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([21]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([13]) -> ();
drop<ContractAddress>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([22]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([72]) -> ([108]);
store_temp<RangeCheck>([59]) -> ([109]);
store_temp<GasBuiltin>([60]) -> ([110]);
store_temp<Pedersen>([61]) -> ([111]);
store_temp<System>([62]) -> ([112]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([108]) -> ([113]);
return([109], [110], [111], [112], [113]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([21]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([13]) -> ();
drop<ContractAddress>([12]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([36]) -> ([114]);
store_temp<RangeCheck>([24]) -> ([115]);
store_temp<GasBuiltin>([25]) -> ([116]);
store_temp<Pedersen>([26]) -> ([117]);
store_temp<System>([27]) -> ([118]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([114]) -> ([119]);
return([115], [116], [117], [118], [119]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([11]) -> ([120]);
store_temp<RangeCheck>([0]) -> ([121]);
store_temp<GasBuiltin>([5]) -> ([122]);
store_temp<Pedersen>([2]) -> ([123]);
store_temp<System>([6]) -> ([124]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([120]) -> ([125]);
return([121], [122], [123], [124], [125]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 2941([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 2946() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 2968([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u8>>([17]) { fallthrough([20]) 2962([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u8>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u8>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u8>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u8>>([31]) -> ([34]);
return([32], [33], [34]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([2]) -> ([4], [5], [6], [7], [8], [9], [10], [11], [12]);
store_temp<GasBuiltin>([0]) -> ([16]);
store_temp<System>([1]) -> ([17]);
store_temp<helloERC20::pledge::pledge::pledge_rate::ContractState>([8]) -> ([18]);
store_temp<u8>([3]) -> ([19]);
function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::write>([16], [17], [18], [19]) -> ([13], [14], [15]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>>([15]) { fallthrough([20]) 2995([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_rate::ContractState, Unit>>([20]) -> ([22], [23]);
drop<Unit>([23]) -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::bool, 1>([24]) -> ([25]);
struct_construct<helloERC20::pledge::pledge::ContractState>([4], [5], [6], [7], [22], [9], [10], [11], [12]) -> ([26]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([26], [25]) -> ([27]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([27]) -> ([28]);
store_temp<GasBuiltin>([13]) -> ([29]);
store_temp<System>([14]) -> ([30]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([28]) -> ([31]);
return([29], [30], [31]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([4]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([5]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([6]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([21]) -> ([32]);
store_temp<GasBuiltin>([13]) -> ([33]);
store_temp<System>([14]) -> ([34]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([32]) -> ([35]);
return([33], [34], [35]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 3016([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 3021() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 3043([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::Felt252TryIntoU64::try_into>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u64>>([17]) { fallthrough([20]) 3037([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u64>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u64>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u64>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u64>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u64>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u64>>([31]) -> ([34]);
return([32], [33], [34]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 3333([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([15], [16], [17], [18], [19], [20], [21], [22], [23]);
snapshot_take<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ([24], [25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([25]) -> ([35]);
dup<ContractAddress>([14]) -> ([14], [36]);
store_temp<ContractAddress>([36]) -> ([36]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([30]) { fallthrough([37]) 3313([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([37]) -> ([39]);
u128_const<0>() -> ([40]);
u128_const<0>() -> ([41]);
struct_construct<core::integer::u256>([40], [41]) -> ([42]);
store_temp<RangeCheck>([26]) -> ([45]);
store_temp<core::integer::u256>([42]) -> ([46]);
dup<core::integer::u256>([39]) -> ([39], [47]);
store_temp<core::integer::u256>([47]) -> ([47]);
function_call<user@core::integer::U256PartialOrd::lt>([45], [46], [47]) -> ([43], [44]);
enum_match<core::bool>([44]) { fallthrough([48]) 3107([49]) };
branch_align() -> ();
drop<Unit>([48]) -> ();
drop<core::integer::u256>([39]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([24]) -> ();
array_new<felt252>() -> ([50]);
felt252_const<2507126091094776162901448509332734859662878052>() -> ([51]);
store_temp<felt252>([51]) -> ([51]);
array_append<felt252>([50], [51]) -> ([52]);
struct_construct<core::panics::Panic>() -> ([53]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([53], [52]) -> ([54]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([54]) -> ([55]);
store_temp<RangeCheck>([43]) -> ([56]);
store_temp<GasBuiltin>([27]) -> ([57]);
store_temp<Pedersen>([28]) -> ([58]);
store_temp<System>([29]) -> ([59]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([55]) -> ([60]);
return([56], [57], [58], [59], [60]);
branch_align() -> ();
drop<Unit>([49]) -> ();
store_temp<RangeCheck>([43]) -> ([63]);
dup<core::integer::u256>([39]) -> ([39], [64]);
store_temp<core::integer::u256>([64]) -> ([64]);
dup<core::integer::u256>([5]) -> ([5], [65]);
store_temp<core::integer::u256>([65]) -> ([65]);
function_call<user@core::integer::U256PartialOrd::lt>([63], [64], [65]) -> ([61], [62]);
bool_not_impl([62]) -> ([66]);
store_temp<core::bool>([66]) -> ([66]);
enum_match<core::bool>([66]) { fallthrough([67]) 3146([68]) };
branch_align() -> ();
drop<Unit>([67]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([24]) -> ();
drop<core::integer::u256>([39]) -> ();
array_new<felt252>() -> ([69]);
felt252_const<599474618788436722076633882042527332>() -> ([70]);
store_temp<felt252>([70]) -> ([70]);
array_append<felt252>([69], [70]) -> ([71]);
struct_construct<core::panics::Panic>() -> ([72]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([72], [71]) -> ([73]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([73]) -> ([74]);
store_temp<RangeCheck>([61]) -> ([75]);
store_temp<GasBuiltin>([27]) -> ([76]);
store_temp<Pedersen>([28]) -> ([77]);
store_temp<System>([29]) -> ([78]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([74]) -> ([79]);
return([75], [76], [77], [78], [79]);
branch_align() -> ();
drop<Unit>([68]) -> ();
store_temp<RangeCheck>([61]) -> ([82]);
store_temp<core::integer::u256>([39]) -> ([83]);
dup<core::integer::u256>([5]) -> ([5], [84]);
store_temp<core::integer::u256>([84]) -> ([84]);
function_call<user@core::integer::U256Sub::sub>([82], [83], [84]) -> ([80], [81]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([81]) { fallthrough([85]) 3293([86]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([85]) -> ([87]);
store_temp<RangeCheck>([80]) -> ([93]);
store_temp<GasBuiltin>([27]) -> ([94]);
store_temp<Pedersen>([28]) -> ([95]);
store_temp<System>([29]) -> ([96]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([24]) -> ([97]);
dup<ContractAddress>([14]) -> ([14], [98]);
store_temp<ContractAddress>([98]) -> ([98]);
store_temp<core::integer::u256>([87]) -> ([99]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([93], [94], [95], [96], [97], [98], [99]) -> ([88], [89], [90], [91], [92]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([92]) { fallthrough([100]) 3274([101]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([100]) -> ([102], [103]);
drop<Unit>([103]) -> ();
store_temp<GasBuiltin>([89]) -> ([107]);
store_temp<System>([91]) -> ([108]);
function_call<user@core::starknet::info::get_block_timestamp>([107], [108]) -> ([104], [105], [106]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([106]) { fallthrough([109]) 3254([110]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([109]) -> ([111]);
struct_construct<Unit>() -> ([112]);
enum_init<core::bool, 0>([112]) -> ([113]);
u128_const<0>() -> ([114]);
u128_const<0>() -> ([115]);
struct_construct<core::integer::u256>([114], [115]) -> ([116]);
u128_const<0>() -> ([117]);
u128_const<0>() -> ([118]);
struct_construct<core::integer::u256>([117], [118]) -> ([119]);
dup<u64>([111]) -> ([111], [120]);
dup<core::integer::u256>([5]) -> ([5], [121]);
struct_construct<helloERC20::pledge::PledgeInfo>([120], [121], [6], [113], [116], [119]) -> ([122]);
u64_to_felt252([111]) -> ([123]);
contract_address_to_felt252([14]) -> ([124]);
pedersen([90], [123], [124]) -> ([125], [126]);
store_temp<RangeCheck>([88]) -> ([132]);
store_temp<GasBuiltin>([104]) -> ([133]);
store_temp<Pedersen>([125]) -> ([134]);
store_temp<System>([105]) -> ([135]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ([136]);
store_temp<felt252>([126]) -> ([137]);
store_temp<helloERC20::pledge::PledgeInfo>([122]) -> ([138]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>([132], [133], [134], [135], [136], [137], [138]) -> ([127], [128], [129], [130], [131]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([131]) { fallthrough([139]) 3237([140]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([139]) -> ([141], [142]);
drop<Unit>([142]) -> ();
store_temp<GasBuiltin>([128]) -> ([146]);
store_temp<System>([130]) -> ([147]);
store_temp<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ([148]);
store_temp<core::integer::u256>([5]) -> ([149]);
function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::write>([146], [147], [148], [149]) -> ([143], [144], [145]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>([145]) { fallthrough([150]) 3221([151]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>>([150]) -> ([152], [153]);
drop<Unit>([153]) -> ();
struct_construct<Unit>() -> ([154]);
enum_init<core::bool, 1>([154]) -> ([155]);
struct_construct<helloERC20::pledge::pledge::ContractState>([15], [16], [152], [18], [19], [20], [102], [22], [141]) -> ([156]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([156], [155]) -> ([157]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([157]) -> ([158]);
store_temp<RangeCheck>([127]) -> ([159]);
store_temp<GasBuiltin>([143]) -> ([160]);
store_temp<Pedersen>([129]) -> ([161]);
store_temp<System>([144]) -> ([162]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([158]) -> ([163]);
return([159], [160], [161], [162], [163]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([141]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([102]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([151]) -> ([164]);
store_temp<RangeCheck>([127]) -> ([165]);
store_temp<GasBuiltin>([143]) -> ([166]);
store_temp<Pedersen>([129]) -> ([167]);
store_temp<System>([144]) -> ([168]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([164]) -> ([169]);
return([165], [166], [167], [168], [169]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([102]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([140]) -> ([170]);
store_temp<RangeCheck>([127]) -> ([171]);
store_temp<GasBuiltin>([128]) -> ([172]);
store_temp<Pedersen>([129]) -> ([173]);
store_temp<System>([130]) -> ([174]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([170]) -> ([175]);
return([171], [172], [173], [174], [175]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([102]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
drop<ContractAddress>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([110]) -> ([176]);
store_temp<RangeCheck>([88]) -> ([177]);
store_temp<GasBuiltin>([104]) -> ([178]);
store_temp<Pedersen>([90]) -> ([179]);
store_temp<System>([105]) -> ([180]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([176]) -> ([181]);
return([177], [178], [179], [180], [181]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
drop<ContractAddress>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([101]) -> ([182]);
store_temp<RangeCheck>([88]) -> ([183]);
store_temp<GasBuiltin>([89]) -> ([184]);
store_temp<Pedersen>([90]) -> ([185]);
store_temp<System>([91]) -> ([186]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([182]) -> ([187]);
return([183], [184], [185], [186], [187]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([24]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([86]) -> ([188]);
store_temp<RangeCheck>([80]) -> ([189]);
store_temp<GasBuiltin>([27]) -> ([190]);
store_temp<Pedersen>([28]) -> ([191]);
store_temp<System>([29]) -> ([192]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([188]) -> ([193]);
return([189], [190], [191], [192], [193]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([24]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([38]) -> ([194]);
store_temp<RangeCheck>([26]) -> ([195]);
store_temp<GasBuiltin>([27]) -> ([196]);
store_temp<Pedersen>([28]) -> ([197]);
store_temp<System>([29]) -> ([198]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([194]) -> ([199]);
return([195], [196], [197], [198], [199]);
branch_align() -> ();
drop<core::integer::u256>([5]) -> ();
drop<u64>([6]) -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([13]) -> ([200]);
store_temp<RangeCheck>([0]) -> ([201]);
store_temp<GasBuiltin>([7]) -> ([202]);
store_temp<Pedersen>([2]) -> ([203]);
store_temp<System>([8]) -> ([204]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([200]) -> ([205]);
return([201], [202], [203], [204], [205]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([6], [7], [8], [9], [10], [11], [12], [13], [14]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ();
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([1]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ([24]);
store_temp<ContractAddress>([5]) -> ([25]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read>([20], [21], [22], [23], [24], [25]) -> ([15], [16], [17], [18], [19]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([19]) { fallthrough([26]) 3371([27]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([26]) -> ([28]);
struct_construct<Tuple<core::integer::u256>>([28]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([29]) -> ([30]);
store_temp<RangeCheck>([15]) -> ([31]);
store_temp<GasBuiltin>([16]) -> ([32]);
store_temp<Pedersen>([17]) -> ([33]);
store_temp<System>([18]) -> ([34]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([30]) -> ([35]);
return([31], [32], [33], [34], [35]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([27]) -> ([36]);
store_temp<RangeCheck>([15]) -> ([37]);
store_temp<GasBuiltin>([16]) -> ([38]);
store_temp<Pedersen>([17]) -> ([39]);
store_temp<System>([18]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([36]) -> ([41]);
return([37], [38], [39], [40], [41]);
dup<helloERC20::pledge::pledge::ContractState>([4]) -> ([4], [6]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([6]) -> ([7], [8], [9], [10], [11], [12], [13], [14], [15]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([15]) -> ();
store_temp<RangeCheck>([0]) -> ([21]);
store_temp<GasBuiltin>([1]) -> ([22]);
store_temp<Pedersen>([2]) -> ([23]);
store_temp<System>([3]) -> ([24]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([14]) -> ([25]);
store_temp<ContractAddress>([5]) -> ([26]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([21], [22], [23], [24], [25], [26]) -> ([16], [17], [18], [19], [20]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([20]) { fallthrough([27]) 3434([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([27]) -> ([29]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([30], [31], [32], [33], [34], [35], [36], [37], [38]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([30]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([32]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([33]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([34]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([35]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([36]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([37]) -> ();
store_temp<RangeCheck>([16]) -> ([44]);
store_temp<GasBuiltin>([17]) -> ([45]);
store_temp<Pedersen>([18]) -> ([46]);
store_temp<System>([19]) -> ([47]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([38]) -> ([48]);
store_temp<felt252>([29]) -> ([49]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([44], [45], [46], [47], [48], [49]) -> ([39], [40], [41], [42], [43]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([43]) { fallthrough([50]) 3426([51]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([50]) -> ([52]);
struct_construct<Tuple<helloERC20::pledge::PledgeInfo>>([52]) -> ([53]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0>([53]) -> ([54]);
store_temp<RangeCheck>([39]) -> ([55]);
store_temp<GasBuiltin>([40]) -> ([56]);
store_temp<Pedersen>([41]) -> ([57]);
store_temp<System>([42]) -> ([58]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([54]) -> ([59]);
return([55], [56], [57], [58], [59]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([51]) -> ([60]);
store_temp<RangeCheck>([39]) -> ([61]);
store_temp<GasBuiltin>([40]) -> ([62]);
store_temp<Pedersen>([41]) -> ([63]);
store_temp<System>([42]) -> ([64]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([60]) -> ([65]);
return([61], [62], [63], [64], [65]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([28]) -> ([66]);
store_temp<RangeCheck>([16]) -> ([67]);
store_temp<GasBuiltin>([17]) -> ([68]);
store_temp<Pedersen>([18]) -> ([69]);
store_temp<System>([19]) -> ([70]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([66]) -> ([71]);
return([67], [68], [69], [70], [71]);
dup<helloERC20::pledge::PledgeInfo>([0]) -> ([0], [2]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([2]) -> ([3], [4], [5], [6], [7], [8]);
drop<core::integer::u256>([4]) -> ();
drop<u64>([5]) -> ();
drop<core::bool>([6]) -> ();
drop<core::integer::u256>([7]) -> ();
drop<core::integer::u256>([8]) -> ();
store_temp<u64>([3]) -> ([11]);
store_temp<Array<felt252>>([1]) -> ([12]);
function_call<user@core::integer::U64Serde::serialize>([11], [12]) -> ([9], [10]);
drop<Unit>([10]) -> ();
dup<helloERC20::pledge::PledgeInfo>([0]) -> ([0], [13]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([13]) -> ([14], [15], [16], [17], [18], [19]);
drop<u64>([14]) -> ();
drop<u64>([16]) -> ();
drop<core::bool>([17]) -> ();
drop<core::integer::u256>([18]) -> ();
drop<core::integer::u256>([19]) -> ();
store_temp<core::integer::u256>([15]) -> ([22]);
store_temp<Array<felt252>>([9]) -> ([23]);
function_call<user@core::integer::u256Serde::serialize>([22], [23]) -> ([20], [21]);
drop<Unit>([21]) -> ();
dup<helloERC20::pledge::PledgeInfo>([0]) -> ([0], [24]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([24]) -> ([25], [26], [27], [28], [29], [30]);
drop<u64>([25]) -> ();
drop<core::integer::u256>([26]) -> ();
drop<core::bool>([28]) -> ();
drop<core::integer::u256>([29]) -> ();
drop<core::integer::u256>([30]) -> ();
store_temp<u64>([27]) -> ([33]);
store_temp<Array<felt252>>([20]) -> ([34]);
function_call<user@core::integer::U64Serde::serialize>([33], [34]) -> ([31], [32]);
drop<Unit>([32]) -> ();
dup<helloERC20::pledge::PledgeInfo>([0]) -> ([0], [35]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([35]) -> ([36], [37], [38], [39], [40], [41]);
drop<u64>([36]) -> ();
drop<core::integer::u256>([37]) -> ();
drop<u64>([38]) -> ();
drop<core::integer::u256>([40]) -> ();
drop<core::integer::u256>([41]) -> ();
store_temp<core::bool>([39]) -> ([44]);
store_temp<Array<felt252>>([31]) -> ([45]);
function_call<user@core::BoolSerde::serialize>([44], [45]) -> ([42], [43]);
drop<Unit>([43]) -> ();
dup<helloERC20::pledge::PledgeInfo>([0]) -> ([0], [46]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([46]) -> ([47], [48], [49], [50], [51], [52]);
drop<u64>([47]) -> ();
drop<core::integer::u256>([48]) -> ();
drop<u64>([49]) -> ();
drop<core::bool>([50]) -> ();
drop<core::integer::u256>([52]) -> ();
store_temp<core::integer::u256>([51]) -> ([55]);
store_temp<Array<felt252>>([42]) -> ([56]);
function_call<user@core::integer::u256Serde::serialize>([55], [56]) -> ([53], [54]);
drop<Unit>([54]) -> ();
struct_deconstruct<helloERC20::pledge::PledgeInfo>([0]) -> ([57], [58], [59], [60], [61], [62]);
drop<u64>([57]) -> ();
drop<core::integer::u256>([58]) -> ();
drop<u64>([59]) -> ();
drop<core::bool>([60]) -> ();
drop<core::integer::u256>([61]) -> ();
store_temp<core::integer::u256>([62]) -> ([65]);
store_temp<Array<felt252>>([53]) -> ([66]);
function_call<user@core::integer::u256Serde::serialize>([65], [66]) -> ([63], [64]);
rename<Array<felt252>>([63]) -> ([67]);
rename<Unit>([64]) -> ([68]);
return([67], [68]);
store_temp<GasBuiltin>([1]) -> ([9]);
store_temp<System>([3]) -> ([10]);
function_call<user@core::starknet::info::get_caller_address>([9], [10]) -> ([6], [7], [8]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([8]) { fallthrough([11]) 4100([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([11]) -> ([13]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([14], [15], [16], [17], [18], [19], [20], [21], [22]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([21]) -> ([23], [24]);
store_temp<RangeCheck>([0]) -> ([30]);
store_temp<GasBuiltin>([6]) -> ([31]);
store_temp<Pedersen>([2]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([24]) -> ([34]);
dup<ContractAddress>([13]) -> ([13], [35]);
store_temp<ContractAddress>([35]) -> ([35]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([30], [31], [32], [33], [34], [35]) -> ([25], [26], [27], [28], [29]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([29]) { fallthrough([36]) 4081([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([36]) -> ([38]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ([39], [40]);
store_temp<RangeCheck>([25]) -> ([46]);
store_temp<GasBuiltin>([26]) -> ([47]);
store_temp<Pedersen>([27]) -> ([48]);
store_temp<System>([28]) -> ([49]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([40]) -> ([50]);
dup<felt252>([38]) -> ([38], [51]);
store_temp<felt252>([51]) -> ([51]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([46], [47], [48], [49], [50], [51]) -> ([41], [42], [43], [44], [45]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([45]) { fallthrough([52]) 4061([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([52]) -> ([54]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([54]) -> ([55], [56], [57], [58], [59], [60]);
snapshot_take<core::bool>([58]) -> ([61], [62]);
struct_construct<Unit>() -> ([63]);
enum_init<core::bool, 1>([63]) -> ([64]);
snapshot_take<core::bool>([64]) -> ([65], [66]);
drop<core::bool>([65]) -> ();
store_temp<core::bool>([66]) -> ([66]);
enum_match<core::bool>([62]) { fallthrough([67]) 3555([68]) };
branch_align() -> ();
drop<Unit>([67]) -> ();
rename<core::bool>([66]) -> ([69]);
bool_not_impl([69]) -> ([70]);
store_temp<core::bool>([70]) -> ([71]);
jump() { 3559() };
branch_align() -> ();
drop<Unit>([68]) -> ();
rename<core::bool>([66]) -> ([72]);
store_temp<core::bool>([72]) -> ([71]);
enum_match<core::bool>([71]) { fallthrough([73]) 3593([74]) };
branch_align() -> ();
drop<Unit>([73]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
array_new<felt252>() -> ([75]);
felt252_const<3030929464553973717738602898378949902413558348268820420872475510925676>() -> ([76]);
store_temp<felt252>([76]) -> ([76]);
array_append<felt252>([75], [76]) -> ([77]);
struct_construct<core::panics::Panic>() -> ([78]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([78], [77]) -> ([79]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([79]) -> ([80]);
store_temp<RangeCheck>([41]) -> ([81]);
store_temp<GasBuiltin>([42]) -> ([82]);
store_temp<Pedersen>([43]) -> ([83]);
store_temp<System>([44]) -> ([84]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([80]) -> ([85]);
return([81], [82], [83], [84], [85]);
branch_align() -> ();
drop<Unit>([74]) -> ();
store_temp<GasBuiltin>([42]) -> ([89]);
store_temp<System>([44]) -> ([90]);
function_call<user@core::starknet::info::get_block_timestamp>([89], [90]) -> ([86], [87], [88]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([88]) { fallthrough([91]) 4035([92]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([91]) -> ([93]);
store_temp<RangeCheck>([41]) -> ([96]);
dup<core::integer::u256>([5]) -> ([5], [97]);
store_temp<core::integer::u256>([97]) -> ([97]);
dup<core::integer::u256>([56]) -> ([56], [98]);
store_temp<core::integer::u256>([98]) -> ([98]);
function_call<user@core::integer::U256PartialOrd::lt>([96], [97], [98]) -> ([94], [95]);
enum_match<core::bool>([95]) { fallthrough([99]) 3642([100]) };
branch_align() -> ();
drop<Unit>([99]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<u64>([93]) -> ();
array_new<felt252>() -> ([101]);
felt252_const<620022201948753318931345807625907812>() -> ([102]);
store_temp<felt252>([102]) -> ([102]);
array_append<felt252>([101], [102]) -> ([103]);
struct_construct<core::panics::Panic>() -> ([104]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([104], [103]) -> ([105]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([105]) -> ([106]);
store_temp<RangeCheck>([94]) -> ([107]);
store_temp<GasBuiltin>([86]) -> ([108]);
store_temp<Pedersen>([43]) -> ([109]);
store_temp<System>([87]) -> ([110]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([106]) -> ([111]);
return([107], [108], [109], [110], [111]);
branch_align() -> ();
drop<Unit>([100]) -> ();
store_temp<RangeCheck>([94]) -> ([114]);
store_temp<u64>([93]) -> ([115]);
dup<u64>([55]) -> ([55], [116]);
store_temp<u64>([116]) -> ([116]);
function_call<user@core::integer::U64Sub::sub>([114], [115], [116]) -> ([112], [113]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([113]) { fallthrough([117]) 4009([118]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([117]) -> ([119]);
dup<u64>([57]) -> ([57], [120]);
u64_overflowing_sub([112], [120], [119]) { fallthrough([121], [122]) 3687([123], [124]) };
branch_align() -> ();
drop<u64>([122]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
array_new<felt252>() -> ([125]);
felt252_const<46248313362945155633582409058267955471608630680379476045588751716>() -> ([126]);
store_temp<felt252>([126]) -> ([126]);
array_append<felt252>([125], [126]) -> ([127]);
struct_construct<core::panics::Panic>() -> ([128]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([128], [127]) -> ([129]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([129]) -> ([130]);
store_temp<RangeCheck>([121]) -> ([131]);
store_temp<GasBuiltin>([86]) -> ([132]);
store_temp<Pedersen>([43]) -> ([133]);
store_temp<System>([87]) -> ([134]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([130]) -> ([135]);
return([131], [132], [133], [134], [135]);
branch_align() -> ();
drop<u64>([124]) -> ();
snapshot_take<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ([136], [137]);
store_temp<RangeCheck>([123]) -> ([143]);
store_temp<GasBuiltin>([86]) -> ([144]);
store_temp<Pedersen>([43]) -> ([145]);
store_temp<System>([87]) -> ([146]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([137]) -> ([147]);
dup<ContractAddress>([13]) -> ([13], [148]);
store_temp<ContractAddress>([148]) -> ([148]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read>([143], [144], [145], [146], [147], [148]) -> ([138], [139], [140], [141], [142]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([142]) { fallthrough([149]) 3983([150]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([149]) -> ([151]);
store_temp<RangeCheck>([138]) -> ([154]);
dup<core::integer::u256>([56]) -> ([56], [155]);
store_temp<core::integer::u256>([155]) -> ([155]);
dup<core::integer::u256>([5]) -> ([5], [156]);
store_temp<core::integer::u256>([156]) -> ([156]);
function_call<user@core::integer::U256Sub::sub>([154], [155], [156]) -> ([152], [153]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([153]) { fallthrough([157]) 3956([158]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([157]) -> ([159]);
store_temp<RangeCheck>([152]) -> ([162]);
store_temp<core::integer::u256>([151]) -> ([163]);
store_temp<core::integer::u256>([159]) -> ([164]);
function_call<user@core::integer::U256Add::add>([162], [163], [164]) -> ([160], [161]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([161]) { fallthrough([165]) 3930([166]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([165]) -> ([167]);
store_temp<RangeCheck>([160]) -> ([173]);
store_temp<GasBuiltin>([139]) -> ([174]);
store_temp<Pedersen>([140]) -> ([175]);
store_temp<System>([141]) -> ([176]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([136]) -> ([177]);
dup<ContractAddress>([13]) -> ([13], [178]);
store_temp<ContractAddress>([178]) -> ([178]);
store_temp<core::integer::u256>([167]) -> ([179]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([173], [174], [175], [176], [177], [178], [179]) -> ([168], [169], [170], [171], [172]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([172]) { fallthrough([180]) 3905([181]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([180]) -> ([182], [183]);
drop<Unit>([183]) -> ();
store_temp<RangeCheck>([168]) -> ([186]);
store_temp<core::integer::u256>([56]) -> ([187]);
dup<core::integer::u256>([5]) -> ([5], [188]);
store_temp<core::integer::u256>([188]) -> ([188]);
function_call<user@core::integer::U256Sub::sub>([186], [187], [188]) -> ([184], [185]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([185]) { fallthrough([189]) 3880([190]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([189]) -> ([191]);
struct_construct<helloERC20::pledge::PledgeInfo>([55], [191], [57], [61], [59], [60]) -> ([192]);
store_temp<RangeCheck>([184]) -> ([198]);
store_temp<GasBuiltin>([169]) -> ([199]);
store_temp<Pedersen>([170]) -> ([200]);
store_temp<System>([171]) -> ([201]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ([202]);
store_temp<felt252>([38]) -> ([203]);
store_temp<helloERC20::pledge::PledgeInfo>([192]) -> ([204]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>([198], [199], [200], [201], [202], [203], [204]) -> ([193], [194], [195], [196], [197]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([197]) { fallthrough([205]) 3862([206]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([205]) -> ([207], [208]);
drop<Unit>([208]) -> ();
snapshot_take<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ([209], [210]);
store_temp<RangeCheck>([193]) -> ([215]);
store_temp<GasBuiltin>([194]) -> ([216]);
store_temp<System>([196]) -> ([217]);
store_temp<helloERC20::pledge::pledge::total_pledge::ContractState>([210]) -> ([218]);
function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::read>([215], [216], [217], [218]) -> ([211], [212], [213], [214]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([214]) { fallthrough([219]) 3843([220]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([219]) -> ([221]);
store_temp<RangeCheck>([211]) -> ([224]);
store_temp<core::integer::u256>([221]) -> ([225]);
dup<core::integer::u256>([5]) -> ([5], [226]);
store_temp<core::integer::u256>([226]) -> ([226]);
function_call<user@core::integer::U256Sub::sub>([224], [225], [226]) -> ([222], [223]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([223]) { fallthrough([227]) 3824([228]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([227]) -> ([229]);
store_temp<GasBuiltin>([212]) -> ([233]);
store_temp<System>([213]) -> ([234]);
store_temp<helloERC20::pledge::pledge::total_pledge::ContractState>([209]) -> ([235]);
store_temp<core::integer::u256>([229]) -> ([236]);
function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::write>([233], [234], [235], [236]) -> ([230], [231], [232]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>([232]) { fallthrough([237]) 3806([238]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>>([237]) -> ([239], [240]);
drop<Unit>([240]) -> ();
struct_construct<helloERC20::pledge::pledge::withdraw>([13], [5]) -> ([241]);
struct_construct<helloERC20::pledge::pledge::ContractState>([14], [15], [239], [17], [18], [19], [182], [23], [207]) -> ([242]);
store_temp<GasBuiltin>([230]) -> ([246]);
store_temp<System>([231]) -> ([247]);
store_temp<helloERC20::pledge::pledge::ContractState>([242]) -> ([248]);
store_temp<helloERC20::pledge::pledge::withdraw>([241]) -> ([249]);
function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::withdraw, helloERC20::pledge::pledge::EventwithdrawIntoEvent>>([246], [247], [248], [249]) -> ([243], [244], [245]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([245]) { fallthrough([250]) 3798([251]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([250]) -> ([252], [253]);
drop<Unit>([253]) -> ();
struct_construct<Unit>() -> ([254]);
enum_init<core::bool, 1>([254]) -> ([255]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([252], [255]) -> ([256]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([256]) -> ([257]);
store_temp<RangeCheck>([222]) -> ([258]);
store_temp<GasBuiltin>([243]) -> ([259]);
store_temp<Pedersen>([195]) -> ([260]);
store_temp<System>([244]) -> ([261]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([257]) -> ([262]);
return([258], [259], [260], [261], [262]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([251]) -> ([263]);
store_temp<RangeCheck>([222]) -> ([264]);
store_temp<GasBuiltin>([243]) -> ([265]);
store_temp<Pedersen>([195]) -> ([266]);
store_temp<System>([244]) -> ([267]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([263]) -> ([268]);
return([264], [265], [266], [267], [268]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([207]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([182]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([238]) -> ([269]);
store_temp<RangeCheck>([222]) -> ([270]);
store_temp<GasBuiltin>([230]) -> ([271]);
store_temp<Pedersen>([195]) -> ([272]);
store_temp<System>([231]) -> ([273]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([269]) -> ([274]);
return([270], [271], [272], [273], [274]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([207]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([182]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([209]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([228]) -> ([275]);
store_temp<RangeCheck>([222]) -> ([276]);
store_temp<GasBuiltin>([212]) -> ([277]);
store_temp<Pedersen>([195]) -> ([278]);
store_temp<System>([213]) -> ([279]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([275]) -> ([280]);
return([276], [277], [278], [279], [280]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([207]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([182]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([209]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([220]) -> ([281]);
store_temp<RangeCheck>([211]) -> ([282]);
store_temp<GasBuiltin>([212]) -> ([283]);
store_temp<Pedersen>([195]) -> ([284]);
store_temp<System>([213]) -> ([285]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([281]) -> ([286]);
return([282], [283], [284], [285], [286]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([182]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([206]) -> ([287]);
store_temp<RangeCheck>([193]) -> ([288]);
store_temp<GasBuiltin>([194]) -> ([289]);
store_temp<Pedersen>([195]) -> ([290]);
store_temp<System>([196]) -> ([291]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([287]) -> ([292]);
return([288], [289], [290], [291], [292]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([182]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<u64>([55]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([190]) -> ([293]);
store_temp<RangeCheck>([184]) -> ([294]);
store_temp<GasBuiltin>([169]) -> ([295]);
store_temp<Pedersen>([170]) -> ([296]);
store_temp<System>([171]) -> ([297]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([293]) -> ([298]);
return([294], [295], [296], [297], [298]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([181]) -> ([299]);
store_temp<RangeCheck>([168]) -> ([300]);
store_temp<GasBuiltin>([169]) -> ([301]);
store_temp<Pedersen>([170]) -> ([302]);
store_temp<System>([171]) -> ([303]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([299]) -> ([304]);
return([300], [301], [302], [303], [304]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([136]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([166]) -> ([305]);
store_temp<RangeCheck>([160]) -> ([306]);
store_temp<GasBuiltin>([139]) -> ([307]);
store_temp<Pedersen>([140]) -> ([308]);
store_temp<System>([141]) -> ([309]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([305]) -> ([310]);
return([306], [307], [308], [309], [310]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([136]) -> ();
drop<core::integer::u256>([151]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([158]) -> ([311]);
store_temp<RangeCheck>([152]) -> ([312]);
store_temp<GasBuiltin>([139]) -> ([313]);
store_temp<Pedersen>([140]) -> ([314]);
store_temp<System>([141]) -> ([315]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([311]) -> ([316]);
return([312], [313], [314], [315], [316]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([136]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([150]) -> ([317]);
store_temp<RangeCheck>([138]) -> ([318]);
store_temp<GasBuiltin>([139]) -> ([319]);
store_temp<Pedersen>([140]) -> ([320]);
store_temp<System>([141]) -> ([321]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([317]) -> ([322]);
return([318], [319], [320], [321], [322]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([118]) -> ([323]);
store_temp<RangeCheck>([112]) -> ([324]);
store_temp<GasBuiltin>([86]) -> ([325]);
store_temp<Pedersen>([43]) -> ([326]);
store_temp<System>([87]) -> ([327]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([323]) -> ([328]);
return([324], [325], [326], [327], [328]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<u64>([55]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::bool>([61]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([92]) -> ([329]);
store_temp<RangeCheck>([41]) -> ([330]);
store_temp<GasBuiltin>([86]) -> ([331]);
store_temp<Pedersen>([43]) -> ([332]);
store_temp<System>([87]) -> ([333]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([329]) -> ([334]);
return([330], [331], [332], [333], [334]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([53]) -> ([335]);
store_temp<RangeCheck>([41]) -> ([336]);
store_temp<GasBuiltin>([42]) -> ([337]);
store_temp<Pedersen>([43]) -> ([338]);
store_temp<System>([44]) -> ([339]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([335]) -> ([340]);
return([336], [337], [338], [339], [340]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([37]) -> ([341]);
store_temp<RangeCheck>([25]) -> ([342]);
store_temp<GasBuiltin>([26]) -> ([343]);
store_temp<Pedersen>([27]) -> ([344]);
store_temp<System>([28]) -> ([345]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([341]) -> ([346]);
return([342], [343], [344], [345], [346]);
branch_align() -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([12]) -> ([347]);
store_temp<RangeCheck>([0]) -> ([348]);
store_temp<GasBuiltin>([6]) -> ([349]);
store_temp<Pedersen>([2]) -> ([350]);
store_temp<System>([7]) -> ([351]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([347]) -> ([352]);
return([348], [349], [350], [351], [352]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([6], [7], [8], [9], [10], [11], [12], [13], [14]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([13]) -> ([15], [16]);
store_temp<RangeCheck>([0]) -> ([22]);
store_temp<GasBuiltin>([1]) -> ([23]);
store_temp<Pedersen>([2]) -> ([24]);
store_temp<System>([3]) -> ([25]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([16]) -> ([26]);
dup<ContractAddress>([5]) -> ([5], [27]);
store_temp<ContractAddress>([27]) -> ([27]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([22], [23], [24], [25], [26], [27]) -> ([17], [18], [19], [20], [21]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([21]) { fallthrough([28]) 4484([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([28]) -> ([30]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ([31], [32]);
store_temp<RangeCheck>([17]) -> ([38]);
store_temp<GasBuiltin>([18]) -> ([39]);
store_temp<Pedersen>([19]) -> ([40]);
store_temp<System>([20]) -> ([41]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([32]) -> ([42]);
dup<felt252>([30]) -> ([30], [43]);
store_temp<felt252>([43]) -> ([43]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([38], [39], [40], [41], [42], [43]) -> ([33], [34], [35], [36], [37]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([37]) { fallthrough([44]) 4465([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([44]) -> ([46]);
struct_construct<helloERC20::pledge::pledge::ContractState>([6], [7], [8], [9], [10], [11], [12], [15], [31]) -> ([47]);
store_temp<RangeCheck>([33]) -> ([53]);
store_temp<GasBuiltin>([34]) -> ([54]);
store_temp<Pedersen>([35]) -> ([55]);
store_temp<System>([36]) -> ([56]);
store_temp<helloERC20::pledge::pledge::ContractState>([47]) -> ([57]);
dup<ContractAddress>([5]) -> ([5], [58]);
store_temp<ContractAddress>([58]) -> ([58]);
function_call<user@helloERC20::pledge::pledge::ProfitImpl::_calculate_profit>([53], [54], [55], [56], [57], [58]) -> ([48], [49], [50], [51], [52]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([52]) { fallthrough([59]) 4454([60]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>>([59]) -> ([61], [62]);
struct_deconstruct<Tuple<core::integer::u256>>([62]) -> ([63]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([61]) -> ([64], [65], [66], [67], [68], [69], [70], [71], [72]);
snapshot_take<helloERC20::pledge::pledge::_owner::ContractState>([64]) -> ([73], [74]);
store_temp<RangeCheck>([48]) -> ([79]);
store_temp<GasBuiltin>([49]) -> ([80]);
store_temp<System>([51]) -> ([81]);
store_temp<helloERC20::pledge::pledge::_owner::ContractState>([74]) -> ([82]);
function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read>([79], [80], [81], [82]) -> ([75], [76], [77], [78]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([78]) { fallthrough([83]) 4433([84]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([83]) -> ([85]);
snapshot_take<helloERC20::pledge::pledge::token_account::ContractState>([70]) -> ([86], [87]);
snapshot_take<helloERC20::pledge::pledge::_owner::ContractState>([73]) -> ([88], [89]);
store_temp<RangeCheck>([75]) -> ([94]);
store_temp<GasBuiltin>([76]) -> ([95]);
store_temp<System>([77]) -> ([96]);
store_temp<helloERC20::pledge::pledge::_owner::ContractState>([89]) -> ([97]);
function_call<user@helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read>([94], [95], [96], [97]) -> ([90], [91], [92], [93]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([93]) { fallthrough([98]) 4410([99]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([98]) -> ([100]);
store_temp<RangeCheck>([90]) -> ([106]);
store_temp<GasBuiltin>([91]) -> ([107]);
store_temp<Pedersen>([50]) -> ([108]);
store_temp<System>([92]) -> ([109]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([87]) -> ([110]);
store_temp<ContractAddress>([100]) -> ([111]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read>([106], [107], [108], [109], [110], [111]) -> ([101], [102], [103], [104], [105]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([105]) { fallthrough([112]) 4388([113]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([112]) -> ([114]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([46]) -> ([115], [116], [117], [118], [119], [120]);
store_temp<RangeCheck>([101]) -> ([123]);
dup<core::integer::u256>([63]) -> ([63], [124]);
store_temp<core::integer::u256>([124]) -> ([124]);
store_temp<core::integer::u256>([120]) -> ([125]);
function_call<user@core::integer::U256Sub::sub>([123], [124], [125]) -> ([121], [122]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([122]) { fallthrough([126]) 4361([127]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([126]) -> ([128]);
store_temp<RangeCheck>([121]) -> ([131]);
store_temp<core::integer::u256>([114]) -> ([132]);
store_temp<core::integer::u256>([128]) -> ([133]);
function_call<user@core::integer::U256Sub::sub>([131], [132], [133]) -> ([129], [130]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([130]) { fallthrough([134]) 4335([135]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([134]) -> ([136]);
store_temp<RangeCheck>([129]) -> ([142]);
store_temp<GasBuiltin>([102]) -> ([143]);
store_temp<Pedersen>([103]) -> ([144]);
store_temp<System>([104]) -> ([145]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([86]) -> ([146]);
store_temp<ContractAddress>([85]) -> ([147]);
store_temp<core::integer::u256>([136]) -> ([148]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([142], [143], [144], [145], [146], [147], [148]) -> ([137], [138], [139], [140], [141]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([141]) { fallthrough([149]) 4311([150]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([149]) -> ([151], [152]);
drop<Unit>([152]) -> ();
dup<core::integer::u256>([63]) -> ([63], [153]);
struct_construct<helloERC20::pledge::PledgeInfo>([115], [116], [117], [118], [119], [153]) -> ([154]);
store_temp<RangeCheck>([137]) -> ([160]);
store_temp<GasBuiltin>([138]) -> ([161]);
store_temp<Pedersen>([139]) -> ([162]);
store_temp<System>([140]) -> ([163]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ([164]);
store_temp<felt252>([30]) -> ([165]);
store_temp<helloERC20::pledge::PledgeInfo>([154]) -> ([166]);
dup<helloERC20::pledge::PledgeInfo>([166]) -> ([166], [154]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>([160], [161], [162], [163], [164], [165], [166]) -> ([155], [156], [157], [158], [159]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([159]) { fallthrough([167]) 4292([168]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([167]) -> ([169], [170]);
drop<Unit>([170]) -> ();
struct_deconstruct<helloERC20::pledge::PledgeInfo>([154]) -> ([171], [172], [173], [174], [175], [176]);
drop<u64>([171]) -> ();
drop<core::integer::u256>([172]) -> ();
drop<u64>([173]) -> ();
drop<core::bool>([174]) -> ();
drop<core::integer::u256>([175]) -> ();
store_temp<RangeCheck>([155]) -> ([179]);
dup<core::integer::u256>([63]) -> ([63], [180]);
store_temp<core::integer::u256>([180]) -> ([180]);
store_temp<core::integer::u256>([176]) -> ([181]);
function_call<user@core::integer::U256Sub::sub>([179], [180], [181]) -> ([177], [178]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([178]) { fallthrough([182]) 4273([183]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([182]) -> ([184]);
store_temp<RangeCheck>([177]) -> ([190]);
store_temp<GasBuiltin>([156]) -> ([191]);
store_temp<Pedersen>([157]) -> ([192]);
store_temp<System>([158]) -> ([193]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([151]) -> ([194]);
store_temp<ContractAddress>([5]) -> ([195]);
store_temp<core::integer::u256>([184]) -> ([196]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([190], [191], [192], [193], [194], [195], [196]) -> ([185], [186], [187], [188], [189]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([189]) { fallthrough([197]) 4256([198]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([197]) -> ([199], [200]);
drop<Unit>([200]) -> ();
struct_construct<helloERC20::pledge::pledge::ContractState>([88], [65], [66], [67], [68], [69], [199], [71], [169]) -> ([201]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::integer::u256>>([201], [63]) -> ([202]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 0>([202]) -> ([203]);
store_temp<RangeCheck>([185]) -> ([204]);
store_temp<GasBuiltin>([186]) -> ([205]);
store_temp<Pedersen>([187]) -> ([206]);
store_temp<System>([188]) -> ([207]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([203]) -> ([208]);
return([204], [205], [206], [207], [208]);
branch_align() -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([169]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([198]) -> ([209]);
store_temp<RangeCheck>([185]) -> ([210]);
store_temp<GasBuiltin>([186]) -> ([211]);
store_temp<Pedersen>([187]) -> ([212]);
store_temp<System>([188]) -> ([213]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([209]) -> ([214]);
return([210], [211], [212], [213], [214]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([169]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([151]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([183]) -> ([215]);
store_temp<RangeCheck>([177]) -> ([216]);
store_temp<GasBuiltin>([156]) -> ([217]);
store_temp<Pedersen>([157]) -> ([218]);
store_temp<System>([158]) -> ([219]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([215]) -> ([220]);
return([216], [217], [218], [219], [220]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::PledgeInfo>([154]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([151]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([168]) -> ([221]);
store_temp<RangeCheck>([155]) -> ([222]);
store_temp<GasBuiltin>([156]) -> ([223]);
store_temp<Pedersen>([157]) -> ([224]);
store_temp<System>([158]) -> ([225]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([221]) -> ([226]);
return([222], [223], [224], [225], [226]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<u64>([115]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<core::integer::u256>([119]) -> ();
drop<core::bool>([118]) -> ();
drop<u64>([117]) -> ();
drop<core::integer::u256>([116]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([150]) -> ([227]);
store_temp<RangeCheck>([137]) -> ([228]);
store_temp<GasBuiltin>([138]) -> ([229]);
store_temp<Pedersen>([139]) -> ([230]);
store_temp<System>([140]) -> ([231]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([227]) -> ([232]);
return([228], [229], [230], [231], [232]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<core::integer::u256>([119]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<u64>([115]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<core::bool>([118]) -> ();
drop<u64>([117]) -> ();
drop<core::integer::u256>([116]) -> ();
drop<ContractAddress>([85]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([86]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([135]) -> ([233]);
store_temp<RangeCheck>([129]) -> ([234]);
store_temp<GasBuiltin>([102]) -> ([235]);
store_temp<Pedersen>([103]) -> ([236]);
store_temp<System>([104]) -> ([237]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([233]) -> ([238]);
return([234], [235], [236], [237], [238]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<core::integer::u256>([119]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<u64>([115]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<core::bool>([118]) -> ();
drop<u64>([117]) -> ();
drop<core::integer::u256>([116]) -> ();
drop<ContractAddress>([85]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([86]) -> ();
drop<core::integer::u256>([114]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([127]) -> ([239]);
store_temp<RangeCheck>([121]) -> ([240]);
store_temp<GasBuiltin>([102]) -> ([241]);
store_temp<Pedersen>([103]) -> ([242]);
store_temp<System>([104]) -> ([243]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([239]) -> ([244]);
return([240], [241], [242], [243], [244]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<helloERC20::pledge::PledgeInfo>([46]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([86]) -> ();
drop<ContractAddress>([85]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([113]) -> ([245]);
store_temp<RangeCheck>([101]) -> ([246]);
store_temp<GasBuiltin>([102]) -> ([247]);
store_temp<Pedersen>([103]) -> ([248]);
store_temp<System>([104]) -> ([249]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([245]) -> ([250]);
return([246], [247], [248], [249], [250]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([86]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([88]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<helloERC20::pledge::PledgeInfo>([46]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<ContractAddress>([85]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([87]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([99]) -> ([251]);
store_temp<RangeCheck>([90]) -> ([252]);
store_temp<GasBuiltin>([91]) -> ([253]);
store_temp<Pedersen>([50]) -> ([254]);
store_temp<System>([92]) -> ([255]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([251]) -> ([256]);
return([252], [253], [254], [255], [256]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([68]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([67]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([66]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([65]) -> ();
drop<core::integer::u256>([63]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([73]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([71]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([69]) -> ();
drop<helloERC20::pledge::PledgeInfo>([46]) -> ();
drop<ContractAddress>([5]) -> ();
drop<felt252>([30]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([72]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([70]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([84]) -> ([257]);
store_temp<RangeCheck>([75]) -> ([258]);
store_temp<GasBuiltin>([76]) -> ([259]);
store_temp<Pedersen>([50]) -> ([260]);
store_temp<System>([77]) -> ([261]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([257]) -> ([262]);
return([258], [259], [260], [261], [262]);
branch_align() -> ();
drop<felt252>([30]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::PledgeInfo>([46]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([60]) -> ([263]);
store_temp<RangeCheck>([48]) -> ([264]);
store_temp<GasBuiltin>([49]) -> ([265]);
store_temp<Pedersen>([50]) -> ([266]);
store_temp<System>([51]) -> ([267]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([263]) -> ([268]);
return([264], [265], [266], [267], [268]);
branch_align() -> ();
drop<felt252>([30]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([45]) -> ([269]);
store_temp<RangeCheck>([33]) -> ([270]);
store_temp<GasBuiltin>([34]) -> ([271]);
store_temp<Pedersen>([35]) -> ([272]);
store_temp<System>([36]) -> ([273]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([269]) -> ([274]);
return([270], [271], [272], [273], [274]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>, 1>([29]) -> ([275]);
store_temp<RangeCheck>([17]) -> ([276]);
store_temp<GasBuiltin>([18]) -> ([277]);
store_temp<Pedersen>([19]) -> ([278]);
store_temp<System>([20]) -> ([279]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>>([275]) -> ([280]);
return([276], [277], [278], [279], [280]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([3]) -> ([4], [5], [6], [7], [8], [9], [10], [11], [12]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([4]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([5]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([12]) -> ();
store_temp<RangeCheck>([0]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<System>([2]) -> ([19]);
store_temp<helloERC20::pledge::pledge::total_pledge::ContractState>([6]) -> ([20]);
function_call<user@helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::read>([17], [18], [19], [20]) -> ([13], [14], [15], [16]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([16]) { fallthrough([21]) 4526([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([21]) -> ([23]);
struct_construct<Tuple<core::integer::u256>>([23]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([24]) -> ([25]);
store_temp<RangeCheck>([13]) -> ([26]);
store_temp<GasBuiltin>([14]) -> ([27]);
store_temp<System>([15]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([22]) -> ([30]);
store_temp<RangeCheck>([13]) -> ([31]);
store_temp<GasBuiltin>([14]) -> ([32]);
store_temp<System>([15]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
store_temp<GasBuiltin>([1]) -> ([9]);
store_temp<System>([3]) -> ([10]);
function_call<user@core::starknet::info::get_caller_address>([9], [10]) -> ([6], [7], [8]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([8]) { fallthrough([11]) 4732([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([11]) -> ([13]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([14], [15], [16], [17], [18], [19], [20], [21], [22]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([21]) -> ([23], [24]);
store_temp<RangeCheck>([0]) -> ([30]);
store_temp<GasBuiltin>([6]) -> ([31]);
store_temp<Pedersen>([2]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([24]) -> ([34]);
store_temp<ContractAddress>([13]) -> ([35]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([30], [31], [32], [33], [34], [35]) -> ([25], [26], [27], [28], [29]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([29]) { fallthrough([36]) 4714([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([36]) -> ([38]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ([39], [40]);
store_temp<RangeCheck>([25]) -> ([46]);
store_temp<GasBuiltin>([26]) -> ([47]);
store_temp<Pedersen>([27]) -> ([48]);
store_temp<System>([28]) -> ([49]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([40]) -> ([50]);
dup<felt252>([38]) -> ([38], [51]);
store_temp<felt252>([51]) -> ([51]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([46], [47], [48], [49], [50], [51]) -> ([41], [42], [43], [44], [45]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([45]) { fallthrough([52]) 4695([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([52]) -> ([54]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([54]) -> ([55], [56], [57], [58], [59], [60]);
drop<core::bool>([58]) -> ();
drop<core::integer::u256>([59]) -> ();
snapshot_take<core::integer::u256>([56]) -> ([61], [62]);
u128_const<0>() -> ([63]);
u128_const<0>() -> ([64]);
struct_construct<core::integer::u256>([63], [64]) -> ([65]);
snapshot_take<core::integer::u256>([65]) -> ([66], [67]);
drop<core::integer::u256>([66]) -> ();
dup<core::integer::u256>([62]) -> ([62], [68]);
struct_deconstruct<core::integer::u256>([68]) -> ([69], [70]);
drop<u128>([70]) -> ();
snapshot_take<u128>([69]) -> ([71], [72]);
drop<u128>([71]) -> ();
store_temp<core::integer::u256>([67]) -> ([67]);
dup<core::integer::u256>([67]) -> ([67], [73]);
struct_deconstruct<core::integer::u256>([73]) -> ([74], [75]);
drop<u128>([75]) -> ();
snapshot_take<u128>([74]) -> ([76], [77]);
drop<u128>([76]) -> ();
store_temp<u128>([72]) -> ([79]);
store_temp<u128>([77]) -> ([80]);
function_call<user@core::traits::PartialEqSnap::<core::integer::u128, core::integer::U128PartialEq>::eq>([79], [80]) -> ([78]);
enum_match<core::bool>([78]) { fallthrough([81]) 4607([82]) };
branch_align() -> ();
drop<Unit>([81]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<u64>([55]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([61]) -> ();
drop<core::integer::u256>([67]) -> ();
drop<core::integer::u256>([62]) -> ();
jump() { 4638() };
branch_align() -> ();
drop<Unit>([82]) -> ();
struct_deconstruct<core::integer::u256>([62]) -> ([83], [84]);
drop<u128>([83]) -> ();
snapshot_take<u128>([84]) -> ([85], [86]);
drop<u128>([85]) -> ();
struct_deconstruct<core::integer::u256>([67]) -> ([87], [88]);
drop<u128>([87]) -> ();
snapshot_take<u128>([88]) -> ([89], [90]);
drop<u128>([89]) -> ();
store_temp<u128>([86]) -> ([92]);
store_temp<u128>([90]) -> ([93]);
function_call<user@core::traits::PartialEqSnap::<core::integer::u128, core::integer::U128PartialEq>::eq>([92], [93]) -> ([91]);
enum_match<core::bool>([91]) { fallthrough([94]) 4651([95]) };
branch_align() -> ();
drop<Unit>([94]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::integer::u256>([60]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<u64>([55]) -> ();
drop<u64>([57]) -> ();
drop<core::integer::u256>([61]) -> ();
array_new<felt252>() -> ([96]);
felt252_const<521510239195232071017760>() -> ([97]);
store_temp<felt252>([97]) -> ([97]);
array_append<felt252>([96], [97]) -> ([98]);
struct_construct<core::panics::Panic>() -> ([99]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([99], [98]) -> ([100]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>([100]) -> ([101]);
store_temp<RangeCheck>([41]) -> ([102]);
store_temp<GasBuiltin>([42]) -> ([103]);
store_temp<Pedersen>([43]) -> ([104]);
store_temp<System>([44]) -> ([105]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([101]) -> ([106]);
return([102], [103], [104], [105], [106]);
branch_align() -> ();
drop<Unit>([95]) -> ();
struct_construct<Unit>() -> ([107]);
enum_init<core::bool, 1>([107]) -> ([108]);
struct_construct<helloERC20::pledge::PledgeInfo>([55], [61], [57], [108], [5], [60]) -> ([109]);
store_temp<RangeCheck>([41]) -> ([115]);
store_temp<GasBuiltin>([42]) -> ([116]);
store_temp<Pedersen>([43]) -> ([117]);
store_temp<System>([44]) -> ([118]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ([119]);
dup<felt252>([38]) -> ([38], [120]);
store_temp<felt252>([120]) -> ([120]);
store_temp<helloERC20::pledge::PledgeInfo>([109]) -> ([121]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>([115], [116], [117], [118], [119], [120], [121]) -> ([110], [111], [112], [113], [114]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([114]) { fallthrough([122]) 4678([123]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([122]) -> ([124], [125]);
drop<Unit>([125]) -> ();
struct_construct<helloERC20::pledge::pledge::ContractState>([14], [15], [16], [17], [18], [19], [20], [23], [124]) -> ([126]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, felt252>>([126], [38]) -> ([127]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 0>([127]) -> ([128]);
store_temp<RangeCheck>([110]) -> ([129]);
store_temp<GasBuiltin>([111]) -> ([130]);
store_temp<Pedersen>([112]) -> ([131]);
store_temp<System>([113]) -> ([132]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([128]) -> ([133]);
return([129], [130], [131], [132], [133]);
branch_align() -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>([123]) -> ([134]);
store_temp<RangeCheck>([110]) -> ([135]);
store_temp<GasBuiltin>([111]) -> ([136]);
store_temp<Pedersen>([112]) -> ([137]);
store_temp<System>([113]) -> ([138]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([134]) -> ([139]);
return([135], [136], [137], [138], [139]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<felt252>([38]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([39]) -> ();
drop<core::integer::u256>([5]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>([53]) -> ([140]);
store_temp<RangeCheck>([41]) -> ([141]);
store_temp<GasBuiltin>([42]) -> ([142]);
store_temp<Pedersen>([43]) -> ([143]);
store_temp<System>([44]) -> ([144]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([140]) -> ([145]);
return([141], [142], [143], [144], [145]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>([37]) -> ([146]);
store_temp<RangeCheck>([25]) -> ([147]);
store_temp<GasBuiltin>([26]) -> ([148]);
store_temp<Pedersen>([27]) -> ([149]);
store_temp<System>([28]) -> ([150]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([146]) -> ([151]);
return([147], [148], [149], [150], [151]);
branch_align() -> ();
drop<core::integer::u256>([5]) -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>, 1>([12]) -> ([152]);
store_temp<RangeCheck>([0]) -> ([153]);
store_temp<GasBuiltin>([6]) -> ([154]);
store_temp<Pedersen>([2]) -> ([155]);
store_temp<System>([7]) -> ([156]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>>([152]) -> ([157]);
return([153], [154], [155], [156], [157]);
rename<felt252>([0]) -> ([2]);
array_append<felt252>([1], [2]) -> ([3]);
struct_construct<Unit>() -> ([4]);
store_temp<Array<felt252>>([3]) -> ([5]);
store_temp<Unit>([4]) -> ([6]);
return([5], [6]);
struct_deconstruct<core::array::Span::<core::felt252>>([0]) -> ([1]);
array_snapshot_pop_front<felt252>([1]) { fallthrough([2], [3]) 4755([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([3]) -> ([5]);
store_temp<Snapshot<Array<felt252>>>([2]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([5]) -> ([7]);
jump() { 4760() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([8]) -> ([9]);
store_temp<Snapshot<Array<felt252>>>([4]) -> ([6]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([9]) -> ([7]);
struct_construct<core::array::Span::<core::felt252>>([6]) -> ([10]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([10]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([7]) { fallthrough([11]) 4770([12]) };
branch_align() -> ();
unbox<felt252>([11]) -> ([13]);
rename<felt252>([13]) -> ([14]);
enum_init<core::option::Option::<core::felt252>, 0>([14]) -> ([15]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([16]);
store_temp<core::option::Option::<core::felt252>>([15]) -> ([17]);
return([16], [17]);
branch_align() -> ();
drop<Unit>([12]) -> ();
struct_construct<Unit>() -> ([18]);
enum_init<core::option::Option::<core::felt252>, 1>([18]) -> ([19]);
store_temp<core::array::Span::<core::felt252>>([10]) -> ([20]);
store_temp<core::option::Option::<core::felt252>>([19]) -> ([21]);
return([20], [21]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([6], [7], [8], [9], [10], [11], [12], [13], [14]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([13]) -> ();
store_temp<RangeCheck>([0]) -> ([20]);
store_temp<GasBuiltin>([1]) -> ([21]);
store_temp<Pedersen>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ([24]);
store_temp<felt252>([5]) -> ([25]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([20], [21], [22], [23], [24], [25]) -> ([15], [16], [17], [18], [19]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([19]) { fallthrough([26]) 4804([27]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([26]) -> ([28]);
struct_construct<Tuple<helloERC20::pledge::PledgeInfo>>([28]) -> ([29]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0>([29]) -> ([30]);
store_temp<RangeCheck>([15]) -> ([31]);
store_temp<GasBuiltin>([16]) -> ([32]);
store_temp<Pedersen>([17]) -> ([33]);
store_temp<System>([18]) -> ([34]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([30]) -> ([35]);
return([31], [32], [33], [34], [35]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([27]) -> ([36]);
store_temp<RangeCheck>([15]) -> ([37]);
store_temp<GasBuiltin>([16]) -> ([38]);
store_temp<Pedersen>([17]) -> ([39]);
store_temp<System>([18]) -> ([40]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([36]) -> ([41]);
return([37], [38], [39], [40], [41]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([3]) -> ([11]);
function_call<user@core::starknet::info::get_caller_address>([10], [11]) -> ([7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([9]) { fallthrough([12]) 5086([13]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([12]) -> ([14]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([15], [16], [17], [18], [19], [20], [21], [22], [23]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([23]) -> ([24], [25]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<GasBuiltin>([7]) -> ([32]);
store_temp<Pedersen>([2]) -> ([33]);
store_temp<System>([8]) -> ([34]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([25]) -> ([35]);
dup<felt252>([5]) -> ([5], [36]);
store_temp<felt252>([36]) -> ([36]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([31], [32], [33], [34], [35], [36]) -> ([26], [27], [28], [29], [30]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([30]) { fallthrough([37]) 5066([38]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([37]) -> ([39]);
u128_const<2>() -> ([40]);
u128_const<0>() -> ([41]);
struct_construct<core::integer::u256>([40], [41]) -> ([42]);
store_temp<GasBuiltin>([27]) -> ([46]);
store_temp<System>([29]) -> ([47]);
store_temp<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ([48]);
store_temp<core::integer::u256>([42]) -> ([49]);
function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::write>([46], [47], [48], [49]) -> ([43], [44], [45]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>>([45]) { fallthrough([50]) 5046([51]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>>([50]) -> ([52], [53]);
drop<Unit>([53]) -> ();
felt252_const<0>() -> ([54]);
store_temp<RangeCheck>([26]) -> ([60]);
store_temp<GasBuiltin>([43]) -> ([61]);
store_temp<Pedersen>([28]) -> ([62]);
store_temp<System>([44]) -> ([63]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ([64]);
dup<ContractAddress>([6]) -> ([6], [65]);
store_temp<ContractAddress>([65]) -> ([65]);
store_temp<felt252>([54]) -> ([66]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write>([60], [61], [62], [63], [64], [65], [66]) -> ([55], [56], [57], [58], [59]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([59]) { fallthrough([67]) 5026([68]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>([67]) -> ([69], [70]);
drop<Unit>([70]) -> ();
store_temp<RangeCheck>([55]) -> ([76]);
store_temp<GasBuiltin>([56]) -> ([77]);
store_temp<Pedersen>([57]) -> ([78]);
store_temp<System>([58]) -> ([79]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([69]) -> ([80]);
store_temp<ContractAddress>([14]) -> ([81]);
dup<felt252>([5]) -> ([5], [82]);
store_temp<felt252>([82]) -> ([82]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write>([76], [77], [78], [79], [80], [81], [82]) -> ([71], [72], [73], [74], [75]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([75]) { fallthrough([83]) 5007([84]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>([83]) -> ([85], [86]);
drop<Unit>([86]) -> ();
struct_construct<Unit>() -> ([87]);
enum_init<core::bool, 0>([87]) -> ([88]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([39]) -> ([89], [90], [91], [92], [93], [94]);
drop<core::bool>([92]) -> ();
drop<core::integer::u256>([93]) -> ();
u128_const<0>() -> ([95]);
u128_const<0>() -> ([96]);
struct_construct<core::integer::u256>([95], [96]) -> ([97]);
struct_construct<helloERC20::pledge::PledgeInfo>([89], [90], [91], [88], [97], [94]) -> ([98]);
store_temp<RangeCheck>([71]) -> ([104]);
store_temp<GasBuiltin>([72]) -> ([105]);
store_temp<Pedersen>([73]) -> ([106]);
store_temp<System>([74]) -> ([107]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([24]) -> ([108]);
dup<felt252>([5]) -> ([5], [109]);
store_temp<felt252>([109]) -> ([109]);
store_temp<helloERC20::pledge::PledgeInfo>([98]) -> ([110]);
dup<helloERC20::pledge::PledgeInfo>([110]) -> ([110], [98]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write>([104], [105], [106], [107], [108], [109], [110]) -> ([99], [100], [101], [102], [103]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([103]) { fallthrough([111]) 4988([112]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([111]) -> ([113], [114]);
drop<Unit>([114]) -> ();
struct_deconstruct<helloERC20::pledge::PledgeInfo>([98]) -> ([115], [116], [117], [118], [119], [120]);
drop<u64>([115]) -> ();
drop<core::integer::u256>([116]) -> ();
drop<u64>([117]) -> ();
drop<core::bool>([118]) -> ();
drop<core::integer::u256>([120]) -> ();
u128_const<2>() -> ([121]);
u128_const<0>() -> ([122]);
struct_construct<core::integer::u256>([121], [122]) -> ([123]);
store_temp<RangeCheck>([99]) -> ([126]);
store_temp<core::integer::u256>([119]) -> ([127]);
store_temp<core::integer::u256>([123]) -> ([128]);
function_call<user@core::integer::U256Sub::sub>([126], [127], [128]) -> ([124], [125]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([125]) { fallthrough([129]) 4969([130]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([129]) -> ([131]);
store_temp<RangeCheck>([124]) -> ([137]);
store_temp<GasBuiltin>([100]) -> ([138]);
store_temp<Pedersen>([101]) -> ([139]);
store_temp<System>([102]) -> ([140]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ([141]);
dup<ContractAddress>([6]) -> ([6], [142]);
store_temp<ContractAddress>([142]) -> ([142]);
store_temp<core::integer::u256>([131]) -> ([143]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write>([137], [138], [139], [140], [141], [142], [143]) -> ([132], [133], [134], [135], [136]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>>([136]) { fallthrough([144]) 4951([145]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::token_account::ContractState, Unit>>([144]) -> ([146], [147]);
drop<Unit>([147]) -> ();
struct_construct<helloERC20::pledge::pledge::TransferStarking>([6], [5]) -> ([148]);
struct_construct<helloERC20::pledge::pledge::ContractState>([15], [16], [17], [52], [19], [20], [146], [85], [113]) -> ([149]);
store_temp<GasBuiltin>([133]) -> ([153]);
store_temp<System>([135]) -> ([154]);
store_temp<helloERC20::pledge::pledge::ContractState>([149]) -> ([155]);
store_temp<helloERC20::pledge::pledge::TransferStarking>([148]) -> ([156]);
function_call<user@helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::TransferStarking, helloERC20::pledge::pledge::EventTransferStarkingIntoEvent>>([153], [154], [155], [156]) -> ([150], [151], [152]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([152]) { fallthrough([157]) 4943([158]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([157]) -> ([159], [160]);
drop<Unit>([160]) -> ();
struct_construct<Unit>() -> ([161]);
enum_init<core::bool, 1>([161]) -> ([162]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([159], [162]) -> ([163]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([163]) -> ([164]);
store_temp<RangeCheck>([132]) -> ([165]);
store_temp<GasBuiltin>([150]) -> ([166]);
store_temp<Pedersen>([134]) -> ([167]);
store_temp<System>([151]) -> ([168]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([164]) -> ([169]);
return([165], [166], [167], [168], [169]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([158]) -> ([170]);
store_temp<RangeCheck>([132]) -> ([171]);
store_temp<GasBuiltin>([150]) -> ([172]);
store_temp<Pedersen>([134]) -> ([173]);
store_temp<System>([151]) -> ([174]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([170]) -> ([175]);
return([171], [172], [173], [174], [175]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([113]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([85]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([52]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<felt252>([5]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([145]) -> ([176]);
store_temp<RangeCheck>([132]) -> ([177]);
store_temp<GasBuiltin>([133]) -> ([178]);
store_temp<Pedersen>([134]) -> ([179]);
store_temp<System>([135]) -> ([180]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([176]) -> ([181]);
return([177], [178], [179], [180], [181]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([52]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([113]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([85]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([130]) -> ([182]);
store_temp<RangeCheck>([124]) -> ([183]);
store_temp<GasBuiltin>([100]) -> ([184]);
store_temp<Pedersen>([101]) -> ([185]);
store_temp<System>([102]) -> ([186]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([182]) -> ([187]);
return([183], [184], [185], [186], [187]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([52]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::PledgeInfo>([98]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([85]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([112]) -> ([188]);
store_temp<RangeCheck>([99]) -> ([189]);
store_temp<GasBuiltin>([100]) -> ([190]);
store_temp<Pedersen>([101]) -> ([191]);
store_temp<System>([102]) -> ([192]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([188]) -> ([193]);
return([189], [190], [191], [192], [193]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([52]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::PledgeInfo>([39]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([24]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([84]) -> ([194]);
store_temp<RangeCheck>([71]) -> ([195]);
store_temp<GasBuiltin>([72]) -> ([196]);
store_temp<Pedersen>([73]) -> ([197]);
store_temp<System>([74]) -> ([198]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([194]) -> ([199]);
return([195], [196], [197], [198], [199]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([52]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([24]) -> ();
drop<helloERC20::pledge::PledgeInfo>([39]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
drop<ContractAddress>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([68]) -> ([200]);
store_temp<RangeCheck>([55]) -> ([201]);
store_temp<GasBuiltin>([56]) -> ([202]);
store_temp<Pedersen>([57]) -> ([203]);
store_temp<System>([58]) -> ([204]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([200]) -> ([205]);
return([201], [202], [203], [204], [205]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([24]) -> ();
drop<helloERC20::pledge::PledgeInfo>([39]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([51]) -> ([206]);
store_temp<RangeCheck>([26]) -> ([207]);
store_temp<GasBuiltin>([43]) -> ([208]);
store_temp<Pedersen>([28]) -> ([209]);
store_temp<System>([44]) -> ([210]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([206]) -> ([211]);
return([207], [208], [209], [210], [211]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([15]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([24]) -> ();
drop<ContractAddress>([6]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([21]) -> ();
drop<ContractAddress>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([18]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([38]) -> ([212]);
store_temp<RangeCheck>([26]) -> ([213]);
store_temp<GasBuiltin>([27]) -> ([214]);
store_temp<Pedersen>([28]) -> ([215]);
store_temp<System>([29]) -> ([216]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([212]) -> ([217]);
return([213], [214], [215], [216], [217]);
branch_align() -> ();
drop<ContractAddress>([6]) -> ();
drop<felt252>([5]) -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([13]) -> ([218]);
store_temp<RangeCheck>([0]) -> ([219]);
store_temp<GasBuiltin>([7]) -> ([220]);
store_temp<Pedersen>([2]) -> ([221]);
store_temp<System>([8]) -> ([222]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([218]) -> ([223]);
return([219], [220], [221], [222], [223]);
store_temp<GasBuiltin>([1]) -> ([9]);
store_temp<System>([3]) -> ([10]);
function_call<user@core::starknet::info::get_caller_address>([9], [10]) -> ([6], [7], [8]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([8]) { fallthrough([11]) 5333([12]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([11]) -> ([13]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([14], [15], [16], [17], [18], [19], [20], [21], [22]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([21]) -> ([23], [24]);
store_temp<RangeCheck>([0]) -> ([30]);
store_temp<GasBuiltin>([6]) -> ([31]);
store_temp<Pedersen>([2]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([24]) -> ([34]);
dup<ContractAddress>([13]) -> ([13], [35]);
store_temp<ContractAddress>([35]) -> ([35]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([30], [31], [32], [33], [34], [35]) -> ([25], [26], [27], [28], [29]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([29]) { fallthrough([36]) 5314([37]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([36]) -> ([38]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ([39], [40]);
store_temp<RangeCheck>([25]) -> ([46]);
store_temp<GasBuiltin>([26]) -> ([47]);
store_temp<Pedersen>([27]) -> ([48]);
store_temp<System>([28]) -> ([49]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([40]) -> ([50]);
dup<ContractAddress>([5]) -> ([5], [51]);
store_temp<ContractAddress>([51]) -> ([51]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([46], [47], [48], [49], [50], [51]) -> ([41], [42], [43], [44], [45]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([45]) { fallthrough([52]) 5294([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([52]) -> ([54]);
snapshot_take<felt252>([38]) -> ([55], [56]);
felt252_const<0>() -> ([57]);
snapshot_take<felt252>([57]) -> ([58], [59]);
drop<felt252>([58]) -> ();
rename<felt252>([56]) -> ([60]);
rename<felt252>([59]) -> ([61]);
felt252_sub([60], [61]) -> ([62]);
store_temp<felt252>([62]) -> ([62]);
felt252_is_zero([62]) { fallthrough() 5266([63]) };
branch_align() -> ();
snapshot_take<felt252>([54]) -> ([64], [65]);
drop<felt252>([64]) -> ();
felt252_const<0>() -> ([66]);
snapshot_take<felt252>([66]) -> ([67], [68]);
drop<felt252>([67]) -> ();
rename<felt252>([65]) -> ([69]);
snapshot_take<felt252>([69]) -> ([70], [71]);
drop<felt252>([70]) -> ();
rename<felt252>([68]) -> ([72]);
snapshot_take<felt252>([72]) -> ([73], [74]);
drop<felt252>([73]) -> ();
rename<felt252>([71]) -> ([75]);
rename<felt252>([74]) -> ([76]);
felt252_sub([75], [76]) -> ([77]);
store_temp<felt252>([77]) -> ([77]);
felt252_is_zero([77]) { fallthrough() 5159([78]) };
branch_align() -> ();
struct_construct<Unit>() -> ([79]);
enum_init<core::bool, 1>([79]) -> ([80]);
store_temp<core::bool>([80]) -> ([81]);
jump() { 5164() };
branch_align() -> ();
drop<NonZero<felt252>>([78]) -> ();
struct_construct<Unit>() -> ([82]);
enum_init<core::bool, 0>([82]) -> ([83]);
store_temp<core::bool>([83]) -> ([81]);
bool_not_impl([81]) -> ([84]);
store_temp<core::bool>([84]) -> ([84]);
enum_match<core::bool>([84]) { fallthrough([85]) 5194([86]) };
branch_align() -> ();
drop<Unit>([85]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<felt252>([55]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([39]) -> ();
array_new<felt252>() -> ([87]);
felt252_const<43563523829963144693745699762661015430943763413296416>() -> ([88]);
store_temp<felt252>([88]) -> ([88]);
array_append<felt252>([87], [88]) -> ([89]);
struct_construct<core::panics::Panic>() -> ([90]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([90], [89]) -> ([91]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([91]) -> ([92]);
store_temp<RangeCheck>([41]) -> ([93]);
store_temp<GasBuiltin>([42]) -> ([94]);
store_temp<Pedersen>([43]) -> ([95]);
store_temp<System>([44]) -> ([96]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([92]) -> ([97]);
return([93], [94], [95], [96], [97]);
branch_align() -> ();
drop<Unit>([86]) -> ();
felt252_const<0>() -> ([98]);
store_temp<RangeCheck>([41]) -> ([104]);
store_temp<GasBuiltin>([42]) -> ([105]);
store_temp<Pedersen>([43]) -> ([106]);
store_temp<System>([44]) -> ([107]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([39]) -> ([108]);
store_temp<ContractAddress>([13]) -> ([109]);
store_temp<felt252>([98]) -> ([110]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write>([104], [105], [106], [107], [108], [109], [110]) -> ([99], [100], [101], [102], [103]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([103]) { fallthrough([111]) 5248([112]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>([111]) -> ([113], [114]);
drop<Unit>([114]) -> ();
store_temp<RangeCheck>([99]) -> ([120]);
store_temp<GasBuiltin>([100]) -> ([121]);
store_temp<Pedersen>([101]) -> ([122]);
store_temp<System>([102]) -> ([123]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([113]) -> ([124]);
store_temp<ContractAddress>([5]) -> ([125]);
store_temp<felt252>([55]) -> ([126]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write>([120], [121], [122], [123], [124], [125], [126]) -> ([115], [116], [117], [118], [119]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([119]) { fallthrough([127]) 5232([128]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>([127]) -> ([129], [130]);
drop<Unit>([130]) -> ();
struct_construct<Unit>() -> ([131]);
enum_init<core::bool, 1>([131]) -> ([132]);
struct_construct<helloERC20::pledge::pledge::ContractState>([14], [15], [16], [17], [18], [19], [20], [129], [22]) -> ([133]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, core::bool>>([133], [132]) -> ([134]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 0>([134]) -> ([135]);
store_temp<RangeCheck>([115]) -> ([136]);
store_temp<GasBuiltin>([116]) -> ([137]);
store_temp<Pedersen>([117]) -> ([138]);
store_temp<System>([118]) -> ([139]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([135]) -> ([140]);
return([136], [137], [138], [139], [140]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([128]) -> ([141]);
store_temp<RangeCheck>([115]) -> ([142]);
store_temp<GasBuiltin>([116]) -> ([143]);
store_temp<Pedersen>([117]) -> ([144]);
store_temp<System>([118]) -> ([145]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([141]) -> ([146]);
return([142], [143], [144], [145], [146]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<felt252>([55]) -> ();
drop<ContractAddress>([5]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([112]) -> ([147]);
store_temp<RangeCheck>([99]) -> ([148]);
store_temp<GasBuiltin>([100]) -> ([149]);
store_temp<Pedersen>([101]) -> ([150]);
store_temp<System>([102]) -> ([151]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([147]) -> ([152]);
return([148], [149], [150], [151], [152]);
branch_align() -> ();
drop<NonZero<felt252>>([63]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<felt252>([55]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([39]) -> ();
drop<felt252>([54]) -> ();
array_new<felt252>() -> ([153]);
felt252_const<37182682143656407704203887602877008484985127083402528>() -> ([154]);
store_temp<felt252>([154]) -> ([154]);
array_append<felt252>([153], [154]) -> ([155]);
struct_construct<core::panics::Panic>() -> ([156]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([156], [155]) -> ([157]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([157]) -> ([158]);
store_temp<RangeCheck>([41]) -> ([159]);
store_temp<GasBuiltin>([42]) -> ([160]);
store_temp<Pedersen>([43]) -> ([161]);
store_temp<System>([44]) -> ([162]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([158]) -> ([163]);
return([159], [160], [161], [162], [163]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
drop<felt252>([38]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([39]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([53]) -> ([164]);
store_temp<RangeCheck>([41]) -> ([165]);
store_temp<GasBuiltin>([42]) -> ([166]);
store_temp<Pedersen>([43]) -> ([167]);
store_temp<System>([44]) -> ([168]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([164]) -> ([169]);
return([165], [166], [167], [168], [169]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([23]) -> ();
drop<ContractAddress>([5]) -> ();
drop<ContractAddress>([13]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([19]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([18]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([17]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([16]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([14]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([22]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([20]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([37]) -> ([170]);
store_temp<RangeCheck>([25]) -> ([171]);
store_temp<GasBuiltin>([26]) -> ([172]);
store_temp<Pedersen>([27]) -> ([173]);
store_temp<System>([28]) -> ([174]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([170]) -> ([175]);
return([171], [172], [173], [174], [175]);
branch_align() -> ();
drop<ContractAddress>([5]) -> ();
drop<helloERC20::pledge::pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>, 1>([12]) -> ([176]);
store_temp<RangeCheck>([0]) -> ([177]);
store_temp<GasBuiltin>([6]) -> ([178]);
store_temp<Pedersen>([2]) -> ([179]);
store_temp<System>([7]) -> ([180]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>>([176]) -> ([181]);
return([177], [178], [179], [180], [181]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([3]) -> ([4], [5], [6], [7], [8], [9], [10], [11], [12]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([4]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([5]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([12]) -> ();
store_temp<RangeCheck>([0]) -> ([17]);
store_temp<GasBuiltin>([1]) -> ([18]);
store_temp<System>([2]) -> ([19]);
store_temp<helloERC20::pledge::pledge::burn_total::ContractState>([7]) -> ([20]);
function_call<user@helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::read>([17], [18], [19], [20]) -> ([13], [14], [15], [16]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([16]) { fallthrough([21]) 5367([22]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([21]) -> ([23]);
struct_construct<Tuple<core::integer::u256>>([23]) -> ([24]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([24]) -> ([25]);
store_temp<RangeCheck>([13]) -> ([26]);
store_temp<GasBuiltin>([14]) -> ([27]);
store_temp<System>([15]) -> ([28]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([25]) -> ([29]);
return([26], [27], [28], [29]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([22]) -> ([30]);
store_temp<RangeCheck>([13]) -> ([31]);
store_temp<GasBuiltin>([14]) -> ([32]);
store_temp<System>([15]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
struct_deconstruct<core::integer::u256>([4]) -> ([5], [6]);
u128_to_felt252([5]) -> ([7]);
dup<StorageBaseAddress>([3]) -> ([3], [9]);
storage_address_from_base([9]) -> ([8]);
dup<u32>([2]) -> ([2], [10]);
storage_write_syscall([0], [1], [10], [8], [7]) { fallthrough([11], [12]) 5400([13], [14], [15]) };
branch_align() -> ();
u128_to_felt252([6]) -> ([16]);
u8_const<1>() -> ([17]);
storage_address_from_base_and_offset([3], [17]) -> ([18]);
store_temp<GasBuiltin>([11]) -> ([11]);
store_temp<StorageAddress>([18]) -> ([18]);
storage_write_syscall([11], [12], [2], [18], [16]) { fallthrough([19], [20]) 5394([21], [22], [23]) };
branch_align() -> ();
struct_construct<Unit>() -> ([24]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([24]) -> ([25]);
store_temp<GasBuiltin>([19]) -> ([26]);
store_temp<System>([20]) -> ([27]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([25]) -> ([28]);
return([26], [27], [28]);
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([23]) -> ([29]);
store_temp<GasBuiltin>([21]) -> ([30]);
store_temp<System>([22]) -> ([31]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([32]);
return([30], [31], [32]);
branch_align() -> ();
drop<StorageBaseAddress>([3]) -> ();
drop<u128>([6]) -> ();
drop<u32>([2]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([15]) -> ([33]);
store_temp<GasBuiltin>([13]) -> ([34]);
store_temp<System>([14]) -> ([35]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([33]) -> ([36]);
return([34], [35], [36]);
enum_match<core::result::Result::<(), core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 5415([2]) };
branch_align() -> ();
struct_construct<Tuple<Unit>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<((),)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<((),)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<((),)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<((),)>>([8]) -> ([9]);
return([9]);
drop<helloERC20::pledge::pledge::token_account::ContractState>([2]) -> ();
felt252_const<1208869941568674053579384240244796821615065715083720448728279605013018788452>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
drop<helloERC20::pledge::pledge::total_supply::ContractState>([3]) -> ();
storage_base_address_const<603278275252936218847294002513349627170936020082667936993356353388973422646>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::integer::Storeu256::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 5463([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([20]) 5456([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([20]) -> ([22]);
struct_construct<Tuple<core::integer::u256>>([22]) -> ([23]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
rename<u128>([0]) -> ([2]);
u128_to_felt252([2]) -> ([3]);
snapshot_take<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
struct_deconstruct<core::array::Span::<core::felt252>>([1]) -> ([2]);
array_snapshot_pop_front<felt252>([2]) { fallthrough([3], [4]) 5489([5]) };
branch_align() -> ();
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 0>([4]) -> ([6]);
store_temp<Snapshot<Array<felt252>>>([3]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([6]) -> ([8]);
jump() { 5494() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::option::Option::<core::box::Box::<@core::felt252>>, 1>([9]) -> ([10]);
store_temp<Snapshot<Array<felt252>>>([5]) -> ([7]);
store_temp<core::option::Option::<core::box::Box::<@core::felt252>>>([10]) -> ([8]);
struct_construct<core::array::Span::<core::felt252>>([7]) -> ([11]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([11]);
enum_match<core::option::Option::<core::box::Box::<@core::felt252>>>([8]) { fallthrough([12]) 5516([13]) };
branch_align() -> ();
unbox<felt252>([12]) -> ([14]);
rename<felt252>([14]) -> ([15]);
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([15]) -> ([19]);
function_call<user@core::integer::u128_try_from_felt252>([18], [19]) -> ([16], [17]);
enum_match<core::option::Option::<core::integer::u128>>([17]) { fallthrough([20]) 5510([21]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([20]) -> ([22]);
store_temp<RangeCheck>([16]) -> ([23]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([24]);
store_temp<core::option::Option::<core::integer::u128>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 1>([21]) -> ([26]);
store_temp<RangeCheck>([16]) -> ([27]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([28]);
store_temp<core::option::Option::<core::integer::u128>>([26]) -> ([29]);
return([27], [28], [29]);
branch_align() -> ();
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([30]);
enum_init<core::option::Option::<core::integer::u128>, 1>([30]) -> ([31]);
store_temp<RangeCheck>([0]) -> ([32]);
store_temp<core::array::Span::<core::felt252>>([11]) -> ([33]);
store_temp<core::option::Option::<core::integer::u128>>([31]) -> ([34]);
return([32], [33], [34]);
drop<helloERC20::pledge::pledge::_owner::ContractState>([3]) -> ();
storage_base_address_const<784875164039100399579447185504448607377760708865195644450792957979080027814>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::starknet::storage_access::StoreContractAddress::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 5555([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::starknet::contract_address::ContractAddress>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([18]) { fallthrough([20]) 5548([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<ContractAddress>>([20]) -> ([22]);
struct_construct<Tuple<ContractAddress>>([22]) -> ([23]);
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@core::starknet::info::get_execution_info>([5], [6]) -> ([2], [3], [4]);
enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) { fallthrough([7]) 5580([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([7]) -> ([9]);
unbox<core::starknet::info::ExecutionInfo>([9]) -> ([10]);
struct_deconstruct<core::starknet::info::ExecutionInfo>([10]) -> ([11], [12], [13], [14], [15]);
drop<Box<core::starknet::info::BlockInfo>>([11]) -> ();
drop<Box<core::starknet::info::TxInfo>>([12]) -> ();
drop<ContractAddress>([14]) -> ();
drop<felt252>([15]) -> ();
struct_construct<Tuple<ContractAddress>>([13]) -> ([16]);
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([16]) -> ([17]);
store_temp<GasBuiltin>([2]) -> ([18]);
store_temp<System>([3]) -> ([19]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([8]) -> ([21]);
store_temp<GasBuiltin>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([21]) -> ([24]);
return([22], [23], [24]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 5597([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624079483812136948410799859986295>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::panics::Panic>() -> ([17]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([3]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
snapshot_take<helloERC20::pledge::pledge::white_list::ContractState>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<helloERC20::pledge::pledge::white_list::ContractState>([8]) -> ([14]);
store_temp<ContractAddress>([5]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<GasBuiltin>([1]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<u32>([16]) -> ([22]);
store_temp<StorageBaseAddress>([11]) -> ([23]);
store_temp<core::integer::u256>([6]) -> ([24]);
function_call<user@core::integer::Storeu256::write>([20], [21], [22], [23], [24]) -> ([17], [18], [19]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([19]) -> ([26]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([26]) -> ([25]);
enum_match<core::panics::PanicResult::<((),)>>([25]) { fallthrough([27]) 5635([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([27]) -> ([29]);
struct_construct<Tuple<helloERC20::pledge::pledge::white_list::ContractState, Unit>>([7], [29]) -> ([30]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 0>([30]) -> ([31]);
store_temp<RangeCheck>([9]) -> ([32]);
store_temp<GasBuiltin>([17]) -> ([33]);
store_temp<Pedersen>([10]) -> ([34]);
store_temp<System>([18]) -> ([35]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>([31]) -> ([36]);
return([32], [33], [34], [35], [36]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>, 1>([28]) -> ([37]);
store_temp<RangeCheck>([9]) -> ([38]);
store_temp<GasBuiltin>([17]) -> ([39]);
store_temp<Pedersen>([10]) -> ([40]);
store_temp<System>([18]) -> ([41]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>>([37]) -> ([42]);
return([38], [39], [40], [41], [42]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<helloERC20::pledge::pledge::white_list::ContractState>([4]) -> ([11]);
store_temp<ContractAddress>([5]) -> ([12]);
function_call<user@helloERC20::pledge::pledge::white_list::InternalContractStateImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::integer::Storeu256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 5680([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 5672([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
dup<u128>([4]) -> ([4], [7]);
dup<u128>([6]) -> ([6], [8]);
u128_overflowing_sub([0], [7], [8]) { fallthrough([9], [10]) 5700([11], [12]) };
branch_align() -> ();
drop<u128>([10]) -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 0>([13]) -> ([14]);
store_temp<RangeCheck>([9]) -> ([15]);
store_temp<core::bool>([14]) -> ([16]);
jump() { 5706() };
branch_align() -> ();
drop<u128>([12]) -> ();
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 1>([17]) -> ([18]);
store_temp<RangeCheck>([11]) -> ([15]);
store_temp<core::bool>([18]) -> ([16]);
dup<u128>([3]) -> ([3], [19]);
dup<u128>([4]) -> ([4], [20]);
struct_construct<core::integer::u256>([19], [20]) -> ([21]);
drop<core::integer::u256>([21]) -> ();
dup<u128>([5]) -> ([5], [22]);
dup<u128>([6]) -> ([6], [23]);
struct_construct<core::integer::u256>([22], [23]) -> ([24]);
drop<core::integer::u256>([24]) -> ();
enum_match<core::bool>([16]) { fallthrough([25]) 5754([26]) };
branch_align() -> ();
drop<Unit>([25]) -> ();
snapshot_take<u128>([4]) -> ([27], [28]);
snapshot_take<u128>([6]) -> ([29], [30]);
rename<u128>([28]) -> ([31]);
rename<u128>([30]) -> ([32]);
u128_eq([31], [32]) { fallthrough() 5728() };
branch_align() -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<RangeCheck>([15]) -> ([35]);
store_temp<core::bool>([34]) -> ([36]);
jump() { 5747() };
branch_align() -> ();
dup<u128>([3]) -> ([3], [37]);
dup<u128>([5]) -> ([5], [38]);
u128_overflowing_sub([15], [37], [38]) { fallthrough([39], [40]) 5739([41], [42]) };
branch_align() -> ();
drop<u128>([40]) -> ();
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<RangeCheck>([39]) -> ([45]);
store_temp<core::bool>([44]) -> ([46]);
jump() { 5745() };
branch_align() -> ();
drop<u128>([42]) -> ();
struct_construct<Unit>() -> ([47]);
enum_init<core::bool, 1>([47]) -> ([48]);
store_temp<RangeCheck>([41]) -> ([45]);
store_temp<core::bool>([48]) -> ([46]);
rename<RangeCheck>([45]) -> ([35]);
rename<core::bool>([46]) -> ([36]);
struct_construct<core::integer::u256>([3], [27]) -> ([49]);
drop<core::integer::u256>([49]) -> ();
struct_construct<core::integer::u256>([5], [29]) -> ([50]);
drop<core::integer::u256>([50]) -> ();
rename<RangeCheck>([35]) -> ([51]);
rename<core::bool>([36]) -> ([52]);
jump() { 5764() };
branch_align() -> ();
drop<Unit>([26]) -> ();
struct_construct<Unit>() -> ([53]);
enum_init<core::bool, 1>([53]) -> ([54]);
struct_construct<core::integer::u256>([3], [4]) -> ([55]);
drop<core::integer::u256>([55]) -> ();
struct_construct<core::integer::u256>([5], [6]) -> ([56]);
drop<core::integer::u256>([56]) -> ();
store_temp<RangeCheck>([15]) -> ([51]);
store_temp<core::bool>([54]) -> ([52]);
rename<RangeCheck>([51]) -> ([57]);
rename<core::bool>([52]) -> ([58]);
return([57], [58]);
u8_try_from_felt252([0], [1]) { fallthrough([2], [3]) 5773([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([5]) -> ([7]);
jump() { 5778() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u8>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u8>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u8>>([7]) -> ([11]);
return([10], [11]);
u64_try_from_felt252([0], [1]) { fallthrough([2], [3]) 5787([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u64>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::integer::u64>>([5]) -> ([7]);
jump() { 5792() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::integer::u64>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::integer::u64>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::integer::u64>>([7]) -> ([11]);
return([10], [11]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<helloERC20::pledge::pledge::token_account::ContractState>([4]) -> ([11]);
store_temp<ContractAddress>([5]) -> ([12]);
function_call<user@helloERC20::pledge::pledge::token_account::InternalContractStateImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@core::integer::Storeu256::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 5831([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([26]) { fallthrough([28]) 5823([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([28]) -> ([30]);
struct_construct<Tuple<core::integer::u256>>([30]) -> ([31]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_sub>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 5850([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624085075084607933104993585622903>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::panics::Panic>() -> ([17]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([3]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@core::starknet::info::get_block_info>([5], [6]) -> ([2], [3], [4]);
enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>>([4]) { fallthrough([7]) 5878([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::BlockInfo>>>([7]) -> ([9]);
unbox<core::starknet::info::BlockInfo>([9]) -> ([10]);
struct_deconstruct<core::starknet::info::BlockInfo>([10]) -> ([11], [12], [13]);
drop<u64>([11]) -> ();
drop<ContractAddress>([13]) -> ();
struct_construct<Tuple<u64>>([12]) -> ([14]);
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 0>([14]) -> ([15]);
store_temp<GasBuiltin>([2]) -> ([16]);
store_temp<System>([3]) -> ([17]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([15]) -> ([18]);
return([16], [17], [18]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 1>([8]) -> ([19]);
store_temp<GasBuiltin>([2]) -> ([20]);
store_temp<System>([3]) -> ([21]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([19]) -> ([22]);
return([20], [21], [22]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([8]) -> ([14]);
store_temp<felt252>([5]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
u32_const<0>() -> ([16]);
store_temp<RangeCheck>([9]) -> ([21]);
store_temp<GasBuiltin>([1]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<u32>([16]) -> ([24]);
store_temp<StorageBaseAddress>([11]) -> ([25]);
store_temp<helloERC20::pledge::PledgeInfo>([6]) -> ([26]);
function_call<user@helloERC20::pledge::StorePledgeInfo::write>([21], [22], [23], [24], [25], [26]) -> ([17], [18], [19], [20]);
enum_match<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([20]) { fallthrough([27]) 5923([28]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([27]) -> ([29]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([29]) -> ([31]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([31]) -> ([30]);
enum_match<core::panics::PanicResult::<((),)>>([30]) { fallthrough([32]) 5914([33]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([32]) -> ([34]);
struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account_info::ContractState, Unit>>([7], [34]) -> ([35]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([17]) -> ([37]);
store_temp<GasBuiltin>([18]) -> ([38]);
store_temp<Pedersen>([10]) -> ([39]);
store_temp<System>([19]) -> ([40]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([36]) -> ([41]);
return([37], [38], [39], [40], [41]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 1>([33]) -> ([42]);
store_temp<RangeCheck>([17]) -> ([43]);
store_temp<GasBuiltin>([18]) -> ([44]);
store_temp<Pedersen>([10]) -> ([45]);
store_temp<System>([19]) -> ([46]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([42]) -> ([47]);
return([43], [44], [45], [46], [47]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>, 1>([28]) -> ([48]);
store_temp<RangeCheck>([17]) -> ([49]);
store_temp<GasBuiltin>([18]) -> ([50]);
store_temp<Pedersen>([10]) -> ([51]);
store_temp<System>([19]) -> ([52]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>>([48]) -> ([53]);
return([49], [50], [51], [52], [53]);
snapshot_take<helloERC20::pledge::pledge::total_pledge::ContractState>([2]) -> ([4], [5]);
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([5]) -> ();
storage_base_address_const<1433302525446439797702011312477458480455837347679684781656504359856313966763>() -> ([6]);
u32_const<0>() -> ([7]);
store_temp<GasBuiltin>([0]) -> ([11]);
store_temp<System>([1]) -> ([12]);
store_temp<u32>([7]) -> ([13]);
store_temp<StorageBaseAddress>([6]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::integer::Storeu256::write>([11], [12], [13], [14], [15]) -> ([8], [9], [10]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::panics::PanicResult::<((),)>>([16]) { fallthrough([18]) 5953([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([18]) -> ([20]);
struct_construct<Tuple<helloERC20::pledge::pledge::total_pledge::ContractState, Unit>>([4], [20]) -> ([21]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([8]) -> ([27]);
store_temp<System>([9]) -> ([28]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>>([26]) -> ([29]);
return([27], [28], [29]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([4]) -> ([11]);
store_temp<ContractAddress>([5]) -> ([12]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
storage_address_from_base([8]) -> ([13]);
u32_const<0>() -> ([14]);
store_temp<u32>([14]) -> ([14]);
storage_read_syscall([1], [3], [14], [13]) { fallthrough([15], [16], [17]) 5975([18], [19], [20]) };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 0>([17]) -> ([21]);
store_temp<GasBuiltin>([15]) -> ([22]);
store_temp<System>([16]) -> ([23]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([21]) -> ([24]);
jump() { 5980() };
branch_align() -> ();
enum_init<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>, 1>([20]) -> ([25]);
store_temp<GasBuiltin>([18]) -> ([22]);
store_temp<System>([19]) -> ([23]);
store_temp<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([25]) -> ([24]);
rename<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([24]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([26]) { fallthrough([28]) 5993([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([28]) -> ([30]);
struct_construct<Tuple<felt252>>([30]) -> ([31]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([6]) -> ([33]);
store_temp<GasBuiltin>([22]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([23]) -> ([36]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([6]) -> ([39]);
store_temp<GasBuiltin>([22]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([23]) -> ([42]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<Pedersen>([2]) -> ([10]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([4]) -> ([11]);
store_temp<felt252>([5]) -> ([12]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::address>([9], [10], [11], [12]) -> ([6], [7], [8]);
u32_const<0>() -> ([13]);
store_temp<RangeCheck>([6]) -> ([18]);
store_temp<GasBuiltin>([1]) -> ([19]);
store_temp<System>([3]) -> ([20]);
store_temp<u32>([13]) -> ([21]);
store_temp<StorageBaseAddress>([8]) -> ([22]);
function_call<user@helloERC20::pledge::StorePledgeInfo::read>([18], [19], [20], [21], [22]) -> ([14], [15], [16], [17]);
enum_match<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([17]) { fallthrough([23]) 6037([24]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([23]) -> ([25]);
store_temp<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>([25]) -> ([27]);
function_call<user@core::starknet::SyscallResultTraitImpl::<helloERC20::pledge::PledgeInfo>::unwrap_syscall>([27]) -> ([26]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([26]) { fallthrough([28]) 6029([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([28]) -> ([30]);
struct_construct<Tuple<helloERC20::pledge::PledgeInfo>>([30]) -> ([31]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0>([31]) -> ([32]);
store_temp<RangeCheck>([14]) -> ([33]);
store_temp<GasBuiltin>([15]) -> ([34]);
store_temp<Pedersen>([7]) -> ([35]);
store_temp<System>([16]) -> ([36]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([32]) -> ([37]);
return([33], [34], [35], [36], [37]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([29]) -> ([38]);
store_temp<RangeCheck>([14]) -> ([39]);
store_temp<GasBuiltin>([15]) -> ([40]);
store_temp<Pedersen>([7]) -> ([41]);
store_temp<System>([16]) -> ([42]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([38]) -> ([43]);
return([39], [40], [41], [42], [43]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([24]) -> ([44]);
store_temp<RangeCheck>([14]) -> ([45]);
store_temp<GasBuiltin>([15]) -> ([46]);
store_temp<Pedersen>([7]) -> ([47]);
store_temp<System>([16]) -> ([48]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([44]) -> ([49]);
return([45], [46], [47], [48], [49]);
rename<u64>([0]) -> ([2]);
u64_to_felt252([2]) -> ([3]);
snapshot_take<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
u64_overflowing_sub([0], [1], [2]) { fallthrough([3], [4]) 6063([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u64, core::integer::u64>>([7]) -> ([9]);
jump() { 6067() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u64, core::integer::u64>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u64, core::integer::u64>>([10]) -> ([9]);
felt252_const<155801121784903550401946791117314617207>() -> ([11]);
rename<core::result::Result::<core::integer::u64, core::integer::u64>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u64, core::integer::u64>::expect::<core::integer::u64Drop>>([13], [14]) -> ([12]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([12]) { fallthrough([15]) 6079([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([15]) -> ([17]);
struct_construct<Tuple<u64>>([17]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([22]) -> ([24]);
return([23], [24]);
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([3]) -> ();
storage_base_address_const<1433302525446439797702011312477458480455837347679684781656504359856313966763>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::integer::Storeu256::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 6115([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([20]) 6108([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([20]) -> ([22]);
struct_construct<Tuple<core::integer::u256>>([22]) -> ([23]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
store_temp<helloERC20::pledge::pledge::withdraw>([3]) -> ([5]);
function_call<user@helloERC20::pledge::pledge::EventwithdrawIntoEvent::into>([5]) -> ([4]);
array_new<felt252>() -> ([6]);
array_new<felt252>() -> ([7]);
snapshot_take<helloERC20::pledge::pledge::Event>([4]) -> ([8], [9]);
drop<helloERC20::pledge::pledge::Event>([8]) -> ();
store_temp<helloERC20::pledge::pledge::Event>([9]) -> ([13]);
store_temp<Array<felt252>>([6]) -> ([14]);
store_temp<Array<felt252>>([7]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::EventIsEvent::append_keys_and_data>([13], [14], [15]) -> ([10], [11], [12]);
drop<Unit>([12]) -> ();
snapshot_take<Array<felt252>>([10]) -> ([16], [17]);
drop<Array<felt252>>([16]) -> ();
struct_construct<core::array::Span::<core::felt252>>([17]) -> ([18]);
snapshot_take<Array<felt252>>([11]) -> ([19], [20]);
drop<Array<felt252>>([19]) -> ();
struct_construct<core::array::Span::<core::felt252>>([20]) -> ([21]);
store_temp<core::array::Span::<core::felt252>>([18]) -> ([18]);
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]);
emit_event_syscall([0], [1], [18], [21]) { fallthrough([22], [23]) 6149([24], [25], [26]) };
branch_align() -> ();
struct_construct<Unit>() -> ([27]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([27]) -> ([28]);
store_temp<GasBuiltin>([22]) -> ([29]);
store_temp<System>([23]) -> ([30]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([28]) -> ([31]);
jump() { 6154() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([26]) -> ([32]);
store_temp<GasBuiltin>([24]) -> ([29]);
store_temp<System>([25]) -> ([30]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([32]) -> ([31]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([31]) -> ([34]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([34]) -> ([33]);
enum_match<core::panics::PanicResult::<((),)>>([33]) { fallthrough([35]) 6165([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([35]) -> ([37]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([2], [37]) -> ([38]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 0>([38]) -> ([39]);
store_temp<GasBuiltin>([29]) -> ([40]);
store_temp<System>([30]) -> ([41]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([39]) -> ([42]);
return([40], [41], [42]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::ContractState>([2]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([36]) -> ([43]);
store_temp<GasBuiltin>([29]) -> ([44]);
store_temp<System>([30]) -> ([45]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([43]) -> ([46]);
return([44], [45], [46]);
struct_deconstruct<helloERC20::pledge::pledge::ContractState>([4]) -> ([6], [7], [8], [9], [10], [11], [12], [13], [14]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([13]) -> ([15], [16]);
store_temp<RangeCheck>([0]) -> ([22]);
store_temp<GasBuiltin>([1]) -> ([23]);
store_temp<Pedersen>([2]) -> ([24]);
store_temp<System>([3]) -> ([25]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([16]) -> ([26]);
store_temp<ContractAddress>([5]) -> ([27]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read>([22], [23], [24], [25], [26], [27]) -> ([17], [18], [19], [20], [21]);
enum_match<core::panics::PanicResult::<(core::felt252,)>>([21]) { fallthrough([28]) 6427([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<felt252>>([28]) -> ([30]);
snapshot_take<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ([31], [32]);
store_temp<RangeCheck>([17]) -> ([38]);
store_temp<GasBuiltin>([18]) -> ([39]);
store_temp<Pedersen>([19]) -> ([40]);
store_temp<System>([20]) -> ([41]);
store_temp<helloERC20::pledge::pledge::pledge_account_info::ContractState>([32]) -> ([42]);
store_temp<felt252>([30]) -> ([43]);
function_call<user@helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read>([38], [39], [40], [41], [42], [43]) -> ([33], [34], [35], [36], [37]);
enum_match<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([37]) { fallthrough([44]) 6410([45]) };
branch_align() -> ();
struct_deconstruct<Tuple<helloERC20::pledge::PledgeInfo>>([44]) -> ([46]);
store_temp<GasBuiltin>([34]) -> ([50]);
store_temp<System>([36]) -> ([51]);
function_call<user@core::starknet::info::get_block_timestamp>([50], [51]) -> ([47], [48], [49]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([49]) { fallthrough([52]) 6392([53]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([52]) -> ([54]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([46]) -> ([55], [56], [57], [58], [59], [60]);
drop<core::bool>([58]) -> ();
drop<core::integer::u256>([59]) -> ();
drop<core::integer::u256>([60]) -> ();
store_temp<RangeCheck>([33]) -> ([63]);
dup<u64>([54]) -> ([54], [64]);
store_temp<u64>([64]) -> ([64]);
dup<u64>([55]) -> ([55], [65]);
store_temp<u64>([65]) -> ([65]);
function_call<user@core::integer::U64Sub::sub>([63], [64], [65]) -> ([61], [62]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([62]) { fallthrough([66]) 6371([67]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([66]) -> ([68]);
dup<u64>([57]) -> ([57], [69]);
u64_overflowing_sub([61], [69], [68]) { fallthrough([70], [71]) 6247([72], [73]) };
branch_align() -> ();
drop<u64>([71]) -> ();
drop<u64>([57]) -> ();
store_temp<RangeCheck>([70]) -> ([76]);
store_temp<u64>([54]) -> ([77]);
store_temp<u64>([55]) -> ([78]);
function_call<user@core::integer::U64Sub::sub>([76], [77], [78]) -> ([74], [75]);
enum_match<core::panics::PanicResult::<(core::integer::u64,)>>([75]) { fallthrough([79]) 6229([80]) };
branch_align() -> ();
struct_deconstruct<Tuple<u64>>([79]) -> ([81]);
store_temp<RangeCheck>([74]) -> ([82]);
store_temp<u64>([81]) -> ([83]);
jump() { 6253() };
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([80]) -> ([84]);
store_temp<RangeCheck>([74]) -> ([85]);
store_temp<GasBuiltin>([47]) -> ([86]);
store_temp<Pedersen>([35]) -> ([87]);
store_temp<System>([48]) -> ([88]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([84]) -> ([89]);
return([85], [86], [87], [88], [89]);
branch_align() -> ();
drop<u64>([73]) -> ();
drop<u64>([55]) -> ();
drop<u64>([54]) -> ();
store_temp<RangeCheck>([72]) -> ([82]);
store_temp<u64>([57]) -> ([83]);
snapshot_take<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ([90], [91]);
store_temp<RangeCheck>([82]) -> ([96]);
store_temp<GasBuiltin>([47]) -> ([97]);
store_temp<System>([48]) -> ([98]);
store_temp<helloERC20::pledge::pledge::pledge_rate::ContractState>([91]) -> ([99]);
function_call<user@helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::read>([96], [97], [98], [99]) -> ([92], [93], [94], [95]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([95]) { fallthrough([100]) 6352([101]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([100]) -> ([102]);
store_temp<u8>([102]) -> ([104]);
function_call<user@core::integer::U8IntoU256::into>([104]) -> ([103]);
store_temp<RangeCheck>([92]) -> ([107]);
store_temp<core::integer::u256>([56]) -> ([108]);
store_temp<core::integer::u256>([103]) -> ([109]);
function_call<user@core::integer::U256Mul::mul>([107], [108], [109]) -> ([105], [106]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([106]) { fallthrough([110]) 6334([111]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([110]) -> ([112]);
store_temp<u64>([83]) -> ([114]);
function_call<user@core::integer::U64IntoU256::into>([114]) -> ([113]);
store_temp<RangeCheck>([105]) -> ([117]);
store_temp<core::integer::u256>([112]) -> ([118]);
store_temp<core::integer::u256>([113]) -> ([119]);
function_call<user@core::integer::U256Mul::mul>([117], [118], [119]) -> ([115], [116]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([116]) { fallthrough([120]) 6317([121]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([120]) -> ([122]);
u128_const<100>() -> ([123]);
u128_const<0>() -> ([124]);
struct_construct<core::integer::u256>([123], [124]) -> ([125]);
store_temp<RangeCheck>([115]) -> ([128]);
store_temp<core::integer::u256>([122]) -> ([129]);
store_temp<core::integer::u256>([125]) -> ([130]);
function_call<user@core::integer::U256Div::div>([128], [129], [130]) -> ([126], [127]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([127]) { fallthrough([131]) 6300([132]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([131]) -> ([133]);
struct_construct<Tuple<core::integer::u256>>([133]) -> ([134]);
struct_construct<helloERC20::pledge::pledge::ContractState>([6], [7], [8], [9], [90], [11], [12], [15], [31]) -> ([135]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Tuple<core::integer::u256>>>([135], [134]) -> ([136]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 0>([136]) -> ([137]);
store_temp<RangeCheck>([126]) -> ([138]);
store_temp<GasBuiltin>([93]) -> ([139]);
store_temp<Pedersen>([35]) -> ([140]);
store_temp<System>([94]) -> ([141]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([137]) -> ([142]);
return([138], [139], [140], [141], [142]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([90]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([132]) -> ([143]);
store_temp<RangeCheck>([126]) -> ([144]);
store_temp<GasBuiltin>([93]) -> ([145]);
store_temp<Pedersen>([35]) -> ([146]);
store_temp<System>([94]) -> ([147]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([143]) -> ([148]);
return([144], [145], [146], [147], [148]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([90]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([121]) -> ([149]);
store_temp<RangeCheck>([115]) -> ([150]);
store_temp<GasBuiltin>([93]) -> ([151]);
store_temp<Pedersen>([35]) -> ([152]);
store_temp<System>([94]) -> ([153]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([149]) -> ([154]);
return([150], [151], [152], [153], [154]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([90]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<u64>([83]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([111]) -> ([155]);
store_temp<RangeCheck>([105]) -> ([156]);
store_temp<GasBuiltin>([93]) -> ([157]);
store_temp<Pedersen>([35]) -> ([158]);
store_temp<System>([94]) -> ([159]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([155]) -> ([160]);
return([156], [157], [158], [159], [160]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([90]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<u64>([83]) -> ();
drop<core::integer::u256>([56]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([101]) -> ([161]);
store_temp<RangeCheck>([92]) -> ([162]);
store_temp<GasBuiltin>([93]) -> ([163]);
store_temp<Pedersen>([35]) -> ([164]);
store_temp<System>([94]) -> ([165]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([161]) -> ([166]);
return([162], [163], [164], [165], [166]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<core::integer::u256>([56]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<u64>([55]) -> ();
drop<u64>([54]) -> ();
drop<u64>([57]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([67]) -> ([167]);
store_temp<RangeCheck>([61]) -> ([168]);
store_temp<GasBuiltin>([47]) -> ([169]);
store_temp<Pedersen>([35]) -> ([170]);
store_temp<System>([48]) -> ([171]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([167]) -> ([172]);
return([168], [169], [170], [171], [172]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::PledgeInfo>([46]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([53]) -> ([173]);
store_temp<RangeCheck>([33]) -> ([174]);
store_temp<GasBuiltin>([47]) -> ([175]);
store_temp<Pedersen>([35]) -> ([176]);
store_temp<System>([48]) -> ([177]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([173]) -> ([178]);
return([174], [175], [176], [177], [178]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([31]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([45]) -> ([179]);
store_temp<RangeCheck>([33]) -> ([180]);
store_temp<GasBuiltin>([34]) -> ([181]);
store_temp<Pedersen>([35]) -> ([182]);
store_temp<System>([36]) -> ([183]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([179]) -> ([184]);
return([180], [181], [182], [183], [184]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::total_supply::ContractState>([7]) -> ();
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([10]) -> ();
drop<helloERC20::pledge::pledge::total_pledge::ContractState>([8]) -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([9]) -> ();
drop<helloERC20::pledge::pledge::_owner::ContractState>([6]) -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([15]) -> ();
drop<helloERC20::pledge::pledge::token_account::ContractState>([12]) -> ();
drop<helloERC20::pledge::pledge::white_list::ContractState>([11]) -> ();
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([14]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>, 1>([29]) -> ([185]);
store_temp<RangeCheck>([17]) -> ([186]);
store_temp<GasBuiltin>([18]) -> ([187]);
store_temp<Pedersen>([19]) -> ([188]);
store_temp<System>([20]) -> ([189]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>>([185]) -> ([190]);
return([186], [187], [188], [189], [190]);
rename<u128>([0]) -> ([2]);
rename<u128>([1]) -> ([3]);
rename<u128>([2]) -> ([4]);
rename<u128>([3]) -> ([5]);
u128_eq([4], [5]) { fallthrough() 6454() };
branch_align() -> ();
struct_construct<Unit>() -> ([6]);
enum_init<core::bool, 0>([6]) -> ([7]);
store_temp<core::bool>([7]) -> ([8]);
jump() { 6458() };
branch_align() -> ();
struct_construct<Unit>() -> ([9]);
enum_init<core::bool, 1>([9]) -> ([10]);
store_temp<core::bool>([10]) -> ([8]);
rename<core::bool>([8]) -> ([11]);
return([11]);
snapshot_take<helloERC20::pledge::pledge::burn_total::ContractState>([2]) -> ([4], [5]);
drop<helloERC20::pledge::pledge::burn_total::ContractState>([5]) -> ();
storage_base_address_const<1187528534665472701443279386340266278774128137705391415532368511102981540802>() -> ([6]);
u32_const<0>() -> ([7]);
store_temp<GasBuiltin>([0]) -> ([11]);
store_temp<System>([1]) -> ([12]);
store_temp<u32>([7]) -> ([13]);
store_temp<StorageBaseAddress>([6]) -> ([14]);
store_temp<core::integer::u256>([3]) -> ([15]);
function_call<user@core::integer::Storeu256::write>([11], [12], [13], [14], [15]) -> ([8], [9], [10]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([10]) -> ([17]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([17]) -> ([16]);
enum_match<core::panics::PanicResult::<((),)>>([16]) { fallthrough([18]) 6481([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([18]) -> ([20]);
struct_construct<Tuple<helloERC20::pledge::pledge::burn_total::ContractState, Unit>>([4], [20]) -> ([21]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 0>([21]) -> ([22]);
store_temp<GasBuiltin>([8]) -> ([23]);
store_temp<System>([9]) -> ([24]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>>([22]) -> ([25]);
return([23], [24], [25]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::burn_total::ContractState>([4]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>, 1>([19]) -> ([26]);
store_temp<GasBuiltin>([8]) -> ([27]);
store_temp<System>([9]) -> ([28]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>>([26]) -> ([29]);
return([27], [28], [29]);
snapshot_take<helloERC20::pledge::pledge::pledge_account::ContractState>([4]) -> ([7], [8]);
store_temp<RangeCheck>([0]) -> ([12]);
store_temp<Pedersen>([2]) -> ([13]);
store_temp<helloERC20::pledge::pledge::pledge_account::ContractState>([8]) -> ([14]);
store_temp<ContractAddress>([5]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::address>([12], [13], [14], [15]) -> ([9], [10], [11]);
storage_address_from_base([11]) -> ([16]);
u32_const<0>() -> ([17]);
store_temp<u32>([17]) -> ([17]);
storage_write_syscall([1], [3], [17], [16], [6]) { fallthrough([18], [19]) 6505([20], [21], [22]) };
branch_align() -> ();
struct_construct<Unit>() -> ([23]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([23]) -> ([24]);
store_temp<GasBuiltin>([18]) -> ([25]);
store_temp<System>([19]) -> ([26]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([24]) -> ([27]);
jump() { 6510() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([22]) -> ([28]);
store_temp<GasBuiltin>([20]) -> ([25]);
store_temp<System>([21]) -> ([26]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([28]) -> ([27]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([27]) -> ([30]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([30]) -> ([29]);
enum_match<core::panics::PanicResult::<((),)>>([29]) { fallthrough([31]) 6523([32]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([31]) -> ([33]);
struct_construct<Tuple<helloERC20::pledge::pledge::pledge_account::ContractState, Unit>>([7], [33]) -> ([34]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 0>([34]) -> ([35]);
store_temp<RangeCheck>([9]) -> ([36]);
store_temp<GasBuiltin>([25]) -> ([37]);
store_temp<Pedersen>([10]) -> ([38]);
store_temp<System>([26]) -> ([39]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([35]) -> ([40]);
return([36], [37], [38], [39], [40]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([7]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>, 1>([32]) -> ([41]);
store_temp<RangeCheck>([9]) -> ([42]);
store_temp<GasBuiltin>([25]) -> ([43]);
store_temp<Pedersen>([10]) -> ([44]);
store_temp<System>([26]) -> ([45]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>>([41]) -> ([46]);
return([42], [43], [44], [45], [46]);
store_temp<helloERC20::pledge::pledge::TransferStarking>([3]) -> ([5]);
function_call<user@helloERC20::pledge::pledge::EventTransferStarkingIntoEvent::into>([5]) -> ([4]);
array_new<felt252>() -> ([6]);
array_new<felt252>() -> ([7]);
snapshot_take<helloERC20::pledge::pledge::Event>([4]) -> ([8], [9]);
drop<helloERC20::pledge::pledge::Event>([8]) -> ();
store_temp<helloERC20::pledge::pledge::Event>([9]) -> ([13]);
store_temp<Array<felt252>>([6]) -> ([14]);
store_temp<Array<felt252>>([7]) -> ([15]);
function_call<user@helloERC20::pledge::pledge::EventIsEvent::append_keys_and_data>([13], [14], [15]) -> ([10], [11], [12]);
drop<Unit>([12]) -> ();
snapshot_take<Array<felt252>>([10]) -> ([16], [17]);
drop<Array<felt252>>([16]) -> ();
struct_construct<core::array::Span::<core::felt252>>([17]) -> ([18]);
snapshot_take<Array<felt252>>([11]) -> ([19], [20]);
drop<Array<felt252>>([19]) -> ();
struct_construct<core::array::Span::<core::felt252>>([20]) -> ([21]);
store_temp<core::array::Span::<core::felt252>>([18]) -> ([18]);
store_temp<core::array::Span::<core::felt252>>([21]) -> ([21]);
emit_event_syscall([0], [1], [18], [21]) { fallthrough([22], [23]) 6559([24], [25], [26]) };
branch_align() -> ();
struct_construct<Unit>() -> ([27]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([27]) -> ([28]);
store_temp<GasBuiltin>([22]) -> ([29]);
store_temp<System>([23]) -> ([30]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([28]) -> ([31]);
jump() { 6564() };
branch_align() -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([26]) -> ([32]);
store_temp<GasBuiltin>([24]) -> ([29]);
store_temp<System>([25]) -> ([30]);
store_temp<core::result::Result::<(), core::array::Array::<core::felt252>>>([32]) -> ([31]);
rename<core::result::Result::<(), core::array::Array::<core::felt252>>>([31]) -> ([34]);
function_call<user@core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall>([34]) -> ([33]);
enum_match<core::panics::PanicResult::<((),)>>([33]) { fallthrough([35]) 6575([36]) };
branch_align() -> ();
struct_deconstruct<Tuple<Unit>>([35]) -> ([37]);
struct_construct<Tuple<helloERC20::pledge::pledge::ContractState, Unit>>([2], [37]) -> ([38]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 0>([38]) -> ([39]);
store_temp<GasBuiltin>([29]) -> ([40]);
store_temp<System>([30]) -> ([41]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([39]) -> ([42]);
return([40], [41], [42]);
branch_align() -> ();
drop<helloERC20::pledge::pledge::ContractState>([2]) -> ();
enum_init<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>, 1>([36]) -> ([43]);
store_temp<GasBuiltin>([29]) -> ([44]);
store_temp<System>([30]) -> ([45]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>>([43]) -> ([46]);
return([44], [45], [46]);
drop<helloERC20::pledge::pledge::burn_total::ContractState>([3]) -> ();
storage_base_address_const<1187528534665472701443279386340266278774128137705391415532368511102981540802>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::integer::Storeu256::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 6613([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::panics::PanicResult::<(core::integer::u256,)>>([18]) { fallthrough([20]) 6606([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::integer::u256>>([20]) -> ([22]);
struct_construct<Tuple<core::integer::u256>>([22]) -> ([23]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
contract_address_to_felt252([2]) -> ([3]);
pedersen([0], [1], [3]) -> ([4], [5]);
store_temp<Pedersen>([4]) -> ([6]);
store_temp<felt252>([5]) -> ([7]);
return([6], [7]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([2]) -> ([11]);
dup<u32>([3]) -> ([3], [12]);
store_temp<u32>([12]) -> ([12]);
dup<StorageBaseAddress>([4]) -> ([4], [13]);
store_temp<StorageBaseAddress>([13]) -> ([13]);
function_call<user@core::starknet::storage_access::StoreU128::read>([9], [10], [11], [12], [13]) -> ([5], [6], [7], [8]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([8]) { fallthrough([14]) 6695([15]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([14]) -> ([16]);
enum_match<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 6684([18]) };
branch_align() -> ();
u8_const<1>() -> ([19]);
storage_address_from_base_and_offset([4], [19]) -> ([20]);
store_temp<StorageAddress>([20]) -> ([20]);
storage_read_syscall([6], [7], [3], [20]) { fallthrough([21], [22], [23]) 6674([24], [25], [26]) };
branch_align() -> ();
store_temp<RangeCheck>([5]) -> ([29]);
store_temp<felt252>([23]) -> ([30]);
function_call<user@core::integer::u128_try_from_felt252>([29], [30]) -> ([27], [28]);
store_temp<GasBuiltin>([21]) -> ([21]);
store_temp<System>([22]) -> ([22]);
enum_match<core::option::Option::<core::integer::u128>>([28]) { fallthrough([31]) 6659([32]) };
branch_align() -> ();
struct_construct<core::integer::u256>([17], [31]) -> ([33]);
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>([33]) -> ([34]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([34]) -> ([35]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([35]) -> ([36]);
store_temp<RangeCheck>([27]) -> ([37]);
store_temp<GasBuiltin>([21]) -> ([38]);
store_temp<System>([22]) -> ([39]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([36]) -> ([40]);
return([37], [38], [39], [40]);
branch_align() -> ();
drop<Unit>([32]) -> ();
drop<u128>([17]) -> ();
array_new<felt252>() -> ([41]);
felt252_const<476442828812030857794232422692155113556837216824>() -> ([42]);
store_temp<felt252>([42]) -> ([42]);
array_append<felt252>([41], [42]) -> ([43]);
struct_construct<core::panics::Panic>() -> ([44]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([44], [43]) -> ([45]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([45]) -> ([46]);
store_temp<RangeCheck>([27]) -> ([47]);
store_temp<GasBuiltin>([21]) -> ([48]);
store_temp<System>([22]) -> ([49]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([46]) -> ([50]);
return([47], [48], [49], [50]);
branch_align() -> ();
drop<u128>([17]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([26]) -> ([51]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([51]) -> ([52]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([52]) -> ([53]);
store_temp<RangeCheck>([5]) -> ([54]);
store_temp<GasBuiltin>([24]) -> ([55]);
store_temp<System>([25]) -> ([56]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([53]) -> ([57]);
return([54], [55], [56], [57]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([18]) -> ([58]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([58]) -> ([59]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([59]) -> ([60]);
store_temp<RangeCheck>([5]) -> ([61]);
store_temp<GasBuiltin>([6]) -> ([62]);
store_temp<System>([7]) -> ([63]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([60]) -> ([64]);
return([61], [62], [63], [64]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([15]) -> ([65]);
store_temp<RangeCheck>([5]) -> ([66]);
store_temp<GasBuiltin>([6]) -> ([67]);
store_temp<System>([7]) -> ([68]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([65]) -> ([69]);
return([66], [67], [68], [69]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 6710([2]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([8]) -> ([9]);
return([9]);
u128s_from_felt252([0], [1]) { fallthrough([2], [3]) 6722([4], [5], [6]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([3]) -> ([7]);
store_temp<RangeCheck>([2]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([7]) -> ([9]);
jump() { 6729() };
branch_align() -> ();
struct_construct<Tuple<u128, u128>>([5], [6]) -> ([10]);
drop<Tuple<u128, u128>>([10]) -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::option::Option::<core::integer::u128>, 1>([11]) -> ([12]);
store_temp<RangeCheck>([4]) -> ([8]);
store_temp<core::option::Option::<core::integer::u128>>([12]) -> ([9]);
rename<RangeCheck>([8]) -> ([13]);
rename<core::option::Option::<core::integer::u128>>([9]) -> ([14]);
return([13], [14]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 6764([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::starknet::contract_address::Felt252TryIntoContractAddress::try_into>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::starknet::contract_address::ContractAddress>>([13]) { fallthrough([16]) 6750([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<1749165063169615148890104124711417950509560691>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::panics::Panic>() -> ([28]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
enum_match<core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 6779([2]) };
branch_align() -> ();
struct_construct<Tuple<ContractAddress>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>>([8]) -> ([9]);
return([9]);
get_execution_info_syscall([0], [1]) { fallthrough([2], [3], [4]) 6792([5], [6], [7]) };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 0>([4]) -> ([8]);
store_temp<GasBuiltin>([2]) -> ([9]);
store_temp<System>([3]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([8]) -> ([11]);
jump() { 6797() };
branch_align() -> ();
enum_init<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>, 1>([7]) -> ([12]);
store_temp<GasBuiltin>([5]) -> ([9]);
store_temp<System>([6]) -> ([10]);
store_temp<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([12]) -> ([11]);
rename<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([11]) -> ([14]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall>([14]) -> ([13]);
enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([13]) { fallthrough([15]) 6808([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([15]) -> ([17]);
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([17]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([18]) -> ([19]);
store_temp<GasBuiltin>([9]) -> ([20]);
store_temp<System>([10]) -> ([21]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([19]) -> ([22]);
return([20], [21], [22]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([16]) -> ([23]);
store_temp<GasBuiltin>([9]) -> ([24]);
store_temp<System>([10]) -> ([25]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([23]) -> ([26]);
return([24], [25], [26]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflowing_add>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 6825([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 6831() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
drop<helloERC20::pledge::pledge::white_list::ContractState>([2]) -> ();
felt252_const<729732171056852642065987245110631983301118641176708614513949583127176339039>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflow_sub>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 6856([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 6862() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
store_temp<GasBuiltin>([0]) -> ([5]);
store_temp<System>([1]) -> ([6]);
function_call<user@core::starknet::info::get_execution_info>([5], [6]) -> ([2], [3], [4]);
enum_match<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) { fallthrough([7]) 6883([8]) };
branch_align() -> ();
struct_deconstruct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([7]) -> ([9]);
unbox<core::starknet::info::ExecutionInfo>([9]) -> ([10]);
struct_deconstruct<core::starknet::info::ExecutionInfo>([10]) -> ([11], [12], [13], [14], [15]);
drop<Box<core::starknet::info::TxInfo>>([12]) -> ();
drop<ContractAddress>([13]) -> ();
drop<ContractAddress>([14]) -> ();
drop<felt252>([15]) -> ();
struct_construct<Tuple<Box<core::starknet::info::BlockInfo>>>([11]) -> ([16]);
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 0>([16]) -> ([17]);
store_temp<GasBuiltin>([2]) -> ([18]);
store_temp<System>([3]) -> ([19]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>>([17]) -> ([20]);
return([18], [19], [20]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>, 1>([8]) -> ([21]);
store_temp<GasBuiltin>([2]) -> ([22]);
store_temp<System>([3]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>>([21]) -> ([24]);
return([22], [23], [24]);
drop<helloERC20::pledge::pledge::pledge_account_info::ContractState>([2]) -> ();
felt252_const<1231892093637293665562276867474173313656097788873767120510576915177986872878>() -> ([4]);
store_temp<felt252>([4]) -> ([4]);
pedersen([1], [4], [3]) -> ([5], [6]);
store_temp<felt252>([6]) -> ([6]);
storage_base_address_from_felt252([0], [6]) -> ([7], [8]);
store_temp<RangeCheck>([7]) -> ([9]);
store_temp<Pedersen>([5]) -> ([10]);
store_temp<StorageBaseAddress>([8]) -> ([11]);
return([9], [10], [11]);
struct_deconstruct<helloERC20::pledge::PledgeInfo>([5]) -> ([6], [7], [8], [9], [10], [11]);
u64_to_felt252([6]) -> ([12]);
dup<StorageBaseAddress>([4]) -> ([4], [14]);
storage_address_from_base([14]) -> ([13]);
dup<u32>([3]) -> ([3], [15]);
storage_write_syscall([1], [2], [15], [13], [12]) { fallthrough([16], [17]) 7298([18], [19], [20]) };
branch_align() -> ();
struct_deconstruct<core::integer::u256>([7]) -> ([21], [22]);
u128_to_felt252([21]) -> ([23]);
u8_const<1>() -> ([24]);
dup<StorageBaseAddress>([4]) -> ([4], [26]);
dup<u8>([24]) -> ([24], [27]);
storage_address_from_base_and_offset([26], [27]) -> ([25]);
dup<u32>([3]) -> ([3], [28]);
store_temp<GasBuiltin>([16]) -> ([16]);
store_temp<StorageAddress>([25]) -> ([25]);
storage_write_syscall([16], [17], [28], [25], [23]) { fallthrough([29], [30]) 7277([31], [32], [33]) };
branch_align() -> ();
u8_const<1>() -> ([34]);
store_temp<RangeCheck>([0]) -> ([37]);
dup<u8>([24]) -> ([24], [38]);
store_temp<u8>([38]) -> ([38]);
store_temp<u8>([34]) -> ([39]);
function_call<user@core::integer::U8Add::add>([37], [38], [39]) -> ([35], [36]);
store_temp<GasBuiltin>([29]) -> ([29]);
store_temp<System>([30]) -> ([30]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([36]) { fallthrough([40]) 7262([41]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([40]) -> ([42]);
u128_to_felt252([22]) -> ([43]);
dup<StorageBaseAddress>([4]) -> ([4], [45]);
storage_address_from_base_and_offset([45], [42]) -> ([44]);
dup<u32>([3]) -> ([3], [46]);
store_temp<StorageAddress>([44]) -> ([44]);
storage_write_syscall([29], [30], [46], [44], [43]) { fallthrough([47], [48]) 7249([49], [50], [51]) };
branch_align() -> ();
u8_const<1>() -> ([52]);
u8_const<1>() -> ([53]);
store_temp<RangeCheck>([35]) -> ([56]);
store_temp<u8>([52]) -> ([57]);
store_temp<u8>([53]) -> ([58]);
function_call<user@core::integer::U8Add::add>([56], [57], [58]) -> ([54], [55]);
store_temp<GasBuiltin>([47]) -> ([47]);
store_temp<System>([48]) -> ([48]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([55]) { fallthrough([59]) 7235([60]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([59]) -> ([61]);
store_temp<RangeCheck>([54]) -> ([64]);
store_temp<u8>([24]) -> ([65]);
store_temp<u8>([61]) -> ([66]);
function_call<user@core::integer::U8Add::add>([64], [65], [66]) -> ([62], [63]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([63]) { fallthrough([67]) 7222([68]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([67]) -> ([69]);
u64_to_felt252([8]) -> ([70]);
dup<StorageBaseAddress>([4]) -> ([4], [72]);
dup<u8>([69]) -> ([69], [73]);
storage_address_from_base_and_offset([72], [73]) -> ([71]);
dup<u32>([3]) -> ([3], [74]);
store_temp<StorageAddress>([71]) -> ([71]);
storage_write_syscall([47], [48], [74], [71], [70]) { fallthrough([75], [76]) 7207([77], [78], [79]) };
branch_align() -> ();
u8_const<1>() -> ([80]);
store_temp<RangeCheck>([62]) -> ([83]);
store_temp<u8>([69]) -> ([84]);
store_temp<u8>([80]) -> ([85]);
function_call<user@core::integer::U8Add::add>([83], [84], [85]) -> ([81], [82]);
store_temp<GasBuiltin>([75]) -> ([75]);
store_temp<System>([76]) -> ([76]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([82]) { fallthrough([86]) 7195([87]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([86]) -> ([88]);
enum_match<core::bool>([9]) { fallthrough([89]) 6977([90]) };
branch_align() -> ();
drop<Unit>([89]) -> ();
felt252_const<0>() -> ([91]);
store_temp<felt252>([91]) -> ([92]);
jump() { 6981() };
branch_align() -> ();
drop<Unit>([90]) -> ();
felt252_const<1>() -> ([93]);
store_temp<felt252>([93]) -> ([92]);
dup<StorageBaseAddress>([4]) -> ([4], [95]);
dup<u8>([88]) -> ([88], [96]);
storage_address_from_base_and_offset([95], [96]) -> ([94]);
dup<u32>([3]) -> ([3], [97]);
store_temp<StorageAddress>([94]) -> ([94]);
storage_write_syscall([75], [76], [97], [94], [92]) { fallthrough([98], [99]) 7181([100], [101], [102]) };
branch_align() -> ();
u8_const<1>() -> ([103]);
store_temp<RangeCheck>([81]) -> ([106]);
store_temp<u8>([88]) -> ([107]);
store_temp<u8>([103]) -> ([108]);
function_call<user@core::integer::U8Add::add>([106], [107], [108]) -> ([104], [105]);
store_temp<GasBuiltin>([98]) -> ([98]);
store_temp<System>([99]) -> ([99]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([105]) { fallthrough([109]) 7170([110]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([109]) -> ([111]);
struct_deconstruct<core::integer::u256>([10]) -> ([112], [113]);
u128_to_felt252([112]) -> ([114]);
dup<StorageBaseAddress>([4]) -> ([4], [116]);
dup<u8>([111]) -> ([111], [117]);
storage_address_from_base_and_offset([116], [117]) -> ([115]);
dup<u32>([3]) -> ([3], [118]);
store_temp<StorageAddress>([115]) -> ([115]);
storage_write_syscall([98], [99], [118], [115], [114]) { fallthrough([119], [120]) 7152([121], [122], [123]) };
branch_align() -> ();
u8_const<1>() -> ([124]);
store_temp<RangeCheck>([104]) -> ([127]);
dup<u8>([111]) -> ([111], [128]);
store_temp<u8>([128]) -> ([128]);
store_temp<u8>([124]) -> ([129]);
function_call<user@core::integer::U8Add::add>([127], [128], [129]) -> ([125], [126]);
store_temp<GasBuiltin>([119]) -> ([119]);
store_temp<System>([120]) -> ([120]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([126]) { fallthrough([130]) 7140([131]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([130]) -> ([132]);
u128_to_felt252([113]) -> ([133]);
dup<StorageBaseAddress>([4]) -> ([4], [135]);
storage_address_from_base_and_offset([135], [132]) -> ([134]);
dup<u32>([3]) -> ([3], [136]);
store_temp<StorageAddress>([134]) -> ([134]);
storage_write_syscall([119], [120], [136], [134], [133]) { fallthrough([137], [138]) 7130([139], [140], [141]) };
branch_align() -> ();
u8_const<1>() -> ([142]);
u8_const<1>() -> ([143]);
store_temp<RangeCheck>([125]) -> ([146]);
store_temp<u8>([142]) -> ([147]);
store_temp<u8>([143]) -> ([148]);
function_call<user@core::integer::U8Add::add>([146], [147], [148]) -> ([144], [145]);
store_temp<GasBuiltin>([137]) -> ([137]);
store_temp<System>([138]) -> ([138]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([145]) { fallthrough([149]) 7119([150]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([149]) -> ([151]);
store_temp<RangeCheck>([144]) -> ([154]);
store_temp<u8>([111]) -> ([155]);
store_temp<u8>([151]) -> ([156]);
function_call<user@core::integer::U8Add::add>([154], [155], [156]) -> ([152], [153]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([153]) { fallthrough([157]) 7109([158]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([157]) -> ([159]);
struct_deconstruct<core::integer::u256>([11]) -> ([160], [161]);
u128_to_felt252([160]) -> ([162]);
dup<StorageBaseAddress>([4]) -> ([4], [164]);
dup<u8>([159]) -> ([159], [165]);
storage_address_from_base_and_offset([164], [165]) -> ([163]);
dup<u32>([3]) -> ([3], [166]);
store_temp<StorageAddress>([163]) -> ([163]);
storage_write_syscall([137], [138], [166], [163], [162]) { fallthrough([167], [168]) 7092([169], [170], [171]) };
branch_align() -> ();
u8_const<1>() -> ([172]);
store_temp<RangeCheck>([152]) -> ([175]);
store_temp<u8>([159]) -> ([176]);
store_temp<u8>([172]) -> ([177]);
function_call<user@core::integer::U8Add::add>([175], [176], [177]) -> ([173], [174]);
store_temp<GasBuiltin>([167]) -> ([167]);
store_temp<System>([168]) -> ([168]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([174]) { fallthrough([178]) 7082([179]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([178]) -> ([180]);
u128_to_felt252([161]) -> ([181]);
storage_address_from_base_and_offset([4], [180]) -> ([182]);
store_temp<StorageAddress>([182]) -> ([182]);
storage_write_syscall([167], [168], [3], [182], [181]) { fallthrough([183], [184]) 7076([185], [186], [187]) };
branch_align() -> ();
struct_construct<Unit>() -> ([188]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 0>([188]) -> ([189]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([189]) -> ([190]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([190]) -> ([191]);
store_temp<RangeCheck>([173]) -> ([192]);
store_temp<GasBuiltin>([183]) -> ([193]);
store_temp<System>([184]) -> ([194]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([191]) -> ([195]);
return([192], [193], [194], [195]);
branch_align() -> ();
store_temp<RangeCheck>([173]) -> ([196]);
store_temp<GasBuiltin>([185]) -> ([197]);
store_temp<System>([186]) -> ([198]);
store_temp<Array<felt252>>([187]) -> ([199]);
jump() { 7101() };
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u128>([161]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([179]) -> ([200]);
store_temp<RangeCheck>([173]) -> ([201]);
store_temp<GasBuiltin>([167]) -> ([202]);
store_temp<System>([168]) -> ([203]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([200]) -> ([204]);
return([201], [202], [203], [204]);
branch_align() -> ();
drop<u128>([161]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u8>([159]) -> ();
drop<u32>([3]) -> ();
store_temp<RangeCheck>([152]) -> ([196]);
store_temp<GasBuiltin>([169]) -> ([197]);
store_temp<System>([170]) -> ([198]);
store_temp<Array<felt252>>([171]) -> ([199]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([199]) -> ([205]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([205]) -> ([206]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([206]) -> ([207]);
store_temp<RangeCheck>([196]) -> ([208]);
store_temp<GasBuiltin>([197]) -> ([209]);
store_temp<System>([198]) -> ([210]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([207]) -> ([211]);
return([208], [209], [210], [211]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([158]) -> ([212]);
store_temp<RangeCheck>([152]) -> ([213]);
store_temp<GasBuiltin>([137]) -> ([214]);
store_temp<System>([138]) -> ([215]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([212]) -> ([216]);
return([213], [214], [215], [216]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<u8>([111]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([150]) -> ([217]);
store_temp<RangeCheck>([144]) -> ([218]);
store_temp<GasBuiltin>([137]) -> ([219]);
store_temp<System>([138]) -> ([220]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([217]) -> ([221]);
return([218], [219], [220], [221]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<u8>([111]) -> ();
store_temp<RangeCheck>([125]) -> ([222]);
store_temp<GasBuiltin>([139]) -> ([223]);
store_temp<System>([140]) -> ([224]);
store_temp<Array<felt252>>([141]) -> ([225]);
jump() { 7162() };
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<u8>([111]) -> ();
drop<u128>([113]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([131]) -> ([226]);
store_temp<RangeCheck>([125]) -> ([227]);
store_temp<GasBuiltin>([119]) -> ([228]);
store_temp<System>([120]) -> ([229]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([226]) -> ([230]);
return([227], [228], [229], [230]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<u8>([111]) -> ();
drop<u128>([113]) -> ();
store_temp<RangeCheck>([104]) -> ([222]);
store_temp<GasBuiltin>([121]) -> ([223]);
store_temp<System>([122]) -> ([224]);
store_temp<Array<felt252>>([123]) -> ([225]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([225]) -> ([231]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([231]) -> ([232]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([232]) -> ([233]);
store_temp<RangeCheck>([222]) -> ([234]);
store_temp<GasBuiltin>([223]) -> ([235]);
store_temp<System>([224]) -> ([236]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([233]) -> ([237]);
return([234], [235], [236], [237]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([110]) -> ([238]);
store_temp<RangeCheck>([104]) -> ([239]);
store_temp<GasBuiltin>([98]) -> ([240]);
store_temp<System>([99]) -> ([241]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([238]) -> ([242]);
return([239], [240], [241], [242]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<u8>([88]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([102]) -> ([243]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([243]) -> ([244]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([244]) -> ([245]);
store_temp<RangeCheck>([81]) -> ([246]);
store_temp<GasBuiltin>([100]) -> ([247]);
store_temp<System>([101]) -> ([248]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([245]) -> ([249]);
return([246], [247], [248], [249]);
branch_align() -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([87]) -> ([250]);
store_temp<RangeCheck>([81]) -> ([251]);
store_temp<GasBuiltin>([75]) -> ([252]);
store_temp<System>([76]) -> ([253]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([250]) -> ([254]);
return([251], [252], [253], [254]);
branch_align() -> ();
drop<u8>([69]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([79]) -> ([255]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([255]) -> ([256]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([256]) -> ([257]);
store_temp<RangeCheck>([62]) -> ([258]);
store_temp<GasBuiltin>([77]) -> ([259]);
store_temp<System>([78]) -> ([260]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([257]) -> ([261]);
return([258], [259], [260], [261]);
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([68]) -> ([262]);
store_temp<RangeCheck>([62]) -> ([263]);
store_temp<GasBuiltin>([47]) -> ([264]);
store_temp<System>([48]) -> ([265]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([262]) -> ([266]);
return([263], [264], [265], [266]);
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
drop<u8>([24]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([60]) -> ([267]);
store_temp<RangeCheck>([54]) -> ([268]);
store_temp<GasBuiltin>([47]) -> ([269]);
store_temp<System>([48]) -> ([270]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([267]) -> ([271]);
return([268], [269], [270], [271]);
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
drop<u8>([24]) -> ();
store_temp<RangeCheck>([35]) -> ([272]);
store_temp<GasBuiltin>([49]) -> ([273]);
store_temp<System>([50]) -> ([274]);
store_temp<Array<felt252>>([51]) -> ([275]);
jump() { 7290() };
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
drop<u8>([24]) -> ();
drop<u128>([22]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 1>([41]) -> ([276]);
store_temp<RangeCheck>([35]) -> ([277]);
store_temp<GasBuiltin>([29]) -> ([278]);
store_temp<System>([30]) -> ([279]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([276]) -> ([280]);
return([277], [278], [279], [280]);
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
drop<u8>([24]) -> ();
drop<u128>([22]) -> ();
store_temp<RangeCheck>([0]) -> ([272]);
store_temp<GasBuiltin>([31]) -> ([273]);
store_temp<System>([32]) -> ([274]);
store_temp<Array<felt252>>([33]) -> ([275]);
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([275]) -> ([281]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([281]) -> ([282]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([282]) -> ([283]);
store_temp<RangeCheck>([272]) -> ([284]);
store_temp<GasBuiltin>([273]) -> ([285]);
store_temp<System>([274]) -> ([286]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([283]) -> ([287]);
return([284], [285], [286], [287]);
branch_align() -> ();
drop<u64>([8]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<core::integer::u256>([11]) -> ();
drop<u32>([3]) -> ();
drop<core::integer::u256>([10]) -> ();
drop<core::bool>([9]) -> ();
drop<core::integer::u256>([7]) -> ();
enum_init<core::result::Result::<(), core::array::Array::<core::felt252>>, 1>([20]) -> ([288]);
struct_construct<Tuple<core::result::Result::<(), core::array::Array::<core::felt252>>>>([288]) -> ([289]);
enum_init<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>, 0>([289]) -> ([290]);
store_temp<RangeCheck>([0]) -> ([291]);
store_temp<GasBuiltin>([18]) -> ([292]);
store_temp<System>([19]) -> ([293]);
store_temp<core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>>([290]) -> ([294]);
return([291], [292], [293], [294]);
drop<helloERC20::pledge::pledge::pledge_account::ContractState>([2]) -> ();
felt252_const<903036675723925906389733342790309314037350705021858542876183213389614199236>() -> ([4]);
store_temp<Pedersen>([1]) -> ([7]);
store_temp<felt252>([4]) -> ([8]);
store_temp<ContractAddress>([3]) -> ([9]);
function_call<user@core::hash::LegacyHashContractAddress::hash>([7], [8], [9]) -> ([5], [6]);
storage_base_address_from_felt252([0], [6]) -> ([10], [11]);
store_temp<RangeCheck>([10]) -> ([12]);
store_temp<Pedersen>([5]) -> ([13]);
store_temp<StorageBaseAddress>([11]) -> ([14]);
return([12], [13], [14]);
enum_match<core::result::Result::<core::felt252, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 7331([2]) };
branch_align() -> ();
struct_construct<Tuple<felt252>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::felt252,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::felt252,)>>([8]) -> ([9]);
return([9]);
store_temp<RangeCheck>([0]) -> ([9]);
store_temp<GasBuiltin>([1]) -> ([10]);
store_temp<System>([2]) -> ([11]);
dup<u32>([3]) -> ([3], [12]);
store_temp<u32>([12]) -> ([12]);
dup<StorageBaseAddress>([4]) -> ([4], [13]);
store_temp<StorageBaseAddress>([13]) -> ([13]);
function_call<user@core::starknet::storage_access::StoreU64::read>([9], [10], [11], [12], [13]) -> ([5], [6], [7], [8]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>([8]) { fallthrough([14]) 7717([15]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>>([14]) -> ([16]);
enum_match<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>([16]) { fallthrough([17]) 7706([18]) };
branch_align() -> ();
u8_const<1>() -> ([19]);
store_temp<RangeCheck>([5]) -> ([24]);
store_temp<GasBuiltin>([6]) -> ([25]);
store_temp<System>([7]) -> ([26]);
dup<u32>([3]) -> ([3], [27]);
store_temp<u32>([27]) -> ([27]);
dup<StorageBaseAddress>([4]) -> ([4], [28]);
store_temp<StorageBaseAddress>([28]) -> ([28]);
dup<u8>([19]) -> ([19], [29]);
store_temp<u8>([29]) -> ([29]);
function_call<user@core::integer::Storeu256::read_at_offset>([24], [25], [26], [27], [28], [29]) -> ([20], [21], [22], [23]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([23]) { fallthrough([30]) 7695([31]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([30]) -> ([32]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([32]) { fallthrough([33]) 7682([34]) };
branch_align() -> ();
u8_const<1>() -> ([35]);
u8_const<1>() -> ([36]);
store_temp<RangeCheck>([20]) -> ([39]);
store_temp<u8>([35]) -> ([40]);
store_temp<u8>([36]) -> ([41]);
function_call<user@core::integer::U8Add::add>([39], [40], [41]) -> ([37], [38]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([38]) { fallthrough([42]) 7670([43]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([42]) -> ([44]);
store_temp<RangeCheck>([37]) -> ([47]);
store_temp<u8>([19]) -> ([48]);
store_temp<u8>([44]) -> ([49]);
function_call<user@core::integer::U8Add::add>([47], [48], [49]) -> ([45], [46]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([46]) { fallthrough([50]) 7659([51]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([50]) -> ([52]);
dup<StorageBaseAddress>([4]) -> ([4], [54]);
dup<u8>([52]) -> ([52], [55]);
storage_address_from_base_and_offset([54], [55]) -> ([53]);
dup<u32>([3]) -> ([3], [56]);
store_temp<StorageAddress>([53]) -> ([53]);
storage_read_syscall([21], [22], [56], [53]) { fallthrough([57], [58], [59]) 7645([60], [61], [62]) };
branch_align() -> ();
store_temp<RangeCheck>([45]) -> ([65]);
store_temp<felt252>([59]) -> ([66]);
function_call<user@core::integer::Felt252TryIntoU64::try_into>([65], [66]) -> ([63], [64]);
store_temp<GasBuiltin>([57]) -> ([57]);
store_temp<System>([58]) -> ([58]);
enum_match<core::option::Option::<core::integer::u64>>([64]) { fallthrough([67]) 7626([68]) };
branch_align() -> ();
u8_const<1>() -> ([69]);
store_temp<RangeCheck>([63]) -> ([72]);
store_temp<u8>([52]) -> ([73]);
store_temp<u8>([69]) -> ([74]);
function_call<user@core::integer::U8Add::add>([72], [73], [74]) -> ([70], [71]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([71]) { fallthrough([75]) 7614([76]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([75]) -> ([77]);
dup<StorageBaseAddress>([4]) -> ([4], [79]);
dup<u8>([77]) -> ([77], [80]);
storage_address_from_base_and_offset([79], [80]) -> ([78]);
dup<u32>([3]) -> ([3], [81]);
store_temp<StorageAddress>([78]) -> ([78]);
storage_read_syscall([57], [58], [81], [78]) { fallthrough([82], [83], [84]) 7599([85], [86], [87]) };
branch_align() -> ();
snapshot_take<felt252>([84]) -> ([88], [89]);
drop<felt252>([88]) -> ();
felt252_const<0>() -> ([90]);
snapshot_take<felt252>([90]) -> ([91], [92]);
drop<felt252>([91]) -> ();
rename<felt252>([89]) -> ([93]);
snapshot_take<felt252>([93]) -> ([94], [95]);
drop<felt252>([94]) -> ();
rename<felt252>([92]) -> ([96]);
snapshot_take<felt252>([96]) -> ([97], [98]);
drop<felt252>([97]) -> ();
rename<felt252>([95]) -> ([99]);
rename<felt252>([98]) -> ([100]);
store_temp<felt252>([99]) -> ([99]);
felt252_sub([99], [100]) -> ([101]);
store_temp<felt252>([101]) -> ([101]);
store_temp<GasBuiltin>([82]) -> ([82]);
store_temp<System>([83]) -> ([83]);
felt252_is_zero([101]) { fallthrough() 7435([102]) };
branch_align() -> ();
struct_construct<Unit>() -> ([103]);
enum_init<core::bool, 1>([103]) -> ([104]);
store_temp<core::bool>([104]) -> ([105]);
jump() { 7440() };
branch_align() -> ();
drop<NonZero<felt252>>([102]) -> ();
struct_construct<Unit>() -> ([106]);
enum_init<core::bool, 0>([106]) -> ([107]);
store_temp<core::bool>([107]) -> ([105]);
u8_const<1>() -> ([108]);
store_temp<RangeCheck>([70]) -> ([111]);
store_temp<u8>([77]) -> ([112]);
store_temp<u8>([108]) -> ([113]);
function_call<user@core::integer::U8Add::add>([111], [112], [113]) -> ([109], [110]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([110]) { fallthrough([114]) 7586([115]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([114]) -> ([116]);
store_temp<RangeCheck>([109]) -> ([121]);
store_temp<GasBuiltin>([82]) -> ([122]);
store_temp<System>([83]) -> ([123]);
dup<u32>([3]) -> ([3], [124]);
store_temp<u32>([124]) -> ([124]);
dup<StorageBaseAddress>([4]) -> ([4], [125]);
store_temp<StorageBaseAddress>([125]) -> ([125]);
dup<u8>([116]) -> ([116], [126]);
store_temp<u8>([126]) -> ([126]);
function_call<user@core::integer::Storeu256::read_at_offset>([121], [122], [123], [124], [125], [126]) -> ([117], [118], [119], [120]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([120]) { fallthrough([127]) 7572([128]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([127]) -> ([129]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([129]) { fallthrough([130]) 7556([131]) };
branch_align() -> ();
u8_const<1>() -> ([132]);
u8_const<1>() -> ([133]);
store_temp<RangeCheck>([117]) -> ([136]);
store_temp<u8>([132]) -> ([137]);
store_temp<u8>([133]) -> ([138]);
function_call<user@core::integer::U8Add::add>([136], [137], [138]) -> ([134], [135]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([135]) { fallthrough([139]) 7541([140]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([139]) -> ([141]);
store_temp<RangeCheck>([134]) -> ([144]);
store_temp<u8>([116]) -> ([145]);
store_temp<u8>([141]) -> ([146]);
function_call<user@core::integer::U8Add::add>([144], [145], [146]) -> ([142], [143]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([143]) { fallthrough([147]) 7527([148]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([147]) -> ([149]);
store_temp<RangeCheck>([142]) -> ([154]);
store_temp<GasBuiltin>([118]) -> ([155]);
store_temp<System>([119]) -> ([156]);
store_temp<u32>([3]) -> ([157]);
store_temp<StorageBaseAddress>([4]) -> ([158]);
store_temp<u8>([149]) -> ([159]);
function_call<user@core::integer::Storeu256::read_at_offset>([154], [155], [156], [157], [158], [159]) -> ([150], [151], [152], [153]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([153]) { fallthrough([160]) 7515([161]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([160]) -> ([162]);
enum_match<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>([162]) { fallthrough([163]) 7501([164]) };
branch_align() -> ();
bool_not_impl([105]) -> ([165]);
struct_construct<helloERC20::pledge::PledgeInfo>([17], [33], [67], [165], [130], [163]) -> ([166]);
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 0>([166]) -> ([167]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([167]) -> ([168]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([168]) -> ([169]);
store_temp<RangeCheck>([150]) -> ([170]);
store_temp<GasBuiltin>([151]) -> ([171]);
store_temp<System>([152]) -> ([172]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([169]) -> ([173]);
return([170], [171], [172], [173]);
branch_align() -> ();
drop<core::bool>([105]) -> ();
drop<core::integer::u256>([130]) -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([164]) -> ([174]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([174]) -> ([175]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([175]) -> ([176]);
store_temp<RangeCheck>([150]) -> ([177]);
store_temp<GasBuiltin>([151]) -> ([178]);
store_temp<System>([152]) -> ([179]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([176]) -> ([180]);
return([177], [178], [179], [180]);
branch_align() -> ();
drop<core::bool>([105]) -> ();
drop<core::integer::u256>([130]) -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([161]) -> ([181]);
store_temp<RangeCheck>([150]) -> ([182]);
store_temp<GasBuiltin>([151]) -> ([183]);
store_temp<System>([152]) -> ([184]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([181]) -> ([185]);
return([182], [183], [184], [185]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<core::bool>([105]) -> ();
drop<core::integer::u256>([130]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([148]) -> ([186]);
store_temp<RangeCheck>([142]) -> ([187]);
store_temp<GasBuiltin>([118]) -> ([188]);
store_temp<System>([119]) -> ([189]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([186]) -> ([190]);
return([187], [188], [189], [190]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<core::bool>([105]) -> ();
drop<core::integer::u256>([130]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([116]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([140]) -> ([191]);
store_temp<RangeCheck>([134]) -> ([192]);
store_temp<GasBuiltin>([118]) -> ([193]);
store_temp<System>([119]) -> ([194]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([191]) -> ([195]);
return([192], [193], [194], [195]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<core::bool>([105]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([116]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([131]) -> ([196]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([196]) -> ([197]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([197]) -> ([198]);
store_temp<RangeCheck>([117]) -> ([199]);
store_temp<GasBuiltin>([118]) -> ([200]);
store_temp<System>([119]) -> ([201]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([198]) -> ([202]);
return([199], [200], [201], [202]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<core::bool>([105]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([116]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([128]) -> ([203]);
store_temp<RangeCheck>([117]) -> ([204]);
store_temp<GasBuiltin>([118]) -> ([205]);
store_temp<System>([119]) -> ([206]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([203]) -> ([207]);
return([204], [205], [206], [207]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<core::bool>([105]) -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([115]) -> ([208]);
store_temp<RangeCheck>([109]) -> ([209]);
store_temp<GasBuiltin>([82]) -> ([210]);
store_temp<System>([83]) -> ([211]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([208]) -> ([212]);
return([209], [210], [211], [212]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<u8>([77]) -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([87]) -> ([213]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([213]) -> ([214]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([214]) -> ([215]);
store_temp<RangeCheck>([70]) -> ([216]);
store_temp<GasBuiltin>([85]) -> ([217]);
store_temp<System>([86]) -> ([218]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([215]) -> ([219]);
return([216], [217], [218], [219]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u64>([67]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([76]) -> ([220]);
store_temp<RangeCheck>([70]) -> ([221]);
store_temp<GasBuiltin>([57]) -> ([222]);
store_temp<System>([58]) -> ([223]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([220]) -> ([224]);
return([221], [222], [223], [224]);
branch_align() -> ();
drop<Unit>([68]) -> ();
drop<u64>([17]) -> ();
drop<u8>([52]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
array_new<felt252>() -> ([225]);
felt252_const<7269940625183577871052929410204041567614516>() -> ([226]);
store_temp<felt252>([226]) -> ([226]);
array_append<felt252>([225], [226]) -> ([227]);
struct_construct<core::panics::Panic>() -> ([228]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([228], [227]) -> ([229]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([229]) -> ([230]);
store_temp<RangeCheck>([63]) -> ([231]);
store_temp<GasBuiltin>([57]) -> ([232]);
store_temp<System>([58]) -> ([233]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([230]) -> ([234]);
return([231], [232], [233], [234]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<u8>([52]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([62]) -> ([235]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([235]) -> ([236]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([236]) -> ([237]);
store_temp<RangeCheck>([45]) -> ([238]);
store_temp<GasBuiltin>([60]) -> ([239]);
store_temp<System>([61]) -> ([240]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([237]) -> ([241]);
return([238], [239], [240], [241]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([51]) -> ([242]);
store_temp<RangeCheck>([45]) -> ([243]);
store_temp<GasBuiltin>([21]) -> ([244]);
store_temp<System>([22]) -> ([245]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([242]) -> ([246]);
return([243], [244], [245], [246]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<core::integer::u256>([33]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([19]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([43]) -> ([247]);
store_temp<RangeCheck>([37]) -> ([248]);
store_temp<GasBuiltin>([21]) -> ([249]);
store_temp<System>([22]) -> ([250]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([247]) -> ([251]);
return([248], [249], [250], [251]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([19]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([34]) -> ([252]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([252]) -> ([253]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([253]) -> ([254]);
store_temp<RangeCheck>([20]) -> ([255]);
store_temp<GasBuiltin>([21]) -> ([256]);
store_temp<System>([22]) -> ([257]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([254]) -> ([258]);
return([255], [256], [257], [258]);
branch_align() -> ();
drop<u64>([17]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
drop<u8>([19]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([31]) -> ([259]);
store_temp<RangeCheck>([20]) -> ([260]);
store_temp<GasBuiltin>([21]) -> ([261]);
store_temp<System>([22]) -> ([262]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([259]) -> ([263]);
return([260], [261], [262], [263]);
branch_align() -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>, 1>([18]) -> ([264]);
struct_construct<Tuple<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>>([264]) -> ([265]);
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 0>([265]) -> ([266]);
store_temp<RangeCheck>([5]) -> ([267]);
store_temp<GasBuiltin>([6]) -> ([268]);
store_temp<System>([7]) -> ([269]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([266]) -> ([270]);
return([267], [268], [269], [270]);
branch_align() -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>, 1>([15]) -> ([271]);
store_temp<RangeCheck>([5]) -> ([272]);
store_temp<GasBuiltin>([6]) -> ([273]);
store_temp<System>([7]) -> ([274]);
store_temp<core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>>([271]) -> ([275]);
return([272], [273], [274], [275]);
enum_match<core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 7732([2]) };
branch_align() -> ();
struct_construct<Tuple<helloERC20::pledge::PledgeInfo>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>>([8]) -> ([9]);
return([9]);
enum_match<core::result::Result::<core::integer::u64, core::integer::u64>>([0]) { fallthrough([2]) 7745([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u64>>([2]) -> ([4]);
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 0>([4]) -> ([5]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u64>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<core::panics::Panic>() -> ([9]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([9], [8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u64,)>, 1>([10]) -> ([11]);
store_temp<core::panics::PanicResult::<(core::integer::u64,)>>([11]) -> ([12]);
return([12]);
enum_init<helloERC20::pledge::pledge::Event, 1>([0]) -> ([1]);
store_temp<helloERC20::pledge::pledge::Event>([1]) -> ([2]);
return([2]);
enum_match<helloERC20::pledge::pledge::Event>([0]) { fallthrough([3]) 7770([4]) };
branch_align() -> ();
felt252_const<820838459996532873013020506026897946544279595835754721858452259184725920705>() -> ([5]);
store_temp<felt252>([5]) -> ([5]);
array_append<felt252>([1], [5]) -> ([6]);
store_temp<helloERC20::pledge::pledge::TransferStarking>([3]) -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Array<felt252>>([2]) -> ([12]);
function_call<user@helloERC20::pledge::pledge::TransferStarkingIsEvent::append_keys_and_data>([10], [11], [12]) -> ([7], [8], [9]);
drop<Unit>([9]) -> ();
store_temp<Array<felt252>>([7]) -> ([13]);
store_temp<Array<felt252>>([8]) -> ([14]);
jump() { 7781() };
branch_align() -> ();
felt252_const<602617684354587743731238934093348436560137034424203693318834094005509508215>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([1], [15]) -> ([16]);
store_temp<helloERC20::pledge::pledge::withdraw>([4]) -> ([20]);
store_temp<Array<felt252>>([16]) -> ([21]);
store_temp<Array<felt252>>([2]) -> ([22]);
function_call<user@helloERC20::pledge::pledge::withdrawIsEvent::append_keys_and_data>([20], [21], [22]) -> ([17], [18], [19]);
drop<Unit>([19]) -> ();
store_temp<Array<felt252>>([17]) -> ([13]);
store_temp<Array<felt252>>([18]) -> ([14]);
struct_construct<Unit>() -> ([23]);
rename<Array<felt252>>([13]) -> ([24]);
rename<Array<felt252>>([14]) -> ([25]);
store_temp<Unit>([23]) -> ([26]);
return([24], [25], [26]);
drop<helloERC20::pledge::pledge::pledge_rate::ContractState>([3]) -> ();
storage_base_address_const<1164458144253964663622203478451439654351894770488648785536109950361477525610>() -> ([4]);
u32_const<0>() -> ([5]);
store_temp<RangeCheck>([0]) -> ([10]);
store_temp<GasBuiltin>([1]) -> ([11]);
store_temp<System>([2]) -> ([12]);
store_temp<u32>([5]) -> ([13]);
store_temp<StorageBaseAddress>([4]) -> ([14]);
function_call<user@core::starknet::storage_access::StoreU8::read>([10], [11], [12], [13], [14]) -> ([6], [7], [8], [9]);
enum_match<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([9]) { fallthrough([15]) 7817([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([15]) -> ([17]);
store_temp<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([17]) -> ([19]);
function_call<user@core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall>([19]) -> ([18]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([18]) { fallthrough([20]) 7810([21]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([20]) -> ([22]);
struct_construct<Tuple<u8>>([22]) -> ([23]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([23]) -> ([24]);
store_temp<RangeCheck>([6]) -> ([25]);
store_temp<GasBuiltin>([7]) -> ([26]);
store_temp<System>([8]) -> ([27]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([24]) -> ([28]);
return([25], [26], [27], [28]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([21]) -> ([29]);
store_temp<RangeCheck>([6]) -> ([30]);
store_temp<GasBuiltin>([7]) -> ([31]);
store_temp<System>([8]) -> ([32]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([29]) -> ([33]);
return([30], [31], [32], [33]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([16]) -> ([34]);
store_temp<RangeCheck>([6]) -> ([35]);
store_temp<GasBuiltin>([7]) -> ([36]);
store_temp<System>([8]) -> ([37]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([34]) -> ([38]);
return([35], [36], [37], [38]);
upcast<u8, u128>([0]) -> ([1]);
u128_const<0>() -> ([2]);
struct_construct<core::integer::u256>([1], [2]) -> ([3]);
store_temp<core::integer::u256>([3]) -> ([4]);
return([4]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_checked_mul>([5], [6], [7]) -> ([3], [4]);
enum_match<core::option::Option::<core::integer::u256>>([4]) { fallthrough([8]) 7840([9]) };
branch_align() -> ();
struct_construct<Tuple<core::integer::u256>>([8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([10]) -> ([11]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([11]) -> ([13]);
return([12], [13]);
branch_align() -> ();
drop<Unit>([9]) -> ();
array_new<felt252>() -> ([14]);
felt252_const<39879774624083218221772669863277689073527>() -> ([15]);
store_temp<felt252>([15]) -> ([15]);
array_append<felt252>([14], [15]) -> ([16]);
struct_construct<core::panics::Panic>() -> ([17]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([17], [16]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([18]) -> ([19]);
store_temp<RangeCheck>([3]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([19]) -> ([21]);
return([20], [21]);
upcast<u64, u128>([0]) -> ([1]);
u128_const<0>() -> ([2]);
struct_construct<core::integer::u256>([1], [2]) -> ([3]);
store_temp<core::integer::u256>([3]) -> ([4]);
return([4]);
store_temp<core::integer::u256>([2]) -> ([4]);
function_call<user@core::integer::U256TryIntoNonZero::try_into>([4]) -> ([3]);
enum_match<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>>([3]) { fallthrough([5]) 7890([6]) };
branch_align() -> ();
struct_deconstruct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>>([5]) -> ([7]);
enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([7]) { fallthrough([8]) 7877([9]) };
branch_align() -> ();
u256_safe_divmod([0], [1], [8]) -> ([10], [11], [12], [13]);
store_temp<RangeCheck>([10]) -> ([16]);
store_temp<U128MulGuarantee>([13]) -> ([17]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([16], [17]) -> ([14], [15]);
drop<Unit>([15]) -> ();
struct_construct<Tuple<core::integer::u256, core::integer::u256>>([11], [12]) -> ([18]);
struct_deconstruct<Tuple<core::integer::u256, core::integer::u256>>([18]) -> ([19], [20]);
drop<core::integer::u256>([20]) -> ();
struct_construct<Tuple<core::integer::u256>>([19]) -> ([21]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 0>([21]) -> ([22]);
store_temp<RangeCheck>([14]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([22]) -> ([24]);
return([23], [24]);
branch_align() -> ();
drop<Unit>([9]) -> ();
drop<core::integer::u256>([1]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<5420154128225384396790819266608>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::panics::Panic>() -> ([28]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([0]) -> ([31]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([30]) -> ([32]);
return([31], [32]);
branch_align() -> ();
drop<core::integer::u256>([1]) -> ();
enum_init<core::panics::PanicResult::<(core::integer::u256,)>, 1>([6]) -> ([33]);
store_temp<RangeCheck>([0]) -> ([34]);
store_temp<core::panics::PanicResult::<(core::integer::u256,)>>([33]) -> ([35]);
return([34], [35]);
enum_init<helloERC20::pledge::pledge::Event, 0>([0]) -> ([1]);
store_temp<helloERC20::pledge::pledge::Event>([1]) -> ([2]);
return([2]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 7931([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::u128_try_from_felt252>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u128>>([13]) { fallthrough([16]) 7917([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<476442828812030857794232422692155113556837216824>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::panics::Panic>() -> ([28]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
contract_address_try_from_felt252([0], [1]) { fallthrough([2], [3]) 7946([4]) };
branch_align() -> ();
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 0>([3]) -> ([5]);
store_temp<RangeCheck>([2]) -> ([6]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([5]) -> ([7]);
jump() { 7951() };
branch_align() -> ();
struct_construct<Unit>() -> ([8]);
enum_init<core::option::Option::<core::starknet::contract_address::ContractAddress>, 1>([8]) -> ([9]);
store_temp<RangeCheck>([4]) -> ([6]);
store_temp<core::option::Option::<core::starknet::contract_address::ContractAddress>>([9]) -> ([7]);
rename<RangeCheck>([6]) -> ([10]);
rename<core::option::Option::<core::starknet::contract_address::ContractAddress>>([7]) -> ([11]);
return([10], [11]);
enum_match<core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 7960([2]) };
branch_align() -> ();
struct_construct<Tuple<Box<core::starknet::info::ExecutionInfo>>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>>([8]) -> ([9]);
return([9]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_add([0], [4], [6]) { fallthrough([7], [8]) 7976([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 7982() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_add([14], [3], [5]) { fallthrough([21], [22]) 7990([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 8010() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_add([23], [19], [29]) { fallthrough([30], [31]) 8000([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 8008() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
u128_overflowing_sub([0], [4], [6]) { fallthrough([7], [8]) 8023([9], [10]) };
branch_align() -> ();
struct_construct<Unit>() -> ([11]);
enum_init<core::bool, 0>([11]) -> ([12]);
struct_construct<Tuple<u128, core::bool>>([8], [12]) -> ([13]);
store_temp<RangeCheck>([7]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([13]) -> ([15]);
jump() { 8029() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
struct_construct<Tuple<u128, core::bool>>([10], [17]) -> ([18]);
store_temp<RangeCheck>([9]) -> ([14]);
store_temp<Tuple<u128, core::bool>>([18]) -> ([15]);
struct_deconstruct<Tuple<u128, core::bool>>([15]) -> ([19], [20]);
u128_overflowing_sub([14], [3], [5]) { fallthrough([21], [22]) 8037([23], [24]) };
branch_align() -> ();
struct_construct<core::integer::u256>([22], [19]) -> ([25]);
struct_construct<Tuple<core::integer::u256, core::bool>>([25], [20]) -> ([26]);
store_temp<RangeCheck>([21]) -> ([27]);
store_temp<Tuple<core::integer::u256, core::bool>>([26]) -> ([28]);
jump() { 8057() };
branch_align() -> ();
u128_const<1>() -> ([29]);
store_temp<u128>([29]) -> ([29]);
u128_overflowing_sub([23], [19], [29]) { fallthrough([30], [31]) 8047([32], [33]) };
branch_align() -> ();
struct_construct<core::integer::u256>([24], [31]) -> ([34]);
struct_construct<Tuple<core::integer::u256, core::bool>>([34], [20]) -> ([35]);
store_temp<RangeCheck>([30]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([35]) -> ([37]);
jump() { 8055() };
branch_align() -> ();
drop<core::bool>([20]) -> ();
struct_construct<core::integer::u256>([24], [33]) -> ([38]);
struct_construct<Unit>() -> ([39]);
enum_init<core::bool, 1>([39]) -> ([40]);
struct_construct<Tuple<core::integer::u256, core::bool>>([38], [40]) -> ([41]);
store_temp<RangeCheck>([32]) -> ([36]);
store_temp<Tuple<core::integer::u256, core::bool>>([41]) -> ([37]);
rename<RangeCheck>([36]) -> ([27]);
rename<Tuple<core::integer::u256, core::bool>>([37]) -> ([28]);
rename<RangeCheck>([27]) -> ([42]);
rename<Tuple<core::integer::u256, core::bool>>([28]) -> ([43]);
return([42], [43]);
u8_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 8066([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([7]) -> ([9]);
jump() { 8070() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([10]) -> ([9]);
felt252_const<608642104203229548495787928534675319>() -> ([11]);
rename<core::result::Result::<core::integer::u8, core::integer::u8>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>([13], [14]) -> ([12]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([12]) { fallthrough([15]) 8082([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([15]) -> ([17]);
struct_construct<Tuple<u8>>([17]) -> ([18]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([22]) -> ([24]);
return([23], [24]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 8119([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::Felt252TryIntoU64::try_into>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u64>>([13]) { fallthrough([16]) 8105([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<7269940625183577871052929410204041567614516>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::panics::Panic>() -> ([28]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
dup<StorageBaseAddress>([4]) -> ([4], [7]);
dup<u8>([5]) -> ([5], [8]);
storage_address_from_base_and_offset([7], [8]) -> ([6]);
dup<u32>([3]) -> ([3], [9]);
store_temp<StorageAddress>([6]) -> ([6]);
storage_read_syscall([1], [2], [9], [6]) { fallthrough([10], [11], [12]) 8222([13], [14], [15]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([18]);
store_temp<felt252>([12]) -> ([19]);
function_call<user@core::integer::u128_try_from_felt252>([18], [19]) -> ([16], [17]);
store_temp<GasBuiltin>([10]) -> ([10]);
store_temp<System>([11]) -> ([11]);
enum_match<core::option::Option::<core::integer::u128>>([17]) { fallthrough([20]) 8205([21]) };
branch_align() -> ();
u8_const<1>() -> ([22]);
store_temp<RangeCheck>([16]) -> ([25]);
store_temp<u8>([5]) -> ([26]);
store_temp<u8>([22]) -> ([27]);
function_call<user@core::integer::U8Add::add>([25], [26], [27]) -> ([23], [24]);
enum_match<core::panics::PanicResult::<(core::integer::u8,)>>([24]) { fallthrough([28]) 8195([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([28]) -> ([30]);
storage_address_from_base_and_offset([4], [30]) -> ([31]);
store_temp<StorageAddress>([31]) -> ([31]);
storage_read_syscall([10], [11], [3], [31]) { fallthrough([32], [33], [34]) 8185([35], [36], [37]) };
branch_align() -> ();
store_temp<RangeCheck>([23]) -> ([40]);
store_temp<felt252>([34]) -> ([41]);
function_call<user@core::integer::u128_try_from_felt252>([40], [41]) -> ([38], [39]);
store_temp<GasBuiltin>([32]) -> ([32]);
store_temp<System>([33]) -> ([33]);
enum_match<core::option::Option::<core::integer::u128>>([39]) { fallthrough([42]) 8170([43]) };
branch_align() -> ();
struct_construct<core::integer::u256>([20], [42]) -> ([44]);
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 0>([44]) -> ([45]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([45]) -> ([46]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([46]) -> ([47]);
store_temp<RangeCheck>([38]) -> ([48]);
store_temp<GasBuiltin>([32]) -> ([49]);
store_temp<System>([33]) -> ([50]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([47]) -> ([51]);
return([48], [49], [50], [51]);
branch_align() -> ();
drop<Unit>([43]) -> ();
drop<u128>([20]) -> ();
array_new<felt252>() -> ([52]);
felt252_const<476442828812030857794232422692155113556837216824>() -> ([53]);
store_temp<felt252>([53]) -> ([53]);
array_append<felt252>([52], [53]) -> ([54]);
struct_construct<core::panics::Panic>() -> ([55]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([55], [54]) -> ([56]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([56]) -> ([57]);
store_temp<RangeCheck>([38]) -> ([58]);
store_temp<GasBuiltin>([32]) -> ([59]);
store_temp<System>([33]) -> ([60]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([57]) -> ([61]);
return([58], [59], [60], [61]);
branch_align() -> ();
drop<u128>([20]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([37]) -> ([62]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([62]) -> ([63]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([63]) -> ([64]);
store_temp<RangeCheck>([23]) -> ([65]);
store_temp<GasBuiltin>([35]) -> ([66]);
store_temp<System>([36]) -> ([67]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([64]) -> ([68]);
return([65], [66], [67], [68]);
branch_align() -> ();
drop<u128>([20]) -> ();
drop<u32>([3]) -> ();
drop<StorageBaseAddress>([4]) -> ();
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([69]);
store_temp<RangeCheck>([23]) -> ([70]);
store_temp<GasBuiltin>([10]) -> ([71]);
store_temp<System>([11]) -> ([72]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([69]) -> ([73]);
return([70], [71], [72], [73]);
branch_align() -> ();
drop<Unit>([21]) -> ();
drop<u8>([5]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
array_new<felt252>() -> ([74]);
felt252_const<476442828812030857794232422692155113556837216824>() -> ([75]);
store_temp<felt252>([75]) -> ([75]);
array_append<felt252>([74], [75]) -> ([76]);
struct_construct<core::panics::Panic>() -> ([77]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([77], [76]) -> ([78]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 1>([78]) -> ([79]);
store_temp<RangeCheck>([16]) -> ([80]);
store_temp<GasBuiltin>([10]) -> ([81]);
store_temp<System>([11]) -> ([82]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([79]) -> ([83]);
return([80], [81], [82], [83]);
branch_align() -> ();
drop<u8>([5]) -> ();
drop<StorageBaseAddress>([4]) -> ();
drop<u32>([3]) -> ();
enum_init<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>, 1>([15]) -> ([84]);
struct_construct<Tuple<core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>>>([84]) -> ([85]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>, 0>([85]) -> ([86]);
store_temp<RangeCheck>([0]) -> ([87]);
store_temp<GasBuiltin>([13]) -> ([88]);
store_temp<System>([14]) -> ([89]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>>([86]) -> ([90]);
return([87], [88], [89], [90]);
dup<helloERC20::pledge::pledge::TransferStarking>([0]) -> ([0], [3]);
struct_deconstruct<helloERC20::pledge::pledge::TransferStarking>([3]) -> ([4], [5]);
drop<felt252>([5]) -> ();
store_temp<ContractAddress>([4]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_deconstruct<helloERC20::pledge::pledge::TransferStarking>([0]) -> ([10], [11]);
drop<ContractAddress>([10]) -> ();
store_temp<felt252>([11]) -> ([14]);
store_temp<Array<felt252>>([2]) -> ([15]);
function_call<user@core::Felt252Serde::serialize>([14], [15]) -> ([12], [13]);
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([16]);
store_temp<Array<felt252>>([6]) -> ([17]);
store_temp<Array<felt252>>([12]) -> ([18]);
store_temp<Unit>([16]) -> ([19]);
return([17], [18], [19]);
dup<helloERC20::pledge::pledge::withdraw>([0]) -> ([0], [3]);
struct_deconstruct<helloERC20::pledge::pledge::withdraw>([3]) -> ([4], [5]);
drop<core::integer::u256>([5]) -> ();
store_temp<ContractAddress>([4]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::starknet::contract_address::ContractAddressSerde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_deconstruct<helloERC20::pledge::pledge::withdraw>([0]) -> ([10], [11]);
drop<ContractAddress>([10]) -> ();
store_temp<core::integer::u256>([11]) -> ([14]);
store_temp<Array<felt252>>([2]) -> ([15]);
function_call<user@core::integer::u256Serde::serialize>([14], [15]) -> ([12], [13]);
drop<Unit>([13]) -> ();
struct_construct<Unit>() -> ([16]);
store_temp<Array<felt252>>([6]) -> ([17]);
store_temp<Array<felt252>>([12]) -> ([18]);
store_temp<Unit>([16]) -> ([19]);
return([17], [18], [19]);
storage_address_from_base([4]) -> ([5]);
storage_read_syscall([1], [2], [3], [5]) { fallthrough([6], [7], [8]) 8302([9], [10], [11]) };
branch_align() -> ();
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<felt252>([8]) -> ([15]);
function_call<user@core::integer::Felt252TryIntoU8::try_into>([14], [15]) -> ([12], [13]);
store_temp<GasBuiltin>([6]) -> ([6]);
store_temp<System>([7]) -> ([7]);
enum_match<core::option::Option::<core::integer::u8>>([13]) { fallthrough([16]) 8288([17]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 0>([16]) -> ([18]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([18]) -> ([19]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([19]) -> ([20]);
store_temp<RangeCheck>([12]) -> ([21]);
store_temp<GasBuiltin>([6]) -> ([22]);
store_temp<System>([7]) -> ([23]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([20]) -> ([24]);
return([21], [22], [23], [24]);
branch_align() -> ();
drop<Unit>([17]) -> ();
array_new<felt252>() -> ([25]);
felt252_const<110930490496575599150170734222081291576>() -> ([26]);
store_temp<felt252>([26]) -> ([26]);
array_append<felt252>([25], [26]) -> ([27]);
struct_construct<core::panics::Panic>() -> ([28]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([28], [27]) -> ([29]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 1>([29]) -> ([30]);
store_temp<RangeCheck>([12]) -> ([31]);
store_temp<GasBuiltin>([6]) -> ([32]);
store_temp<System>([7]) -> ([33]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([30]) -> ([34]);
return([31], [32], [33], [34]);
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>, 1>([11]) -> ([35]);
struct_construct<Tuple<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>>([35]) -> ([36]);
enum_init<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>, 0>([36]) -> ([37]);
store_temp<RangeCheck>([0]) -> ([38]);
store_temp<GasBuiltin>([9]) -> ([39]);
store_temp<System>([10]) -> ([40]);
store_temp<core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>>([37]) -> ([41]);
return([38], [39], [40], [41]);
enum_match<core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>>([0]) { fallthrough([1]) 8317([2]) };
branch_align() -> ();
struct_construct<Tuple<u8>>([1]) -> ([3]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([3]) -> ([4]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([4]) -> ([5]);
return([5]);
branch_align() -> ();
struct_construct<core::panics::Panic>() -> ([6]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([6], [2]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([8]) -> ([9]);
return([9]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<core::integer::u256>([1]) -> ([6]);
store_temp<core::integer::u256>([2]) -> ([7]);
function_call<user@core::integer::u256_overflow_mul>([5], [6], [7]) -> ([3], [4]);
struct_deconstruct<Tuple<core::integer::u256, core::bool>>([4]) -> ([8], [9]);
enum_match<core::bool>([9]) { fallthrough([10]) 8334([11]) };
branch_align() -> ();
drop<Unit>([10]) -> ();
enum_init<core::option::Option::<core::integer::u256>, 0>([8]) -> ([12]);
store_temp<core::option::Option::<core::integer::u256>>([12]) -> ([13]);
jump() { 8340() };
branch_align() -> ();
drop<Unit>([11]) -> ();
drop<core::integer::u256>([8]) -> ();
struct_construct<Unit>() -> ([14]);
enum_init<core::option::Option::<core::integer::u256>, 1>([14]) -> ([15]);
store_temp<core::option::Option::<core::integer::u256>>([15]) -> ([13]);
store_temp<RangeCheck>([3]) -> ([16]);
store_temp<core::option::Option::<core::integer::u256>>([13]) -> ([17]);
return([16], [17]);
store_temp<core::integer::u256>([0]) -> ([2]);
function_call<user@core::integer::u256_as_non_zero>([2]) -> ([1]);
enum_match<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([1]) { fallthrough([3]) 8353([4]) };
branch_align() -> ();
struct_deconstruct<Tuple<NonZero<core::integer::u256>>>([3]) -> ([5]);
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>([5]) -> ([6]);
struct_construct<Tuple<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>>([6]) -> ([7]);
enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 0>([7]) -> ([8]);
store_temp<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>>([8]) -> ([9]);
return([9]);
branch_align() -> ();
enum_init<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>, 1>([4]) -> ([10]);
store_temp<core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>>([10]) -> ([11]);
return([11]);
u128_mul_guarantee_verify([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
store_temp<RangeCheck>([2]) -> ([4]);
store_temp<Unit>([3]) -> ([5]);
return([4], [5]);
enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>([0]) { fallthrough([2]) 8369([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u8>>([2]) -> ([4]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 0>([4]) -> ([5]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u8>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<core::panics::Panic>() -> ([9]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([9], [8]) -> ([10]);
enum_init<core::panics::PanicResult::<(core::integer::u8,)>, 1>([10]) -> ([11]);
store_temp<core::panics::PanicResult::<(core::integer::u8,)>>([11]) -> ([12]);
return([12]);
rename<ContractAddress>([0]) -> ([2]);
contract_address_to_felt252([2]) -> ([3]);
snapshot_take<felt252>([3]) -> ([4], [5]);
drop<felt252>([4]) -> ();
store_temp<felt252>([5]) -> ([8]);
store_temp<Array<felt252>>([1]) -> ([9]);
function_call<user@core::Felt252Serde::serialize>([8], [9]) -> ([6], [7]);
drop<Unit>([7]) -> ();
struct_construct<Unit>() -> ([10]);
store_temp<Array<felt252>>([6]) -> ([11]);
store_temp<Unit>([10]) -> ([12]);
return([11], [12]);
struct_deconstruct<core::integer::u256>([1]) -> ([3], [4]);
struct_deconstruct<core::integer::u256>([2]) -> ([5], [6]);
dup<u128>([3]) -> ([3], [10]);
dup<u128>([5]) -> ([5], [11]);
u128_guarantee_mul([10], [11]) -> ([7], [8], [9]);
store_temp<RangeCheck>([0]) -> ([14]);
store_temp<U128MulGuarantee>([9]) -> ([15]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([14], [15]) -> ([12], [13]);
drop<Unit>([13]) -> ();
struct_construct<Tuple<u128, u128>>([7], [8]) -> ([16]);
struct_deconstruct<Tuple<u128, u128>>([16]) -> ([17], [18]);
dup<u128>([6]) -> ([6], [22]);
u128_guarantee_mul([3], [22]) -> ([19], [20], [21]);
store_temp<RangeCheck>([12]) -> ([25]);
store_temp<U128MulGuarantee>([21]) -> ([26]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([25], [26]) -> ([23], [24]);
drop<Unit>([24]) -> ();
struct_construct<Tuple<u128, u128>>([19], [20]) -> ([27]);
struct_deconstruct<Tuple<u128, u128>>([27]) -> ([28], [29]);
dup<u128>([4]) -> ([4], [33]);
u128_guarantee_mul([33], [5]) -> ([30], [31], [32]);
store_temp<RangeCheck>([23]) -> ([36]);
store_temp<U128MulGuarantee>([32]) -> ([37]);
function_call<user@core::integer::U128MulGuaranteeDestruct::destruct>([36], [37]) -> ([34], [35]);
drop<Unit>([35]) -> ();
struct_construct<Tuple<u128, u128>>([30], [31]) -> ([38]);
struct_deconstruct<Tuple<u128, u128>>([38]) -> ([39], [40]);
store_temp<u128>([17]) -> ([17]);
store_temp<u128>([29]) -> ([29]);
store_temp<u128>([40]) -> ([40]);
store_temp<u128>([18]) -> ([18]);
store_temp<u128>([28]) -> ([28]);
store_temp<u128>([39]) -> ([39]);
u128_overflowing_add([34], [17], [29]) { fallthrough([41], [42]) 8520([43], [44]) };
branch_align() -> ();
snapshot_take<u128>([28]) -> ([45], [46]);
drop<u128>([45]) -> ();
u128_const<0>() -> ([47]);
snapshot_take<u128>([47]) -> ([48], [49]);
drop<u128>([48]) -> ();
rename<u128>([46]) -> ([50]);
snapshot_take<u128>([50]) -> ([51], [52]);
drop<u128>([51]) -> ();
rename<u128>([49]) -> ([53]);
snapshot_take<u128>([53]) -> ([54], [55]);
drop<u128>([54]) -> ();
rename<u128>([52]) -> ([56]);
rename<u128>([55]) -> ([57]);
store_temp<RangeCheck>([41]) -> ([41]);
u128_eq([56], [57]) { fallthrough() 8445() };
branch_align() -> ();
drop<u128>([6]) -> ();
drop<u128>([4]) -> ();
drop<u128>([39]) -> ();
jump() { 8512() };
branch_align() -> ();
snapshot_take<u128>([39]) -> ([58], [59]);
drop<u128>([58]) -> ();
u128_const<0>() -> ([60]);
snapshot_take<u128>([60]) -> ([61], [62]);
drop<u128>([61]) -> ();
rename<u128>([59]) -> ([63]);
snapshot_take<u128>([63]) -> ([64], [65]);
drop<u128>([64]) -> ();
rename<u128>([62]) -> ([66]);
snapshot_take<u128>([66]) -> ([67], [68]);
drop<u128>([67]) -> ();
rename<u128>([65]) -> ([69]);
rename<u128>([68]) -> ([70]);
u128_eq([69], [70]) { fallthrough() 8465() };
branch_align() -> ();
struct_construct<Unit>() -> ([71]);
enum_init<core::bool, 0>([71]) -> ([72]);
store_temp<core::bool>([72]) -> ([73]);
jump() { 8469() };
branch_align() -> ();
struct_construct<Unit>() -> ([74]);
enum_init<core::bool, 1>([74]) -> ([75]);
store_temp<core::bool>([75]) -> ([73]);
bool_not_impl([73]) -> ([76]);
store_temp<core::bool>([76]) -> ([76]);
enum_match<core::bool>([76]) { fallthrough([77]) 8508([78]) };
branch_align() -> ();
drop<Unit>([77]) -> ();
u128_const<0>() -> ([79]);
store_temp<u128>([79]) -> ([79]);
u128_overflowing_sub([41], [79], [4]) { fallthrough([80], [81]) 8485([82], [83]) };
branch_align() -> ();
drop<u128>([81]) -> ();
drop<u128>([6]) -> ();
struct_construct<Unit>() -> ([84]);
enum_init<core::bool, 0>([84]) -> ([85]);
store_temp<RangeCheck>([80]) -> ([86]);
store_temp<core::bool>([85]) -> ([87]);
jump() { 8505() };
branch_align() -> ();
drop<u128>([83]) -> ();
u128_const<0>() -> ([88]);
store_temp<u128>([88]) -> ([88]);
u128_overflowing_sub([82], [88], [6]) { fallthrough([89], [90]) 8497([91], [92]) };
branch_align() -> ();
drop<u128>([90]) -> ();
struct_construct<Unit>() -> ([93]);
enum_init<core::bool, 0>([93]) -> ([94]);
store_temp<RangeCheck>([89]) -> ([95]);
store_temp<core::bool>([94]) -> ([96]);
jump() { 8503() };
branch_align() -> ();
drop<u128>([92]) -> ();
struct_construct<Unit>() -> ([97]);
enum_init<core::bool, 1>([97]) -> ([98]);
store_temp<RangeCheck>([91]) -> ([95]);
store_temp<core::bool>([98]) -> ([96]);
rename<RangeCheck>([95]) -> ([86]);
rename<core::bool>([96]) -> ([87]);
rename<RangeCheck>([86]) -> ([99]);
rename<core::bool>([87]) -> ([100]);
jump() { 8516() };
branch_align() -> ();
drop<Unit>([78]) -> ();
drop<u128>([6]) -> ();
drop<u128>([4]) -> ();
struct_construct<Unit>() -> ([101]);
enum_init<core::bool, 1>([101]) -> ([102]);
store_temp<RangeCheck>([41]) -> ([99]);
store_temp<core::bool>([102]) -> ([100]);
struct_construct<Tuple<u128, core::bool>>([42], [100]) -> ([103]);
store_temp<RangeCheck>([99]) -> ([104]);
store_temp<Tuple<u128, core::bool>>([103]) -> ([105]);
jump() { 8530() };
branch_align() -> ();
drop<u128>([28]) -> ();
drop<u128>([39]) -> ();
drop<u128>([6]) -> ();
drop<u128>([4]) -> ();
struct_construct<Unit>() -> ([106]);
enum_init<core::bool, 1>([106]) -> ([107]);
struct_construct<Tuple<u128, core::bool>>([44], [107]) -> ([108]);
store_temp<RangeCheck>([43]) -> ([104]);
store_temp<Tuple<u128, core::bool>>([108]) -> ([105]);
struct_deconstruct<Tuple<u128, core::bool>>([105]) -> ([109], [110]);
u128_overflowing_add([104], [109], [40]) { fallthrough([111], [112]) 8537([113], [114]) };
branch_align() -> ();
struct_construct<Tuple<u128, core::bool>>([112], [110]) -> ([115]);
store_temp<RangeCheck>([111]) -> ([116]);
store_temp<Tuple<u128, core::bool>>([115]) -> ([117]);
jump() { 8544() };
branch_align() -> ();
drop<core::bool>([110]) -> ();
struct_construct<Unit>() -> ([118]);
enum_init<core::bool, 1>([118]) -> ([119]);
struct_construct<Tuple<u128, core::bool>>([114], [119]) -> ([120]);
store_temp<RangeCheck>([113]) -> ([116]);
store_temp<Tuple<u128, core::bool>>([120]) -> ([117]);
struct_deconstruct<Tuple<u128, core::bool>>([117]) -> ([121], [122]);
struct_construct<core::integer::u256>([18], [121]) -> ([123]);
struct_construct<Tuple<core::integer::u256, core::bool>>([123], [122]) -> ([124]);
store_temp<RangeCheck>([116]) -> ([125]);
store_temp<Tuple<core::integer::u256, core::bool>>([124]) -> ([126]);
return([125], [126]);
store_temp<core::integer::u256>([0]) -> ([2]);
function_call<user@core::integer::u256_try_as_non_zero>([2]) -> ([1]);
enum_match<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([1]) { fallthrough([3]) 8558([4]) };
branch_align() -> ();
struct_construct<Tuple<NonZero<core::integer::u256>>>([3]) -> ([5]);
enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 0>([5]) -> ([6]);
store_temp<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([6]) -> ([7]);
return([7]);
branch_align() -> ();
drop<Unit>([4]) -> ();
array_new<felt252>() -> ([8]);
felt252_const<2161886914012515606576>() -> ([9]);
store_temp<felt252>([9]) -> ([9]);
array_append<felt252>([8], [9]) -> ([10]);
struct_construct<core::panics::Panic>() -> ([11]);
struct_construct<Tuple<core::panics::Panic, Array<felt252>>>([11], [10]) -> ([12]);
enum_init<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>, 1>([12]) -> ([13]);
store_temp<core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>>([13]) -> ([14]);
return([14]);
u256_is_zero([0]) { fallthrough() 8575([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([3]) -> ([4]);
jump() { 8578() };
branch_align() -> ();
enum_init<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([5]) -> ([4]);
rename<core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>>([4]) -> ([6]);
return([6]);

helloERC20::pledge::pledge::constructor@0([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress, [6]: core::integer::u256, [7]: u8) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>);
helloERC20::pledge::pledge::unsafe_new_contract_state@124() -> (helloERC20::pledge::pledge::ContractState);
helloERC20::pledge::pledge::__external::get_total_supply@136([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::add_white_list@243([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::claim@403([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::set_rate@515([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::pledge_token@643([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::get_token_by_address@803([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::get_pledge_account_by_address@939([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::withdrew@1075([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::withdrew_profit@1210([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::get_total_pledge@1345([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::sell_starking@1452([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::check_onsell_starking@1587([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::buy_starking@1723([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::transfer_starking@1883([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__external::get_burn@2018([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: core::array::Span::<core::felt252>) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::__constructor::constructor@2125([0]: Pedersen, [1]: RangeCheck, [2]: GasBuiltin, [3]: System, [4]: core::array::Span::<core::felt252>) -> (Pedersen, RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::array::Span::<core::felt252>,)>);
helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::write@2304([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::total_supply::ContractState, [3]: core::integer::u256) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::total_supply::ContractState, ())>);
helloERC20::pledge::pledge::_owner::InternalContractStateImpl::write@2332([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::_owner::ContractState, [3]: ContractAddress) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::_owner::ContractState, ())>);
helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::write@2371([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::pledge_rate::ContractState, [3]: u8) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_rate::ContractState, ())>);
helloERC20::pledge::pledge::token_account::InternalContractStateImpl::write@2410([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::token_account::ContractState, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::token_account::ContractState, ())>);
core::starknet::use_system_implicit@2445([0]: System) -> (System, Unit);
helloERC20::pledge::pledge::token_pledge::get_total_supply@2449([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::u256Serde::serialize@2480([0]: core::integer::u256, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::starknet::contract_address::ContractAddressSerde::deserialize@2495([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::starknet::contract_address::ContractAddress>);
core::integer::u256Serde::deserialize@2519([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u256>);
helloERC20::pledge::pledge::token_pledge::add_white_list@2548([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
core::BoolSerde::serialize@2757([0]: core::bool, [1]: Array<felt252>) -> (Array<felt252>, Unit);
helloERC20::pledge::pledge::token_pledge::claim@2778([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>);
core::integer::U8Serde::deserialize@2934([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u8>);
helloERC20::pledge::pledge::token_pledge::set_rate@2976([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::ContractState, [3]: u8) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
core::integer::U64Serde::deserialize@3009([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u64>);
helloERC20::pledge::pledge::token_pledge::pledge_token@3051([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: core::integer::u256, [6]: u64) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
helloERC20::pledge::pledge::token_pledge::get_token_by_address@3344([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(core::integer::u256,)>);
helloERC20::pledge::pledge::token_pledge::get_pledge_account_by_address@3379([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>);
helloERC20::pledge::PledgeInfoSerde::serialize@3443([0]: helloERC20::pledge::PledgeInfo, [1]: Array<felt252>) -> (Array<felt252>, Unit);
helloERC20::pledge::pledge::token_pledge::withdrew@3510([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
helloERC20::pledge::pledge::token_pledge::withdrew_profit@4110([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::integer::u256)>);
helloERC20::pledge::pledge::token_pledge::get_total_pledge@4502([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
helloERC20::pledge::pledge::token_pledge::sell_starking@4533([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::felt252)>);
core::Felt252Serde::serialize@4742([0]: felt252, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::Felt252Serde::deserialize@4748([0]: core::array::Span::<core::felt252>) -> (core::array::Span::<core::felt252>, core::option::Option::<core::felt252>);
helloERC20::pledge::pledge::token_pledge::check_onsell_starking@4777([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: felt252) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>);
helloERC20::pledge::pledge::token_pledge::buy_starking@4812([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: felt252, [6]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
helloERC20::pledge::pledge::token_pledge::transfer_starking@5097([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, core::bool)>);
helloERC20::pledge::pledge::token_pledge::get_burn@5343([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::Storeu256::write@5374([0]: GasBuiltin, [1]: System, [2]: u32, [3]: StorageBaseAddress, [4]: core::integer::u256) -> (GasBuiltin, System, core::result::Result::<(), core::array::Array::<core::felt252>>);
core::starknet::SyscallResultTraitImpl::<()>::unwrap_syscall@5409([0]: core::result::Result::<(), core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<((),)>);
helloERC20::pledge::pledge::token_account::InternalContractStateImpl::address@5421([0]: RangeCheck, [1]: Pedersen, [2]: helloERC20::pledge::pledge::token_account::ContractState, [3]: ContractAddress) -> (RangeCheck, Pedersen, StorageBaseAddress);
helloERC20::pledge::pledge::total_supply::InternalContractStateImpl::read@5432([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::total_supply::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::U128Serde::serialize@5470([0]: u128, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::integer::U128Serde::deserialize@5482([0]: RangeCheck, [1]: core::array::Span::<core::felt252>) -> (RangeCheck, core::array::Span::<core::felt252>, core::option::Option::<core::integer::u128>);
helloERC20::pledge::pledge::_owner::InternalContractStateImpl::read@5524([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::_owner::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
core::starknet::info::get_caller_address@5562([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
core::integer::U256Add::add@5586([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
helloERC20::pledge::pledge::white_list::InternalContractStateImpl::write@5609([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::white_list::ContractState, [5]: ContractAddress, [6]: core::integer::u256) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::white_list::ContractState, ())>);
helloERC20::pledge::pledge::white_list::InternalContractStateImpl::read@5644([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::white_list::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::U256PartialOrd::lt@5688([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::bool);
core::integer::Felt252TryIntoU8::try_into@5767([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u8>);
core::integer::Felt252TryIntoU64::try_into@5781([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u64>);
helloERC20::pledge::pledge::token_account::InternalContractStateImpl::read@5795([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::token_account::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::U256Sub::sub@5839([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
core::starknet::info::get_block_timestamp@5862([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::integer::u64,)>);
helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::write@5884([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::pledge_account_info::ContractState, [5]: felt252, [6]: helloERC20::pledge::PledgeInfo) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account_info::ContractState, ())>);
helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::write@5932([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::total_pledge::ContractState, [3]: core::integer::u256) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::total_pledge::ContractState, ())>);
helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::read@5960([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::pledge_account::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(core::felt252,)>);
helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::read@6001([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::pledge_account_info::ContractState, [5]: felt252) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>);
core::integer::U64Serde::serialize@6045([0]: u64, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::integer::U64Sub::sub@6057([0]: RangeCheck, [1]: u64, [2]: u64) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u64,)>);
helloERC20::pledge::pledge::total_pledge::InternalContractStateImpl::read@6084([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::total_pledge::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::withdraw, helloERC20::pledge::pledge::EventwithdrawIntoEvent>@6122([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::ContractState, [3]: helloERC20::pledge::pledge::withdraw) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>);
helloERC20::pledge::pledge::ProfitImpl::_calculate_profit@6172([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::ContractState, [5]: ContractAddress) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, (core::integer::u256,))>);
core::traits::PartialEqSnap::<core::integer::u128, core::integer::U128PartialEq>::eq@6444([0]: u128, [1]: u128) -> (core::bool);
helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::write@6460([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::burn_total::ContractState, [3]: core::integer::u256) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::burn_total::ContractState, ())>);
helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::write@6488([0]: RangeCheck, [1]: GasBuiltin, [2]: Pedersen, [3]: System, [4]: helloERC20::pledge::pledge::pledge_account::ContractState, [5]: ContractAddress, [6]: felt252) -> (RangeCheck, GasBuiltin, Pedersen, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::pledge_account::ContractState, ())>);
helloERC20::pledge::pledge::ContractStateEventEmitter::emit::<helloERC20::pledge::pledge::TransferStarking, helloERC20::pledge::pledge::EventTransferStarkingIntoEvent>@6532([0]: GasBuiltin, [1]: System, [2]: helloERC20::pledge::pledge::ContractState, [3]: helloERC20::pledge::pledge::TransferStarking) -> (GasBuiltin, System, core::panics::PanicResult::<(helloERC20::pledge::pledge::ContractState, ())>);
helloERC20::pledge::pledge::burn_total::InternalContractStateImpl::read@6582([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::burn_total::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u256,)>);
core::hash::LegacyHashContractAddress::hash@6620([0]: Pedersen, [1]: felt252, [2]: ContractAddress) -> (Pedersen, felt252);
core::integer::Storeu256::read@6625([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u256>::unwrap_syscall@6704([0]: core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::u128_try_from_felt252@6716([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::integer::u128>);
core::starknet::storage_access::StoreContractAddress::read@6732([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::starknet::contract_address::ContractAddress>::unwrap_syscall@6773([0]: core::result::Result::<core::starknet::contract_address::ContractAddress, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(core::starknet::contract_address::ContractAddress,)>);
core::starknet::info::get_execution_info@6785([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
core::integer::u256_checked_add@6814([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
helloERC20::pledge::pledge::white_list::InternalContractStateImpl::address@6834([0]: RangeCheck, [1]: Pedersen, [2]: helloERC20::pledge::pledge::white_list::ContractState, [3]: ContractAddress) -> (RangeCheck, Pedersen, StorageBaseAddress);
core::integer::u256_checked_sub@6845([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::starknet::info::get_block_info@6865([0]: GasBuiltin, [1]: System) -> (GasBuiltin, System, core::panics::PanicResult::<(core::box::Box::<core::starknet::info::BlockInfo>,)>);
helloERC20::pledge::pledge::pledge_account_info::InternalContractStateImpl::address@6889([0]: RangeCheck, [1]: Pedersen, [2]: helloERC20::pledge::pledge::pledge_account_info::ContractState, [3]: felt252) -> (RangeCheck, Pedersen, StorageBaseAddress);
helloERC20::pledge::StorePledgeInfo::write@6899([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress, [5]: helloERC20::pledge::PledgeInfo) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<(), core::array::Array::<core::felt252>>,)>);
helloERC20::pledge::pledge::pledge_account::InternalContractStateImpl::address@7314([0]: RangeCheck, [1]: Pedersen, [2]: helloERC20::pledge::pledge::pledge_account::ContractState, [3]: ContractAddress) -> (RangeCheck, Pedersen, StorageBaseAddress);
core::starknet::SyscallResultTraitImpl::<core::felt252>::unwrap_syscall@7325([0]: core::result::Result::<core::felt252, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(core::felt252,)>);
helloERC20::pledge::StorePledgeInfo::read@7337([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<helloERC20::pledge::PledgeInfo>::unwrap_syscall@7726([0]: core::result::Result::<helloERC20::pledge::PledgeInfo, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(helloERC20::pledge::PledgeInfo,)>);
core::result::ResultTraitImpl::<core::integer::u64, core::integer::u64>::expect::<core::integer::u64Drop>@7738([0]: core::result::Result::<core::integer::u64, core::integer::u64>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u64,)>);
helloERC20::pledge::pledge::EventwithdrawIntoEvent::into@7754([0]: helloERC20::pledge::pledge::withdraw) -> (helloERC20::pledge::pledge::Event);
helloERC20::pledge::pledge::EventIsEvent::append_keys_and_data@7757([0]: helloERC20::pledge::pledge::Event, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
helloERC20::pledge::pledge::pledge_rate::InternalContractStateImpl::read@7786([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: helloERC20::pledge::pledge::pledge_rate::ContractState) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::integer::u8,)>);
core::integer::U8IntoU256::into@7824([0]: u8) -> (core::integer::u256);
core::integer::U256Mul::mul@7829([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
core::integer::U64IntoU256::into@7852([0]: u64) -> (core::integer::u256);
core::integer::U256Div::div@7857([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u256,)>);
helloERC20::pledge::pledge::EventTransferStarkingIntoEvent::into@7896([0]: helloERC20::pledge::pledge::TransferStarking) -> (helloERC20::pledge::pledge::Event);
core::starknet::storage_access::StoreU128::read@7899([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u128, core::array::Array::<core::felt252>>,)>);
core::starknet::contract_address::Felt252TryIntoContractAddress::try_into@7940([0]: RangeCheck, [1]: felt252) -> (RangeCheck, core::option::Option::<core::starknet::contract_address::ContractAddress>);
core::starknet::SyscallResultTraitImpl::<core::box::Box::<core::starknet::info::ExecutionInfo>>::unwrap_syscall@7954([0]: core::result::Result::<core::box::Box::<core::starknet::info::ExecutionInfo>, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(core::box::Box::<core::starknet::info::ExecutionInfo>,)>);
core::integer::u256_overflowing_add@7966([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::u256_overflow_sub@8013([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::U8Add::add@8060([0]: RangeCheck, [1]: u8, [2]: u8) -> (RangeCheck, core::panics::PanicResult::<(core::integer::u8,)>);
core::starknet::storage_access::StoreU64::read@8087([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u64, core::array::Array::<core::felt252>>,)>);
core::integer::Storeu256::read_at_offset@8128([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress, [5]: u8) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u256, core::array::Array::<core::felt252>>,)>);
helloERC20::pledge::pledge::TransferStarkingIsEvent::append_keys_and_data@8234([0]: helloERC20::pledge::pledge::TransferStarking, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
helloERC20::pledge::pledge::withdrawIsEvent::append_keys_and_data@8252([0]: helloERC20::pledge::pledge::withdraw, [1]: Array<felt252>, [2]: Array<felt252>) -> (Array<felt252>, Array<felt252>, Unit);
core::starknet::storage_access::StoreU8::read@8270([0]: RangeCheck, [1]: GasBuiltin, [2]: System, [3]: u32, [4]: StorageBaseAddress) -> (RangeCheck, GasBuiltin, System, core::panics::PanicResult::<(core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>,)>);
core::starknet::SyscallResultTraitImpl::<core::integer::u8>::unwrap_syscall@8311([0]: core::result::Result::<core::integer::u8, core::array::Array::<core::felt252>>) -> (core::panics::PanicResult::<(core::integer::u8,)>);
core::integer::u256_checked_mul@8323([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::option::Option::<core::integer::u256>);
core::integer::U256TryIntoNonZero::try_into@8343([0]: core::integer::u256) -> (core::panics::PanicResult::<(core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>,)>);
core::integer::U128MulGuaranteeDestruct::destruct@8357([0]: RangeCheck, [1]: U128MulGuarantee) -> (RangeCheck, Unit);
core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>@8362([0]: core::result::Result::<core::integer::u8, core::integer::u8>, [1]: felt252) -> (core::panics::PanicResult::<(core::integer::u8,)>);
core::starknet::contract_address::ContractAddressSerde::serialize@8378([0]: ContractAddress, [1]: Array<felt252>) -> (Array<felt252>, Unit);
core::integer::u256_overflow_mul@8390([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, Tuple<core::integer::u256, core::bool>);
core::integer::u256_as_non_zero@8550([0]: core::integer::u256) -> (core::panics::PanicResult::<(core::zeroable::NonZero::<core::integer::u256>,)>);
core::integer::u256_try_as_non_zero@8569([0]: core::integer::u256) -> (core::option::Option::<core::zeroable::NonZero::<core::integer::u256>>);
